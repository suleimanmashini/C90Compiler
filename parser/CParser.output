Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_char
   TK_const
   TK_continue
   TK_default
   TK_do
   TK_double
   TK_enum
   TK_extern
   TK_float
   TK_for
   TK_goto
   TK_long
   TK_register
   TK_short
   TK_signed
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_unsigned
   TK_volatile
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_logicAnd
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThan
   TO_moreThan
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_notEqualTo
   TO_increment
   TO_decrement
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr


State 50 conflicts: 2 shift/reduce
State 51 conflicts: 2 shift/reduce
State 59 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: STRUCTURE

    2 STRUCTURE: FUNCTION STRUCTURE
    3          | FUNCTION

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    5         | RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    6 BLOCK: STATEMENT
    7      | BLOCK STATEMENT

    8 STATEMENT: TK_return EXPRESSION TP_semiColon
    9          | EXPRESSION TP_semiColon
   10          | VARIABLE_DECLARATION TP_semiColon
   11          | SELECTION_STATEMENT

   12 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT
   13                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   14                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   15                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

   18 CONDITION: EXPRESSION TO_equalTo EXPRESSION

   19 VARIABLES: ARGUMENT_DECLARATION
   20          | ARGUMENT_DECLARATION TP_comma VARIABLES

   21 ARGUMENT_DECLARATION: RETURNTYPE T_IDENTIFIER
   22                     | RETURNTYPE TO_ampersand T_IDENTIFIER

   23 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER
   24                     | RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION

   25 RETURNTYPE: TK_void
   26           | TK_int

   27 EXPRESSION: TERM
   28           | EXPRESSION TO_plus EXPRESSION
   29           | EXPRESSION TO_minus EXPRESSION

   30 TERM: FACTOR
   31     | TERM TO_asterix FACTOR
   32     | TERM TO_divide FACTOR

   33 FACTOR: TC_integer


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 4 5 21 22 23 24
T_LBRACE (259) 4 5 13 15 16 17
T_RBRACE (260) 4 5 13 15 16 17
T_LBRACKET (261) 4 5 12 13 14 15 16 17
T_RBRACKET (262) 4 5 12 13 14 15 16 17
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268)
TK_const (269)
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273)
TK_else (274) 14 15 16 17
TK_enum (275)
TK_extern (276)
TK_float (277)
TK_for (278)
TK_goto (279)
TK_if (280) 12 13 14 15 16 17
TK_int (281) 26
TK_long (282)
TK_register (283)
TK_return (284) 8
TK_short (285)
TK_signed (286)
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293)
TK_void (294) 25
TK_volatile (295)
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 32
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304) 22
TO_logicAnd (305)
TO_asterix (306) 31
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310)
TO_moreThan (311)
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314) 18
TO_notEqualTo (315)
TO_plus (316) 28
TO_minus (317) 29
TO_increment (318)
TO_decrement (319)
TO_equal (320) 24
TP_comma (321) 20
TP_colon (322)
TP_semiColon (323) 8 9 10
TC_integer (324) 33
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
PROGRAM (80)
    on left: 1, on right: 0
STRUCTURE (81)
    on left: 2 3, on right: 1 2
FUNCTION (82)
    on left: 4 5, on right: 2 3
BLOCK (83)
    on left: 6 7, on right: 4 5 7 13 15 16 17
STATEMENT (84)
    on left: 8 9 10 11, on right: 6 7 12 14 15 16
SELECTION_STATEMENT (85)
    on left: 12 13 14 15 16 17, on right: 11
CONDITION (86)
    on left: 18, on right: 12 13 14 15 16 17
VARIABLES (87)
    on left: 19 20, on right: 5 20
ARGUMENT_DECLARATION (88)
    on left: 21 22, on right: 19 20
VARIABLE_DECLARATION (89)
    on left: 23 24, on right: 10
RETURNTYPE (90)
    on left: 25 26, on right: 4 5 21 22 23 24
EXPRESSION (91)
    on left: 27 28 29, on right: 8 9 18 24 28 29
TERM (92)
    on left: 30 31 32, on right: 27 31 32
FACTOR (93)
    on left: 33, on right: 30 31 32


State 0

    0 $accept: . PROGRAM $end

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    PROGRAM     go to state 3
    STRUCTURE   go to state 4
    FUNCTION    go to state 5
    RETURNTYPE  go to state 6


State 1

   26 RETURNTYPE: TK_int .

    $default  reduce using rule 26 (RETURNTYPE)


State 2

   25 RETURNTYPE: TK_void .

    $default  reduce using rule 25 (RETURNTYPE)


State 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 7


State 4

    1 PROGRAM: STRUCTURE .

    $default  reduce using rule 1 (PROGRAM)


State 5

    2 STRUCTURE: FUNCTION . STRUCTURE
    3          | FUNCTION .

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    $default  reduce using rule 3 (STRUCTURE)

    STRUCTURE   go to state 8
    FUNCTION    go to state 5
    RETURNTYPE  go to state 6


State 6

    4 FUNCTION: RETURNTYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    5         | RETURNTYPE . T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 9


State 7

    0 $accept: PROGRAM $end .

    $default  accept


State 8

    2 STRUCTURE: FUNCTION STRUCTURE .

    $default  reduce using rule 2 (STRUCTURE)


State 9

    4 FUNCTION: RETURNTYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    5         | RETURNTYPE T_IDENTIFIER . T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_LBRACKET  shift, and go to state 10


State 10

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET T_LBRACE BLOCK T_RBRACE
    5         | RETURNTYPE T_IDENTIFIER T_LBRACKET . VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 11
    TK_int      shift, and go to state 1
    TK_void     shift, and go to state 2

    VARIABLES             go to state 12
    ARGUMENT_DECLARATION  go to state 13
    RETURNTYPE            go to state 14


State 11

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 15


State 12

    5 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES . T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 16


State 13

   19 VARIABLES: ARGUMENT_DECLARATION .
   20          | ARGUMENT_DECLARATION . TP_comma VARIABLES

    TP_comma  shift, and go to state 17

    $default  reduce using rule 19 (VARIABLES)


State 14

   21 ARGUMENT_DECLARATION: RETURNTYPE . T_IDENTIFIER
   22                     | RETURNTYPE . TO_ampersand T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 18
    TO_ampersand  shift, and go to state 19


State 15

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    BLOCK                 go to state 23
    STATEMENT             go to state 24
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 16

    5 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 31


State 17

   20 VARIABLES: ARGUMENT_DECLARATION TP_comma . VARIABLES

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    VARIABLES             go to state 32
    ARGUMENT_DECLARATION  go to state 13
    RETURNTYPE            go to state 14


State 18

   21 ARGUMENT_DECLARATION: RETURNTYPE T_IDENTIFIER .

    $default  reduce using rule 21 (ARGUMENT_DECLARATION)


State 19

   22 ARGUMENT_DECLARATION: RETURNTYPE TO_ampersand . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 33


State 20

   12 SELECTION_STATEMENT: TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT
   13                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   14                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   15                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   16                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   17                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_LBRACKET  shift, and go to state 34


State 21

    8 STATEMENT: TK_return . EXPRESSION TP_semiColon

    TC_integer  shift, and go to state 22

    EXPRESSION  go to state 35
    TERM        go to state 29
    FACTOR      go to state 30


State 22

   33 FACTOR: TC_integer .

    $default  reduce using rule 33 (FACTOR)


State 23

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    7 BLOCK: BLOCK . STATEMENT

    T_RBRACE    shift, and go to state 36
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 37
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 24

    6 BLOCK: STATEMENT .

    $default  reduce using rule 6 (BLOCK)


State 25

   11 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 26

   10 STATEMENT: VARIABLE_DECLARATION . TP_semiColon

    TP_semiColon  shift, and go to state 38


State 27

   23 VARIABLE_DECLARATION: RETURNTYPE . T_IDENTIFIER
   24                     | RETURNTYPE . T_IDENTIFIER TO_equal EXPRESSION

    T_IDENTIFIER  shift, and go to state 39


State 28

    9 STATEMENT: EXPRESSION . TP_semiColon
   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 40
    TO_minus      shift, and go to state 41
    TP_semiColon  shift, and go to state 42


State 29

   27 EXPRESSION: TERM .
   31 TERM: TERM . TO_asterix FACTOR
   32     | TERM . TO_divide FACTOR

    TO_divide   shift, and go to state 43
    TO_asterix  shift, and go to state 44

    $default  reduce using rule 27 (EXPRESSION)


State 30

   30 TERM: FACTOR .

    $default  reduce using rule 30 (TERM)


State 31

    5 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    BLOCK                 go to state 45
    STATEMENT             go to state 24
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 32

   20 VARIABLES: ARGUMENT_DECLARATION TP_comma VARIABLES .

    $default  reduce using rule 20 (VARIABLES)


State 33

   22 ARGUMENT_DECLARATION: RETURNTYPE TO_ampersand T_IDENTIFIER .

    $default  reduce using rule 22 (ARGUMENT_DECLARATION)


State 34

   12 SELECTION_STATEMENT: TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT
   13                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   14                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   15                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   16                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    TC_integer  shift, and go to state 22

    CONDITION   go to state 46
    EXPRESSION  go to state 47
    TERM        go to state 29
    FACTOR      go to state 30


State 35

    8 STATEMENT: TK_return EXPRESSION . TP_semiColon
   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 40
    TO_minus      shift, and go to state 41
    TP_semiColon  shift, and go to state 48


State 36

    4 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 4 (FUNCTION)


State 37

    7 BLOCK: BLOCK STATEMENT .

    $default  reduce using rule 7 (BLOCK)


State 38

   10 STATEMENT: VARIABLE_DECLARATION TP_semiColon .

    $default  reduce using rule 10 (STATEMENT)


State 39

   23 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER .
   24                     | RETURNTYPE T_IDENTIFIER . TO_equal EXPRESSION

    TO_equal  shift, and go to state 49

    $default  reduce using rule 23 (VARIABLE_DECLARATION)


State 40

   28 EXPRESSION: EXPRESSION TO_plus . EXPRESSION

    TC_integer  shift, and go to state 22

    EXPRESSION  go to state 50
    TERM        go to state 29
    FACTOR      go to state 30


State 41

   29 EXPRESSION: EXPRESSION TO_minus . EXPRESSION

    TC_integer  shift, and go to state 22

    EXPRESSION  go to state 51
    TERM        go to state 29
    FACTOR      go to state 30


State 42

    9 STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 9 (STATEMENT)


State 43

   32 TERM: TERM TO_divide . FACTOR

    TC_integer  shift, and go to state 22

    FACTOR  go to state 52


State 44

   31 TERM: TERM TO_asterix . FACTOR

    TC_integer  shift, and go to state 22

    FACTOR  go to state 53


State 45

    5 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    7 BLOCK: BLOCK . STATEMENT

    T_RBRACE    shift, and go to state 54
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 37
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 46

   12 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT
   13                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE
   14                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else STATEMENT
   15                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   16                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 55


State 47

   18 CONDITION: EXPRESSION . TO_equalTo EXPRESSION
   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_equalTo  shift, and go to state 56
    TO_plus     shift, and go to state 40
    TO_minus    shift, and go to state 41


State 48

    8 STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 8 (STATEMENT)


State 49

   24 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal . EXPRESSION

    TC_integer  shift, and go to state 22

    EXPRESSION  go to state 57
    TERM        go to state 29
    FACTOR      go to state 30


State 50

   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   28           | EXPRESSION TO_plus EXPRESSION .
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 40
    TO_minus  shift, and go to state 41

    TO_plus   [reduce using rule 28 (EXPRESSION)]
    TO_minus  [reduce using rule 28 (EXPRESSION)]
    $default  reduce using rule 28 (EXPRESSION)


State 51

   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION
   29           | EXPRESSION TO_minus EXPRESSION .

    TO_plus   shift, and go to state 40
    TO_minus  shift, and go to state 41

    TO_plus   [reduce using rule 29 (EXPRESSION)]
    TO_minus  [reduce using rule 29 (EXPRESSION)]
    $default  reduce using rule 29 (EXPRESSION)


State 52

   32 TERM: TERM TO_divide FACTOR .

    $default  reduce using rule 32 (TERM)


State 53

   31 TERM: TERM TO_asterix FACTOR .

    $default  reduce using rule 31 (TERM)


State 54

    5 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 5 (FUNCTION)


State 55

   12 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT
   13                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE
   14                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else STATEMENT
   15                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_LBRACE    shift, and go to state 58
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 59
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 56

   18 CONDITION: EXPRESSION TO_equalTo . EXPRESSION

    TC_integer  shift, and go to state 22

    EXPRESSION  go to state 60
    TERM        go to state 29
    FACTOR      go to state 30


State 57

   24 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION .
   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 40
    TO_minus  shift, and go to state 41

    $default  reduce using rule 24 (VARIABLE_DECLARATION)


State 58

   13 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE
   15                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else STATEMENT
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    BLOCK                 go to state 61
    STATEMENT             go to state 24
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 59

   12 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT .
   14                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 62

    TK_else   [reduce using rule 12 (SELECTION_STATEMENT)]
    $default  reduce using rule 12 (SELECTION_STATEMENT)


State 60

   18 CONDITION: EXPRESSION TO_equalTo EXPRESSION .
   28 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   29           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 40
    TO_minus  shift, and go to state 41

    $default  reduce using rule 18 (CONDITION)


State 61

    7 BLOCK: BLOCK . STATEMENT
   13 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE
   15                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else STATEMENT
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_RBRACE    shift, and go to state 63
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 37
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 62

   14 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . T_LBRACE BLOCK T_RBRACE

    T_LBRACE    shift, and go to state 64
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 65
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 63

   13 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE .
   15                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else STATEMENT
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 66

    TK_else   [reduce using rule 13 (SELECTION_STATEMENT)]
    $default  reduce using rule 13 (SELECTION_STATEMENT)


State 64

   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE . BLOCK T_RBRACE

    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    BLOCK                 go to state 67
    STATEMENT             go to state 24
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 65

   14 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT .

    $default  reduce using rule 14 (SELECTION_STATEMENT)


State 66

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . STATEMENT
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . T_LBRACE BLOCK T_RBRACE

    T_LBRACE    shift, and go to state 68
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 69
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 67

    7 BLOCK: BLOCK . STATEMENT
   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK . T_RBRACE

    T_RBRACE    shift, and go to state 70
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 37
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 68

   17 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE . BLOCK T_RBRACE

    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    BLOCK                 go to state 71
    STATEMENT             go to state 24
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 69

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT .

    $default  reduce using rule 15 (SELECTION_STATEMENT)


State 70

   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 16 (SELECTION_STATEMENT)


State 71

    7 BLOCK: BLOCK . STATEMENT
   17 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK . T_RBRACE

    T_RBRACE    shift, and go to state 72
    TK_if       shift, and go to state 20
    TK_int      shift, and go to state 1
    TK_return   shift, and go to state 21
    TK_void     shift, and go to state 2
    TC_integer  shift, and go to state 22

    STATEMENT             go to state 37
    SELECTION_STATEMENT   go to state 25
    VARIABLE_DECLARATION  go to state 26
    RETURNTYPE            go to state 27
    EXPRESSION            go to state 28
    TERM                  go to state 29
    FACTOR                go to state 30


State 72

   17 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 17 (SELECTION_STATEMENT)
