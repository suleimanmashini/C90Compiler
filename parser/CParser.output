Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_char
   TK_const
   TK_continue
   TK_default
   TK_do
   TK_double
   TK_enum
   TK_extern
   TK_float
   TK_for
   TK_goto
   TK_long
   TK_register
   TK_short
   TK_signed
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_unsigned
   TK_volatile
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_logicAnd
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_notEqualTo
   TO_increment
   TO_decrement
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr


State 17 conflicts: 9 reduce/reduce
State 40 conflicts: 2 shift/reduce
State 41 conflicts: 2 shift/reduce
State 60 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: STRUCTURE

    2 STRUCTURE: FUNCTION STRUCTURE
    3          | FUNCTION
    4          | STATEMENT
    5          | STATEMENT STRUCTURE

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    8 BLOCK: STATEMENT
    9      | BLOCK STATEMENT

   10 STATEMENT: TK_return EXPRESSION TP_semiColon
   11          | EXPRESSION TP_semiColon
   12          | VARIABLE_DECLARATION TP_semiColon
   13          | SELECTION_STATEMENT
   14          | EXPRESSION TO_equal EXPRESSION TP_semiColon

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   18                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

   21 CONDITION: EXPRESSION TO_equalTo EXPRESSION
   22          | EXPRESSION TO_lessThan EXPRESSION
   23          | EXPRESSION TO_moreThan EXPRESSION

   24 VARIABLES: VARIABLE_DECLARATION_FUNCTION
   25          | VARIABLE_DECLARATION_FUNCTION TP_comma VARIABLES

   26 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE T_IDENTIFIER
   27                              | RETURNTYPE TO_ampersand T_IDENTIFIER

   28 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER
   29                     | RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION

   30 RETURNTYPE: TK_void
   31           | TK_int

   32 EXPRESSION: TERM
   33           | EXPRESSION TO_plus EXPRESSION
   34           | EXPRESSION TO_minus EXPRESSION
   35           | FUNCTION_CALL

   36 TERM: FACTOR
   37     | TERM TO_asterix FACTOR
   38     | TERM TO_divide FACTOR

   39 FACTOR: TC_integer
   40       | T_IDENTIFIER
   41       | FUNCTION_CALL

   42 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET T_RBRACKET
   43              | T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET

   44 EXPRESSION_STATEMENTS: EXPRESSION
   45                      | EXPRESSION TP_comma EXPRESSION_STATEMENTS


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 6 7 26 27 28 29 40 42 43
T_LBRACE (259) 6 7 16 18 19 20
T_RBRACE (260) 6 7 16 18 19 20
T_LBRACKET (261) 6 7 15 16 17 18 19 20 42 43
T_RBRACKET (262) 6 7 15 16 17 18 19 20 42 43
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268)
TK_const (269)
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273)
TK_else (274) 17 18 19 20
TK_enum (275)
TK_extern (276)
TK_float (277)
TK_for (278)
TK_goto (279)
TK_if (280) 15 16 17 18 19 20
TK_int (281) 31
TK_long (282)
TK_register (283)
TK_return (284) 10
TK_short (285)
TK_signed (286)
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293)
TK_void (294) 30
TK_volatile (295)
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 38
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304) 27
TO_logicAnd (305)
TO_asterix (306) 37
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310) 22
TO_moreThan (311) 23
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314) 21
TO_notEqualTo (315)
TO_plus (316) 33
TO_minus (317) 34
TO_increment (318)
TO_decrement (319)
TO_equal (320) 14 29
TP_comma (321) 25 45
TP_colon (322)
TP_semiColon (323) 10 11 12 14
TC_integer (324) 39
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
PROGRAM (80)
    on left: 1, on right: 0
STRUCTURE (81)
    on left: 2 3 4 5, on right: 1 2 5
FUNCTION (82)
    on left: 6 7, on right: 2 3
BLOCK (83)
    on left: 8 9, on right: 6 7 9 16 18 19 20
STATEMENT (84)
    on left: 10 11 12 13 14, on right: 4 5 8 9 15 17 18 19
SELECTION_STATEMENT (85)
    on left: 15 16 17 18 19 20, on right: 13
CONDITION (86)
    on left: 21 22 23, on right: 15 16 17 18 19 20
VARIABLES (87)
    on left: 24 25, on right: 7 25
VARIABLE_DECLARATION_FUNCTION (88)
    on left: 26 27, on right: 24 25
VARIABLE_DECLARATION (89)
    on left: 28 29, on right: 12
RETURNTYPE (90)
    on left: 30 31, on right: 6 7 26 27 28 29
EXPRESSION (91)
    on left: 32 33 34 35, on right: 10 11 14 21 22 23 29 33 34 44 45
TERM (92)
    on left: 36 37 38, on right: 32 37 38
FACTOR (93)
    on left: 39 40 41, on right: 36 37 38
FUNCTION_CALL (94)
    on left: 42 43, on right: 35 41
EXPRESSION_STATEMENTS (95)
    on left: 44 45, on right: 43 45


State 0

    0 $accept: . PROGRAM $end

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    PROGRAM               go to state 7
    STRUCTURE             go to state 8
    FUNCTION              go to state 9
    STATEMENT             go to state 10
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 13
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 1

   40 FACTOR: T_IDENTIFIER .
   42 FUNCTION_CALL: T_IDENTIFIER . T_LBRACKET T_RBRACKET
   43              | T_IDENTIFIER . T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET

    T_LBRACKET  shift, and go to state 18

    $default  reduce using rule 40 (FACTOR)


State 2

   15 SELECTION_STATEMENT: TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT
   16                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   17                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   18                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   19                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   20                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_LBRACKET  shift, and go to state 19


State 3

   31 RETURNTYPE: TK_int .

    $default  reduce using rule 31 (RETURNTYPE)


State 4

   10 STATEMENT: TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 20
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 5

   30 RETURNTYPE: TK_void .

    $default  reduce using rule 30 (RETURNTYPE)


State 6

   39 FACTOR: TC_integer .

    $default  reduce using rule 39 (FACTOR)


State 7

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 21


State 8

    1 PROGRAM: STRUCTURE .

    $default  reduce using rule 1 (PROGRAM)


State 9

    2 STRUCTURE: FUNCTION . STRUCTURE
    3          | FUNCTION .

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    $default  reduce using rule 3 (STRUCTURE)

    STRUCTURE             go to state 22
    FUNCTION              go to state 9
    STATEMENT             go to state 10
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 13
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 10

    4 STRUCTURE: STATEMENT .
    5          | STATEMENT . STRUCTURE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    $default  reduce using rule 4 (STRUCTURE)

    STRUCTURE             go to state 23
    FUNCTION              go to state 9
    STATEMENT             go to state 10
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 13
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 11

   13 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 13 (STATEMENT)


State 12

   12 STATEMENT: VARIABLE_DECLARATION . TP_semiColon

    TP_semiColon  shift, and go to state 24


State 13

    6 FUNCTION: RETURNTYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE . T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE
   28 VARIABLE_DECLARATION: RETURNTYPE . T_IDENTIFIER
   29                     | RETURNTYPE . T_IDENTIFIER TO_equal EXPRESSION

    T_IDENTIFIER  shift, and go to state 25


State 14

   11 STATEMENT: EXPRESSION . TP_semiColon
   14          | EXPRESSION . TO_equal EXPRESSION TP_semiColon
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 26
    TO_minus      shift, and go to state 27
    TO_equal      shift, and go to state 28
    TP_semiColon  shift, and go to state 29


State 15

   32 EXPRESSION: TERM .
   37 TERM: TERM . TO_asterix FACTOR
   38     | TERM . TO_divide FACTOR

    TO_divide   shift, and go to state 30
    TO_asterix  shift, and go to state 31

    $default  reduce using rule 32 (EXPRESSION)


State 16

   36 TERM: FACTOR .

    $default  reduce using rule 36 (TERM)


State 17

   35 EXPRESSION: FUNCTION_CALL .
   41 FACTOR: FUNCTION_CALL .

    T_RBRACKET    reduce using rule 35 (EXPRESSION)
    T_RBRACKET    [reduce using rule 41 (FACTOR)]
    TO_divide     reduce using rule 41 (FACTOR)
    TO_asterix    reduce using rule 41 (FACTOR)
    TO_lessThan   reduce using rule 35 (EXPRESSION)
    TO_lessThan   [reduce using rule 41 (FACTOR)]
    TO_moreThan   reduce using rule 35 (EXPRESSION)
    TO_moreThan   [reduce using rule 41 (FACTOR)]
    TO_equalTo    reduce using rule 35 (EXPRESSION)
    TO_equalTo    [reduce using rule 41 (FACTOR)]
    TO_plus       reduce using rule 35 (EXPRESSION)
    TO_plus       [reduce using rule 41 (FACTOR)]
    TO_minus      reduce using rule 35 (EXPRESSION)
    TO_minus      [reduce using rule 41 (FACTOR)]
    TO_equal      reduce using rule 35 (EXPRESSION)
    TO_equal      [reduce using rule 41 (FACTOR)]
    TP_comma      reduce using rule 35 (EXPRESSION)
    TP_comma      [reduce using rule 41 (FACTOR)]
    TP_semiColon  reduce using rule 35 (EXPRESSION)
    TP_semiColon  [reduce using rule 41 (FACTOR)]
    $default      reduce using rule 35 (EXPRESSION)


State 18

   42 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   43              | T_IDENTIFIER T_LBRACKET . EXPRESSION_STATEMENTS T_RBRACKET

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACKET    shift, and go to state 32
    TC_integer    shift, and go to state 6

    EXPRESSION             go to state 33
    TERM                   go to state 15
    FACTOR                 go to state 16
    FUNCTION_CALL          go to state 17
    EXPRESSION_STATEMENTS  go to state 34


State 19

   15 SELECTION_STATEMENT: TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT
   16                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   18                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   19                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    CONDITION      go to state 35
    EXPRESSION     go to state 36
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 20

   10 STATEMENT: TK_return EXPRESSION . TP_semiColon
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 26
    TO_minus      shift, and go to state 27
    TP_semiColon  shift, and go to state 37


State 21

    0 $accept: PROGRAM $end .

    $default  accept


State 22

    2 STRUCTURE: FUNCTION STRUCTURE .

    $default  reduce using rule 2 (STRUCTURE)


State 23

    5 STRUCTURE: STATEMENT STRUCTURE .

    $default  reduce using rule 5 (STRUCTURE)


State 24

   12 STATEMENT: VARIABLE_DECLARATION TP_semiColon .

    $default  reduce using rule 12 (STATEMENT)


State 25

    6 FUNCTION: RETURNTYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER . T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE
   28 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER .
   29                     | RETURNTYPE T_IDENTIFIER . TO_equal EXPRESSION

    T_LBRACKET  shift, and go to state 38
    TO_equal    shift, and go to state 39

    $default  reduce using rule 28 (VARIABLE_DECLARATION)


State 26

   33 EXPRESSION: EXPRESSION TO_plus . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 40
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 27

   34 EXPRESSION: EXPRESSION TO_minus . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 41
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 28

   14 STATEMENT: EXPRESSION TO_equal . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 42
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 29

   11 STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 11 (STATEMENT)


State 30

   38 TERM: TERM TO_divide . FACTOR

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    FACTOR         go to state 43
    FUNCTION_CALL  go to state 44


State 31

   37 TERM: TERM TO_asterix . FACTOR

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    FACTOR         go to state 45
    FUNCTION_CALL  go to state 44


State 32

   42 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 42 (FUNCTION_CALL)


State 33

   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION
   44 EXPRESSION_STATEMENTS: EXPRESSION .
   45                      | EXPRESSION . TP_comma EXPRESSION_STATEMENTS

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27
    TP_comma  shift, and go to state 46

    $default  reduce using rule 44 (EXPRESSION_STATEMENTS)


State 34

   43 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS . T_RBRACKET

    T_RBRACKET  shift, and go to state 47


State 35

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT
   16                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else STATEMENT
   18                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   19                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 48


State 36

   21 CONDITION: EXPRESSION . TO_equalTo EXPRESSION
   22          | EXPRESSION . TO_lessThan EXPRESSION
   23          | EXPRESSION . TO_moreThan EXPRESSION
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_lessThan  shift, and go to state 49
    TO_moreThan  shift, and go to state 50
    TO_equalTo   shift, and go to state 51
    TO_plus      shift, and go to state 26
    TO_minus     shift, and go to state 27


State 37

   10 STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 10 (STATEMENT)


State 38

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER T_LBRACKET . VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 52
    TK_int      shift, and go to state 3
    TK_void     shift, and go to state 5

    VARIABLES                      go to state 53
    VARIABLE_DECLARATION_FUNCTION  go to state 54
    RETURNTYPE                     go to state 55


State 39

   29 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 56
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 40

   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   33           | EXPRESSION TO_plus EXPRESSION .
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    TO_plus   [reduce using rule 33 (EXPRESSION)]
    TO_minus  [reduce using rule 33 (EXPRESSION)]
    $default  reduce using rule 33 (EXPRESSION)


State 41

   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION
   34           | EXPRESSION TO_minus EXPRESSION .

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    TO_plus   [reduce using rule 34 (EXPRESSION)]
    TO_minus  [reduce using rule 34 (EXPRESSION)]
    $default  reduce using rule 34 (EXPRESSION)


State 42

   14 STATEMENT: EXPRESSION TO_equal EXPRESSION . TP_semiColon
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 26
    TO_minus      shift, and go to state 27
    TP_semiColon  shift, and go to state 57


State 43

   38 TERM: TERM TO_divide FACTOR .

    $default  reduce using rule 38 (TERM)


State 44

   41 FACTOR: FUNCTION_CALL .

    $default  reduce using rule 41 (FACTOR)


State 45

   37 TERM: TERM TO_asterix FACTOR .

    $default  reduce using rule 37 (TERM)


State 46

   45 EXPRESSION_STATEMENTS: EXPRESSION TP_comma . EXPRESSION_STATEMENTS

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION             go to state 33
    TERM                   go to state 15
    FACTOR                 go to state 16
    FUNCTION_CALL          go to state 17
    EXPRESSION_STATEMENTS  go to state 58


State 47

   43 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET .

    $default  reduce using rule 43 (FUNCTION_CALL)


State 48

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT
   16                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else STATEMENT
   18                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_LBRACE      shift, and go to state 59
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 60
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 49

   22 CONDITION: EXPRESSION TO_lessThan . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 62
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 50

   23 CONDITION: EXPRESSION TO_moreThan . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 63
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 51

   21 CONDITION: EXPRESSION TO_equalTo . EXPRESSION

    T_IDENTIFIER  shift, and go to state 1
    TC_integer    shift, and go to state 6

    EXPRESSION     go to state 64
    TERM           go to state 15
    FACTOR         go to state 16
    FUNCTION_CALL  go to state 17


State 52

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 65


State 53

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES . T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 66


State 54

   24 VARIABLES: VARIABLE_DECLARATION_FUNCTION .
   25          | VARIABLE_DECLARATION_FUNCTION . TP_comma VARIABLES

    TP_comma  shift, and go to state 67

    $default  reduce using rule 24 (VARIABLES)


State 55

   26 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE . T_IDENTIFIER
   27                              | RETURNTYPE . TO_ampersand T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 68
    TO_ampersand  shift, and go to state 69


State 56

   29 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION .
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    $default  reduce using rule 29 (VARIABLE_DECLARATION)


State 57

   14 STATEMENT: EXPRESSION TO_equal EXPRESSION TP_semiColon .

    $default  reduce using rule 14 (STATEMENT)


State 58

   45 EXPRESSION_STATEMENTS: EXPRESSION TP_comma EXPRESSION_STATEMENTS .

    $default  reduce using rule 45 (EXPRESSION_STATEMENTS)


State 59

   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE
   18                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else STATEMENT
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    BLOCK                 go to state 70
    STATEMENT             go to state 71
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 60

   15 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT .
   17                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 72

    TK_else   [reduce using rule 15 (SELECTION_STATEMENT)]
    $default  reduce using rule 15 (SELECTION_STATEMENT)


State 61

   28 VARIABLE_DECLARATION: RETURNTYPE . T_IDENTIFIER
   29                     | RETURNTYPE . T_IDENTIFIER TO_equal EXPRESSION

    T_IDENTIFIER  shift, and go to state 73


State 62

   22 CONDITION: EXPRESSION TO_lessThan EXPRESSION .
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    $default  reduce using rule 22 (CONDITION)


State 63

   23 CONDITION: EXPRESSION TO_moreThan EXPRESSION .
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    $default  reduce using rule 23 (CONDITION)


State 64

   21 CONDITION: EXPRESSION TO_equalTo EXPRESSION .
   33 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   34           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 26
    TO_minus  shift, and go to state 27

    $default  reduce using rule 21 (CONDITION)


State 65

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    BLOCK                 go to state 74
    STATEMENT             go to state 71
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 66

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 75


State 67

   25 VARIABLES: VARIABLE_DECLARATION_FUNCTION TP_comma . VARIABLES

    TK_int   shift, and go to state 3
    TK_void  shift, and go to state 5

    VARIABLES                      go to state 76
    VARIABLE_DECLARATION_FUNCTION  go to state 54
    RETURNTYPE                     go to state 55


State 68

   26 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE T_IDENTIFIER .

    $default  reduce using rule 26 (VARIABLE_DECLARATION_FUNCTION)


State 69

   27 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE TO_ampersand . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 77


State 70

    9 BLOCK: BLOCK . STATEMENT
   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE
   18                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else STATEMENT
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACE      shift, and go to state 78
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 79
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 71

    8 BLOCK: STATEMENT .

    $default  reduce using rule 8 (BLOCK)


State 72

   17 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_LBRACE      shift, and go to state 80
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 81
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 73

   28 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER .
   29                     | RETURNTYPE T_IDENTIFIER . TO_equal EXPRESSION

    TO_equal  shift, and go to state 39

    $default  reduce using rule 28 (VARIABLE_DECLARATION)


State 74

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    9 BLOCK: BLOCK . STATEMENT

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACE      shift, and go to state 82
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 79
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 75

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    BLOCK                 go to state 83
    STATEMENT             go to state 71
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 76

   25 VARIABLES: VARIABLE_DECLARATION_FUNCTION TP_comma VARIABLES .

    $default  reduce using rule 25 (VARIABLES)


State 77

   27 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE TO_ampersand T_IDENTIFIER .

    $default  reduce using rule 27 (VARIABLE_DECLARATION_FUNCTION)


State 78

   16 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE .
   18                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else STATEMENT
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 84

    TK_else   [reduce using rule 16 (SELECTION_STATEMENT)]
    $default  reduce using rule 16 (SELECTION_STATEMENT)


State 79

    9 BLOCK: BLOCK STATEMENT .

    $default  reduce using rule 9 (BLOCK)


State 80

   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    BLOCK                 go to state 85
    STATEMENT             go to state 71
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 81

   17 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT .

    $default  reduce using rule 17 (SELECTION_STATEMENT)


State 82

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 6 (FUNCTION)


State 83

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    9 BLOCK: BLOCK . STATEMENT

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACE      shift, and go to state 86
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 79
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 84

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . STATEMENT
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_LBRACE      shift, and go to state 87
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 88
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 85

    9 BLOCK: BLOCK . STATEMENT
   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK . T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACE      shift, and go to state 89
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 79
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 86

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 7 (FUNCTION)


State 87

   20 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    BLOCK                 go to state 90
    STATEMENT             go to state 71
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 88

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT .

    $default  reduce using rule 18 (SELECTION_STATEMENT)


State 89

   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 19 (SELECTION_STATEMENT)


State 90

    9 BLOCK: BLOCK . STATEMENT
   20 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK . T_RBRACE

    T_IDENTIFIER  shift, and go to state 1
    T_RBRACE      shift, and go to state 91
    TK_if         shift, and go to state 2
    TK_int        shift, and go to state 3
    TK_return     shift, and go to state 4
    TK_void       shift, and go to state 5
    TC_integer    shift, and go to state 6

    STATEMENT             go to state 79
    SELECTION_STATEMENT   go to state 11
    VARIABLE_DECLARATION  go to state 12
    RETURNTYPE            go to state 61
    EXPRESSION            go to state 14
    TERM                  go to state 15
    FACTOR                go to state 16
    FUNCTION_CALL         go to state 17


State 91

   20 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 20 (SELECTION_STATEMENT)
