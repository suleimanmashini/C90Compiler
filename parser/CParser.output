Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_char
   TK_const
   TK_continue
   TK_default
   TK_do
   TK_double
   TK_enum
   TK_extern
   TK_float
   TK_for
   TK_goto
   TK_long
   TK_register
   TK_short
   TK_signed
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_unsigned
   TK_volatile
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_increment
   TO_decrement
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr
   TO_OrEqual
   TO_exOrEqual
   TO_andEqual
   TO_rightEqual
   TO_modEqual
   TO_plusEqual
   TO_minusEqual
   TO_leftEqual
   TO_divEqual
   TO_questionMark
   TO_exclussiveOr
   TO_OR
   TO_multEqual


State 25 conflicts: 14 reduce/reduce
State 55 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce
State 93 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: STRUCTURE

    2 STRUCTURE: FUNCTION STRUCTURE
    3          | FUNCTION
    4          | VARIABLE_DECLARATION_GLOBAL
    5          | VARIABLE_DECLARATION_GLOBAL STRUCTURE

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    8 BLOCK: STATEMENT
    9      | BLOCK STATEMENT

   10 STATEMENT: TK_return EXPRESSION TP_semiColon
   11          | EXPRESSION TP_semiColon
   12          | VARIABLE_DECLARATION TP_semiColon
   13          | SELECTION_STATEMENT
   14          | EXPRESSION TO_equal EXPRESSION TP_semiColon
   15          | ITERATION_STATEMENT

   16 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET STATEMENT
   17                    | TK_while T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   21                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   22                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

   24 CONDITION: EXPRESSION TO_equalTo EXPRESSION
   25          | EXPRESSION TO_lessThan EXPRESSION
   26          | EXPRESSION TO_notEqualTo EXPRESSION
   27          | EXPRESSION TO_moreThan EXPRESSION
   28          | EXPRESSION TO_moreThanOrEqual EXPRESSION
   29          | EXPRESSION TO_lessThanOrEqual EXPRESSION
   30          | EXPRESSION TO_logicAnd EXPRESSION
   31          | EXPRESSION TO_logicOr EXPRESSION
   32          | EXPRESSION

   33 VARIABLES: VARIABLE_DECLARATION_FUNCTION
   34          | VARIABLE_DECLARATION_FUNCTION TP_comma VARIABLES

   35 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE T_IDENTIFIER
   36                              | RETURNTYPE TO_ampersand T_IDENTIFIER

   37 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER
   38                     | RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION

   39 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER TP_semiColon
   40                            | RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION TP_semiColon

   41 RETURNTYPE: TK_void
   42           | TK_int

   43 EXPRESSION: TERM
   44           | EXPRESSION TO_plus EXPRESSION
   45           | EXPRESSION TO_minus EXPRESSION
   46           | T_LBRACKET EXPRESSION T_RBRACKET
   47           | FUNCTION_CALL

   48 TERM: FACTOR
   49     | TERM TO_TSTerix FACTOR
   50     | TERM TO_divide FACTOR

   51 FACTOR: TC_integer
   52       | T_IDENTIFIER
   53       | FUNCTION_CALL

   54 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET T_RBRACKET
   55              | T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET

   56 EXPRESSION_STATEMENTS: EXPRESSION
   57                      | EXPRESSION TP_comma EXPRESSION_STATEMENTS


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 6 7 35 36 37 38 39 40 52 54 55
T_LBRACE (259) 6 7 17 19 21 22 23
T_RBRACE (260) 6 7 17 19 21 22 23
T_LBRACKET (261) 6 7 16 17 18 19 20 21 22 23 46 54 55
T_RBRACKET (262) 6 7 16 17 18 19 20 21 22 23 46 54 55
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268)
TK_const (269)
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273)
TK_else (274) 20 21 22 23
TK_enum (275)
TK_extern (276)
TK_float (277)
TK_for (278)
TK_goto (279)
TK_if (280) 18 19 20 21 22 23
TK_int (281) 42
TK_long (282)
TK_register (283)
TK_return (284) 10
TK_short (285)
TK_signed (286)
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293)
TK_void (294) 41
TK_volatile (295)
TK_while (296) 16 17
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 50
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304) 36
TO_logicAnd (305) 30
TO_TSTerix (306) 49
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310) 25
TO_moreThan (311) 27
TO_lessThanOrEqual (312) 29
TO_moreThanOrEqual (313) 28
TO_equalTo (314) 24
TO_notEqualTo (315) 26
TO_plus (316) 44
TO_minus (317) 45
TO_increment (318)
TO_decrement (319)
TO_equal (320) 14 38 40
TP_comma (321) 34 57
TP_colon (322)
TP_semiColon (323) 10 11 12 14 39 40
TC_integer (324) 51
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334)
TO_exOrEqual (335)
TO_andEqual (336)
TO_rightEqual (337)
TO_modEqual (338)
TO_plusEqual (339)
TO_minusEqual (340)
TO_leftEqual (341)
TO_divEqual (342)
TO_questionMark (343)
TO_exclussiveOr (344)
TO_logicOr (345) 31
TO_OR (346)
TO_multEqual (347)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
PROGRAM (94)
    on left: 1, on right: 0
STRUCTURE (95)
    on left: 2 3 4 5, on right: 1 2 5
FUNCTION (96)
    on left: 6 7, on right: 2 3
BLOCK (97)
    on left: 8 9, on right: 6 7 9 17 19 21 22 23
STATEMENT (98)
    on left: 10 11 12 13 14 15, on right: 8 9 16 18 20 21 22
ITERATION_STATEMENT (99)
    on left: 16 17, on right: 15
SELECTION_STATEMENT (100)
    on left: 18 19 20 21 22 23, on right: 13
CONDITION (101)
    on left: 24 25 26 27 28 29 30 31 32, on right: 16 17 18 19 20 21
    22 23
VARIABLES (102)
    on left: 33 34, on right: 7 34
VARIABLE_DECLARATION_FUNCTION (103)
    on left: 35 36, on right: 33 34
VARIABLE_DECLARATION (104)
    on left: 37 38, on right: 12
VARIABLE_DECLARATION_GLOBAL (105)
    on left: 39 40, on right: 4 5
RETURNTYPE (106)
    on left: 41 42, on right: 6 7 35 36 37 38 39 40
EXPRESSION (107)
    on left: 43 44 45 46 47, on right: 10 11 14 24 25 26 27 28 29 30
    31 32 38 40 44 45 46 56 57
TERM (108)
    on left: 48 49 50, on right: 43 49 50
FACTOR (109)
    on left: 51 52 53, on right: 48 49 50
FUNCTION_CALL (110)
    on left: 54 55, on right: 47 53
EXPRESSION_STATEMENTS (111)
    on left: 56 57, on right: 55 57


State 0

    0 $accept: . PROGRAM $end

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    PROGRAM                      go to state 3
    STRUCTURE                    go to state 4
    FUNCTION                     go to state 5
    VARIABLE_DECLARATION_GLOBAL  go to state 6
    RETURNTYPE                   go to state 7


State 1

   42 RETURNTYPE: TK_int .

    $default  reduce using rule 42 (RETURNTYPE)


State 2

   41 RETURNTYPE: TK_void .

    $default  reduce using rule 41 (RETURNTYPE)


State 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 8


State 4

    1 PROGRAM: STRUCTURE .

    $default  reduce using rule 1 (PROGRAM)


State 5

    2 STRUCTURE: FUNCTION . STRUCTURE
    3          | FUNCTION .

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    $default  reduce using rule 3 (STRUCTURE)

    STRUCTURE                    go to state 9
    FUNCTION                     go to state 5
    VARIABLE_DECLARATION_GLOBAL  go to state 6
    RETURNTYPE                   go to state 7


State 6

    4 STRUCTURE: VARIABLE_DECLARATION_GLOBAL .
    5          | VARIABLE_DECLARATION_GLOBAL . STRUCTURE

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    $default  reduce using rule 4 (STRUCTURE)

    STRUCTURE                    go to state 10
    FUNCTION                     go to state 5
    VARIABLE_DECLARATION_GLOBAL  go to state 6
    RETURNTYPE                   go to state 7


State 7

    6 FUNCTION: RETURNTYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE . T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE
   39 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE . T_IDENTIFIER TP_semiColon
   40                            | RETURNTYPE . T_IDENTIFIER TO_equal EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 11


State 8

    0 $accept: PROGRAM $end .

    $default  accept


State 9

    2 STRUCTURE: FUNCTION STRUCTURE .

    $default  reduce using rule 2 (STRUCTURE)


State 10

    5 STRUCTURE: VARIABLE_DECLARATION_GLOBAL STRUCTURE .

    $default  reduce using rule 5 (STRUCTURE)


State 11

    6 FUNCTION: RETURNTYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER . T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE
   39 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER . TP_semiColon
   40                            | RETURNTYPE T_IDENTIFIER . TO_equal EXPRESSION TP_semiColon

    T_LBRACKET    shift, and go to state 12
    TO_equal      shift, and go to state 13
    TP_semiColon  shift, and go to state 14


State 12

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET T_LBRACE BLOCK T_RBRACE
    7         | RETURNTYPE T_IDENTIFIER T_LBRACKET . VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 15
    TK_int      shift, and go to state 1
    TK_void     shift, and go to state 2

    VARIABLES                      go to state 16
    VARIABLE_DECLARATION_FUNCTION  go to state 17
    RETURNTYPE                     go to state 18


State 13

   40 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER TO_equal . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 22
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 14

   39 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER TP_semiColon .

    $default  reduce using rule 39 (VARIABLE_DECLARATION_GLOBAL)


State 15

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 26


State 16

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES . T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 27


State 17

   33 VARIABLES: VARIABLE_DECLARATION_FUNCTION .
   34          | VARIABLE_DECLARATION_FUNCTION . TP_comma VARIABLES

    TP_comma  shift, and go to state 28

    $default  reduce using rule 33 (VARIABLES)


State 18

   35 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE . T_IDENTIFIER
   36                              | RETURNTYPE . TO_ampersand T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 29
    TO_ampersand  shift, and go to state 30


State 19

   52 FACTOR: T_IDENTIFIER .
   54 FUNCTION_CALL: T_IDENTIFIER . T_LBRACKET T_RBRACKET
   55              | T_IDENTIFIER . T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET

    T_LBRACKET  shift, and go to state 31

    $default  reduce using rule 52 (FACTOR)


State 20

   46 EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 32
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 21

   51 FACTOR: TC_integer .

    $default  reduce using rule 51 (FACTOR)


State 22

   40 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION . TP_semiColon
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 33
    TO_minus      shift, and go to state 34
    TP_semiColon  shift, and go to state 35


State 23

   43 EXPRESSION: TERM .
   49 TERM: TERM . TO_TSTerix FACTOR
   50     | TERM . TO_divide FACTOR

    TO_divide   shift, and go to state 36
    TO_TSTerix  shift, and go to state 37

    $default  reduce using rule 43 (EXPRESSION)


State 24

   48 TERM: FACTOR .

    $default  reduce using rule 48 (TERM)


State 25

   47 EXPRESSION: FUNCTION_CALL .
   53 FACTOR: FUNCTION_CALL .

    T_RBRACKET          reduce using rule 47 (EXPRESSION)
    T_RBRACKET          [reduce using rule 53 (FACTOR)]
    TO_divide           reduce using rule 53 (FACTOR)
    TO_logicAnd         reduce using rule 47 (EXPRESSION)
    TO_logicAnd         [reduce using rule 53 (FACTOR)]
    TO_TSTerix          reduce using rule 53 (FACTOR)
    TO_lessThan         reduce using rule 47 (EXPRESSION)
    TO_lessThan         [reduce using rule 53 (FACTOR)]
    TO_moreThan         reduce using rule 47 (EXPRESSION)
    TO_moreThan         [reduce using rule 53 (FACTOR)]
    TO_lessThanOrEqual  reduce using rule 47 (EXPRESSION)
    TO_lessThanOrEqual  [reduce using rule 53 (FACTOR)]
    TO_moreThanOrEqual  reduce using rule 47 (EXPRESSION)
    TO_moreThanOrEqual  [reduce using rule 53 (FACTOR)]
    TO_equalTo          reduce using rule 47 (EXPRESSION)
    TO_equalTo          [reduce using rule 53 (FACTOR)]
    TO_notEqualTo       reduce using rule 47 (EXPRESSION)
    TO_notEqualTo       [reduce using rule 53 (FACTOR)]
    TO_plus             reduce using rule 47 (EXPRESSION)
    TO_plus             [reduce using rule 53 (FACTOR)]
    TO_minus            reduce using rule 47 (EXPRESSION)
    TO_minus            [reduce using rule 53 (FACTOR)]
    TO_equal            reduce using rule 47 (EXPRESSION)
    TO_equal            [reduce using rule 53 (FACTOR)]
    TP_comma            reduce using rule 47 (EXPRESSION)
    TP_comma            [reduce using rule 53 (FACTOR)]
    TP_semiColon        reduce using rule 47 (EXPRESSION)
    TP_semiColon        [reduce using rule 53 (FACTOR)]
    TO_logicOr          reduce using rule 47 (EXPRESSION)
    TO_logicOr          [reduce using rule 53 (FACTOR)]
    $default            reduce using rule 47 (EXPRESSION)


State 26

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 41
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 27

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_LBRACE  shift, and go to state 48


State 28

   34 VARIABLES: VARIABLE_DECLARATION_FUNCTION TP_comma . VARIABLES

    TK_int   shift, and go to state 1
    TK_void  shift, and go to state 2

    VARIABLES                      go to state 49
    VARIABLE_DECLARATION_FUNCTION  go to state 17
    RETURNTYPE                     go to state 18


State 29

   35 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE T_IDENTIFIER .

    $default  reduce using rule 35 (VARIABLE_DECLARATION_FUNCTION)


State 30

   36 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE TO_ampersand . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 50


State 31

   54 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   55              | T_IDENTIFIER T_LBRACKET . EXPRESSION_STATEMENTS T_RBRACKET

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    T_RBRACKET    shift, and go to state 51
    TC_integer    shift, and go to state 21

    EXPRESSION             go to state 52
    TERM                   go to state 23
    FACTOR                 go to state 24
    FUNCTION_CALL          go to state 25
    EXPRESSION_STATEMENTS  go to state 53


State 32

   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION
   46           | T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 54
    TO_plus     shift, and go to state 33
    TO_minus    shift, and go to state 34


State 33

   44 EXPRESSION: EXPRESSION TO_plus . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 55
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 34

   45 EXPRESSION: EXPRESSION TO_minus . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 56
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 35

   40 VARIABLE_DECLARATION_GLOBAL: RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION TP_semiColon .

    $default  reduce using rule 40 (VARIABLE_DECLARATION_GLOBAL)


State 36

   50 TERM: TERM TO_divide . FACTOR

    T_IDENTIFIER  shift, and go to state 19
    TC_integer    shift, and go to state 21

    FACTOR         go to state 57
    FUNCTION_CALL  go to state 58


State 37

   49 TERM: TERM TO_TSTerix . FACTOR

    T_IDENTIFIER  shift, and go to state 19
    TC_integer    shift, and go to state 21

    FACTOR         go to state 59
    FUNCTION_CALL  go to state 58


State 38

   18 SELECTION_STATEMENT: TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT
   19                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   20                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   21                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   22                    | TK_if . T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   23                    | TK_if . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_LBRACKET  shift, and go to state 60


State 39

   10 STATEMENT: TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 61
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 40

   16 ITERATION_STATEMENT: TK_while . T_LBRACKET CONDITION T_RBRACKET STATEMENT
   17                    | TK_while . T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_LBRACKET  shift, and go to state 62


State 41

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    9 BLOCK: BLOCK . STATEMENT

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 63
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 42

    8 BLOCK: STATEMENT .

    $default  reduce using rule 8 (BLOCK)


State 43

   15 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 15 (STATEMENT)


State 44

   13 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 13 (STATEMENT)


State 45

   12 STATEMENT: VARIABLE_DECLARATION . TP_semiColon

    TP_semiColon  shift, and go to state 65


State 46

   37 VARIABLE_DECLARATION: RETURNTYPE . T_IDENTIFIER
   38                     | RETURNTYPE . T_IDENTIFIER TO_equal EXPRESSION

    T_IDENTIFIER  shift, and go to state 66


State 47

   11 STATEMENT: EXPRESSION . TP_semiColon
   14          | EXPRESSION . TO_equal EXPRESSION TP_semiColon
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 33
    TO_minus      shift, and go to state 34
    TO_equal      shift, and go to state 67
    TP_semiColon  shift, and go to state 68


State 48

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 69
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 49

   34 VARIABLES: VARIABLE_DECLARATION_FUNCTION TP_comma VARIABLES .

    $default  reduce using rule 34 (VARIABLES)


State 50

   36 VARIABLE_DECLARATION_FUNCTION: RETURNTYPE TO_ampersand T_IDENTIFIER .

    $default  reduce using rule 36 (VARIABLE_DECLARATION_FUNCTION)


State 51

   54 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 54 (FUNCTION_CALL)


State 52

   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION
   56 EXPRESSION_STATEMENTS: EXPRESSION .
   57                      | EXPRESSION . TP_comma EXPRESSION_STATEMENTS

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34
    TP_comma  shift, and go to state 70

    $default  reduce using rule 56 (EXPRESSION_STATEMENTS)


State 53

   55 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS . T_RBRACKET

    T_RBRACKET  shift, and go to state 71


State 54

   46 EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 46 (EXPRESSION)


State 55

   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   44           | EXPRESSION TO_plus EXPRESSION .
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    TO_plus   [reduce using rule 44 (EXPRESSION)]
    TO_minus  [reduce using rule 44 (EXPRESSION)]
    $default  reduce using rule 44 (EXPRESSION)


State 56

   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION
   45           | EXPRESSION TO_minus EXPRESSION .

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    TO_plus   [reduce using rule 45 (EXPRESSION)]
    TO_minus  [reduce using rule 45 (EXPRESSION)]
    $default  reduce using rule 45 (EXPRESSION)


State 57

   50 TERM: TERM TO_divide FACTOR .

    $default  reduce using rule 50 (TERM)


State 58

   53 FACTOR: FUNCTION_CALL .

    $default  reduce using rule 53 (FACTOR)


State 59

   49 TERM: TERM TO_TSTerix FACTOR .

    $default  reduce using rule 49 (TERM)


State 60

   18 SELECTION_STATEMENT: TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT
   19                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else STATEMENT
   21                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   22                    | TK_if T_LBRACKET . CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   23                    | TK_if T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    CONDITION      go to state 72
    EXPRESSION     go to state 73
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 61

   10 STATEMENT: TK_return EXPRESSION . TP_semiColon
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 33
    TO_minus      shift, and go to state 34
    TP_semiColon  shift, and go to state 74


State 62

   16 ITERATION_STATEMENT: TK_while T_LBRACKET . CONDITION T_RBRACKET STATEMENT
   17                    | TK_while T_LBRACKET . CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    CONDITION      go to state 75
    EXPRESSION     go to state 73
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 63

    6 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 6 (FUNCTION)


State 64

    9 BLOCK: BLOCK STATEMENT .

    $default  reduce using rule 9 (BLOCK)


State 65

   12 STATEMENT: VARIABLE_DECLARATION TP_semiColon .

    $default  reduce using rule 12 (STATEMENT)


State 66

   37 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER .
   38                     | RETURNTYPE T_IDENTIFIER . TO_equal EXPRESSION

    TO_equal  shift, and go to state 76

    $default  reduce using rule 37 (VARIABLE_DECLARATION)


State 67

   14 STATEMENT: EXPRESSION TO_equal . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 77
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 68

   11 STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 11 (STATEMENT)


State 69

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK . T_RBRACE
    9 BLOCK: BLOCK . STATEMENT

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 78
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 70

   57 EXPRESSION_STATEMENTS: EXPRESSION TP_comma . EXPRESSION_STATEMENTS

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION             go to state 52
    TERM                   go to state 23
    FACTOR                 go to state 24
    FUNCTION_CALL          go to state 25
    EXPRESSION_STATEMENTS  go to state 79


State 71

   55 FUNCTION_CALL: T_IDENTIFIER T_LBRACKET EXPRESSION_STATEMENTS T_RBRACKET .

    $default  reduce using rule 55 (FUNCTION_CALL)


State 72

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT
   19                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else STATEMENT
   21                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   22                    | TK_if T_LBRACKET CONDITION . T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   23                    | TK_if T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 80


State 73

   24 CONDITION: EXPRESSION . TO_equalTo EXPRESSION
   25          | EXPRESSION . TO_lessThan EXPRESSION
   26          | EXPRESSION . TO_notEqualTo EXPRESSION
   27          | EXPRESSION . TO_moreThan EXPRESSION
   28          | EXPRESSION . TO_moreThanOrEqual EXPRESSION
   29          | EXPRESSION . TO_lessThanOrEqual EXPRESSION
   30          | EXPRESSION . TO_logicAnd EXPRESSION
   31          | EXPRESSION . TO_logicOr EXPRESSION
   32          | EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_logicAnd         shift, and go to state 81
    TO_lessThan         shift, and go to state 82
    TO_moreThan         shift, and go to state 83
    TO_lessThanOrEqual  shift, and go to state 84
    TO_moreThanOrEqual  shift, and go to state 85
    TO_equalTo          shift, and go to state 86
    TO_notEqualTo       shift, and go to state 87
    TO_plus             shift, and go to state 33
    TO_minus            shift, and go to state 34
    TO_logicOr          shift, and go to state 88

    $default  reduce using rule 32 (CONDITION)


State 74

   10 STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 10 (STATEMENT)


State 75

   16 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION . T_RBRACKET STATEMENT
   17                    | TK_while T_LBRACKET CONDITION . T_RBRACKET T_LBRACE BLOCK T_RBRACE

    T_RBRACKET  shift, and go to state 89


State 76

   38 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 90
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 77

   14 STATEMENT: EXPRESSION TO_equal EXPRESSION . TP_semiColon
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus       shift, and go to state 33
    TO_minus      shift, and go to state 34
    TP_semiColon  shift, and go to state 91


State 78

    7 FUNCTION: RETURNTYPE T_IDENTIFIER T_LBRACKET VARIABLES T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 7 (FUNCTION)


State 79

   57 EXPRESSION_STATEMENTS: EXPRESSION TP_comma EXPRESSION_STATEMENTS .

    $default  reduce using rule 57 (EXPRESSION_STATEMENTS)


State 80

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT
   19                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else STATEMENT
   21                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else STATEMENT
   22                    | TK_if T_LBRACKET CONDITION T_RBRACKET . STATEMENT TK_else T_LBRACE BLOCK T_RBRACE
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACE      shift, and go to state 92
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 93
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 81

   30 CONDITION: EXPRESSION TO_logicAnd . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 94
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 82

   25 CONDITION: EXPRESSION TO_lessThan . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 95
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 83

   27 CONDITION: EXPRESSION TO_moreThan . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 96
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 84

   29 CONDITION: EXPRESSION TO_lessThanOrEqual . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 97
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 85

   28 CONDITION: EXPRESSION TO_moreThanOrEqual . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 98
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 86

   24 CONDITION: EXPRESSION TO_equalTo . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 99
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 87

   26 CONDITION: EXPRESSION TO_notEqualTo . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 100
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 88

   31 CONDITION: EXPRESSION TO_logicOr . EXPRESSION

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TC_integer    shift, and go to state 21

    EXPRESSION     go to state 101
    TERM           go to state 23
    FACTOR         go to state 24
    FUNCTION_CALL  go to state 25


State 89

   16 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET . STATEMENT
   17                    | TK_while T_LBRACKET CONDITION T_RBRACKET . T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACE      shift, and go to state 102
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 103
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 90

   38 VARIABLE_DECLARATION: RETURNTYPE T_IDENTIFIER TO_equal EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 38 (VARIABLE_DECLARATION)


State 91

   14 STATEMENT: EXPRESSION TO_equal EXPRESSION TP_semiColon .

    $default  reduce using rule 14 (STATEMENT)


State 92

   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE
   21                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else STATEMENT
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 104
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 93

   18 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT .
   20                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else STATEMENT
   22                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 105

    TK_else   [reduce using rule 18 (SELECTION_STATEMENT)]
    $default  reduce using rule 18 (SELECTION_STATEMENT)


State 94

   30 CONDITION: EXPRESSION TO_logicAnd EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 30 (CONDITION)


State 95

   25 CONDITION: EXPRESSION TO_lessThan EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 25 (CONDITION)


State 96

   27 CONDITION: EXPRESSION TO_moreThan EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 27 (CONDITION)


State 97

   29 CONDITION: EXPRESSION TO_lessThanOrEqual EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 29 (CONDITION)


State 98

   28 CONDITION: EXPRESSION TO_moreThanOrEqual EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 28 (CONDITION)


State 99

   24 CONDITION: EXPRESSION TO_equalTo EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 24 (CONDITION)


State 100

   26 CONDITION: EXPRESSION TO_notEqualTo EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 26 (CONDITION)


State 101

   31 CONDITION: EXPRESSION TO_logicOr EXPRESSION .
   44 EXPRESSION: EXPRESSION . TO_plus EXPRESSION
   45           | EXPRESSION . TO_minus EXPRESSION

    TO_plus   shift, and go to state 33
    TO_minus  shift, and go to state 34

    $default  reduce using rule 31 (CONDITION)


State 102

   17 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 106
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 103

   16 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET STATEMENT .

    $default  reduce using rule 16 (ITERATION_STATEMENT)


State 104

    9 BLOCK: BLOCK . STATEMENT
   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE
   21                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else STATEMENT
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 107
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 105

   20 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . STATEMENT
   22                    | TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else . T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACE      shift, and go to state 108
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 109
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 106

    9 BLOCK: BLOCK . STATEMENT
   17 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK . T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 110
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 107

   19 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE .
   21                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else STATEMENT
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE . TK_else T_LBRACE BLOCK T_RBRACE

    TK_else  shift, and go to state 111

    TK_else   [reduce using rule 19 (SELECTION_STATEMENT)]
    $default  reduce using rule 19 (SELECTION_STATEMENT)


State 108

   22 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 112
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 109

   20 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else STATEMENT .

    $default  reduce using rule 20 (SELECTION_STATEMENT)


State 110

   17 ITERATION_STATEMENT: TK_while T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 17 (ITERATION_STATEMENT)


State 111

   21 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . STATEMENT
   23                    | TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else . T_LBRACE BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACE      shift, and go to state 113
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 114
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 112

    9 BLOCK: BLOCK . STATEMENT
   22 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK . T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 115
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 113

   23 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE . BLOCK T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    BLOCK                 go to state 116
    STATEMENT             go to state 42
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 114

   21 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else STATEMENT .

    $default  reduce using rule 21 (SELECTION_STATEMENT)


State 115

   22 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET STATEMENT TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 22 (SELECTION_STATEMENT)


State 116

    9 BLOCK: BLOCK . STATEMENT
   23 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK . T_RBRACE

    T_IDENTIFIER  shift, and go to state 19
    T_RBRACE      shift, and go to state 117
    T_LBRACKET    shift, and go to state 20
    TK_if         shift, and go to state 38
    TK_int        shift, and go to state 1
    TK_return     shift, and go to state 39
    TK_void       shift, and go to state 2
    TK_while      shift, and go to state 40
    TC_integer    shift, and go to state 21

    STATEMENT             go to state 64
    ITERATION_STATEMENT   go to state 43
    SELECTION_STATEMENT   go to state 44
    VARIABLE_DECLARATION  go to state 45
    RETURNTYPE            go to state 46
    EXPRESSION            go to state 47
    TERM                  go to state 23
    FACTOR                go to state 24
    FUNCTION_CALL         go to state 25


State 117

   23 SELECTION_STATEMENT: TK_if T_LBRACKET CONDITION T_RBRACKET T_LBRACE BLOCK T_RBRACE TK_else T_LBRACE BLOCK T_RBRACE .

    $default  reduce using rule 23 (SELECTION_STATEMENT)
