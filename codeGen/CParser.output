Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_const
   TK_continue
   TK_default
   TK_do
   TK_else
   TK_enum
   TK_extern
   TK_for
   TK_goto
   TK_if
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_volatile
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_divide
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_ampersand
   TO_logicAnd
   TO_asterix
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThan
   TO_moreThan
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_equalTo
   TO_notEqualTo
   TO_plus
   TO_minus
   TO_increment
   TO_decrement
   TO_equal
   TP_comma
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr
   TO_OrEqual
   TO_exOrEqual
   TO_andEqual
   TO_rightEqual
   TO_leftEqual
   TO_minusEqual
   TO_plusEqual
   TO_divEqual
   TO_multEqual
   TO_OR
   TO_logicOr
   TO_exclussiveOr
   TO_questionMark
   TO_modEqual


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    2                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    5 STATEMENT: COMPOUND_STATEMENT
    6          | JUMP_STATEMENT

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE
    8                   | T_LBRACE T_RBRACE

    9 STATEMENT_LIST: STATEMENT
   10               | STATEMENT_LIST STATEMENT

   11 JUMP_STATEMENT: TK_return TP_semiColon
   12               | TK_return EXPRESSION TP_semiColon

   13 DECLARATION_SPECIFIERS: TYPE_SPECIFIER

   14 DECLARATOR: DIRECT_DECLARATOR

   15 DIRECT_DECLARATOR: T_IDENTIFIER
   16                  | T_LBRACKET DECLARATOR T_RBRACKET
   17                  | DIRECT_DECLARATOR T_LBRACKET T_RBRACKET

   18 TYPE_SPECIFIER: TK_void
   19               | TK_char
   20               | TK_short
   21               | TK_int
   22               | TK_long
   23               | TK_float
   24               | TK_double
   25               | TK_signed
   26               | TK_unsigned

   27 EXPRESSION: PRIMARY_EXPRESSION

   28 PRIMARY_EXPRESSION: CONSTANT

   29 CONSTANT: TC_integer


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 15
T_LBRACE (259) 7 8
T_RBRACE (260) 7 8
T_LBRACKET (261) 16 17
T_RBRACKET (262) 16 17
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 19
TK_const (269)
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273) 24
TK_else (274)
TK_enum (275)
TK_extern (276)
TK_float (277) 23
TK_for (278)
TK_goto (279)
TK_if (280)
TK_int (281) 21
TK_long (282) 22
TK_register (283)
TK_return (284) 11 12
TK_short (285) 20
TK_signed (286) 25
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 26
TK_void (294) 18
TK_volatile (295)
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300)
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304)
TO_logicAnd (305)
TO_asterix (306)
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310)
TO_moreThan (311)
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314)
TO_notEqualTo (315)
TO_plus (316)
TO_minus (317)
TO_increment (318)
TO_decrement (319)
TO_equal (320)
TP_comma (321)
TP_colon (322)
TP_semiColon (323) 11 12
TC_integer (324) 29
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334)
TO_exOrEqual (335)
TO_andEqual (336)
TO_rightEqual (337)
TO_leftEqual (338)
TO_minusEqual (339)
TO_plusEqual (340)
TO_divEqual (341)
TO_multEqual (342)
TO_OR (343)
TO_logicOr (344)
TO_exclussiveOr (345)
TO_questionMark (346)
TO_modEqual (347)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
TRANSLATION_UNIT (94)
    on left: 1 2, on right: 0 2
EXTERNAL_DECLARATION (95)
    on left: 3, on right: 1 2
FUNCTION_DEFINITION (96)
    on left: 4, on right: 3
STATEMENT (97)
    on left: 5 6, on right: 9 10
COMPOUND_STATEMENT (98)
    on left: 7 8, on right: 4 5
STATEMENT_LIST (99)
    on left: 9 10, on right: 7 10
JUMP_STATEMENT (100)
    on left: 11 12, on right: 6
DECLARATION_SPECIFIERS (101)
    on left: 13, on right: 4
DECLARATOR (102)
    on left: 14, on right: 4 16
DIRECT_DECLARATOR (103)
    on left: 15 16 17, on right: 14 17
TYPE_SPECIFIER (104)
    on left: 18 19 20 21 22 23 24 25 26, on right: 13
EXPRESSION (105)
    on left: 27, on right: 12
PRIMARY_EXPRESSION (106)
    on left: 28, on right: 27
CONSTANT (107)
    on left: 29, on right: 28


State 0

    0 $accept: . TRANSLATION_UNIT $end

    TK_char      shift, and go to state 1
    TK_double    shift, and go to state 2
    TK_float     shift, and go to state 3
    TK_int       shift, and go to state 4
    TK_long      shift, and go to state 5
    TK_short     shift, and go to state 6
    TK_signed    shift, and go to state 7
    TK_unsigned  shift, and go to state 8
    TK_void      shift, and go to state 9

    TRANSLATION_UNIT        go to state 10
    EXTERNAL_DECLARATION    go to state 11
    FUNCTION_DEFINITION     go to state 12
    DECLARATION_SPECIFIERS  go to state 13
    TYPE_SPECIFIER          go to state 14


State 1

   19 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 19 (TYPE_SPECIFIER)


State 2

   24 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 24 (TYPE_SPECIFIER)


State 3

   23 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 23 (TYPE_SPECIFIER)


State 4

   21 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 21 (TYPE_SPECIFIER)


State 5

   22 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 22 (TYPE_SPECIFIER)


State 6

   20 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 20 (TYPE_SPECIFIER)


State 7

   25 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 25 (TYPE_SPECIFIER)


State 8

   26 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 26 (TYPE_SPECIFIER)


State 9

   18 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 18 (TYPE_SPECIFIER)


State 10

    0 $accept: TRANSLATION_UNIT . $end
    2 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end         shift, and go to state 15
    TK_char      shift, and go to state 1
    TK_double    shift, and go to state 2
    TK_float     shift, and go to state 3
    TK_int       shift, and go to state 4
    TK_long      shift, and go to state 5
    TK_short     shift, and go to state 6
    TK_signed    shift, and go to state 7
    TK_unsigned  shift, and go to state 8
    TK_void      shift, and go to state 9

    EXTERNAL_DECLARATION    go to state 16
    FUNCTION_DEFINITION     go to state 12
    DECLARATION_SPECIFIERS  go to state 13
    TYPE_SPECIFIER          go to state 14


State 11

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 1 (TRANSLATION_UNIT)


State 12

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 13

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT

    T_IDENTIFIER  shift, and go to state 17
    T_LBRACKET    shift, and go to state 18

    DECLARATOR         go to state 19
    DIRECT_DECLARATOR  go to state 20


State 14

   13 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .

    $default  reduce using rule 13 (DECLARATION_SPECIFIERS)


State 15

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 16

    2 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 17

   15 DIRECT_DECLARATOR: T_IDENTIFIER .

    $default  reduce using rule 15 (DIRECT_DECLARATOR)


State 18

   16 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 17
    T_LBRACKET    shift, and go to state 18

    DECLARATOR         go to state 21
    DIRECT_DECLARATOR  go to state 20


State 19

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT

    T_LBRACE  shift, and go to state 22

    COMPOUND_STATEMENT  go to state 23


State 20

   14 DECLARATOR: DIRECT_DECLARATOR .
   17 DIRECT_DECLARATOR: DIRECT_DECLARATOR . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 24

    $default  reduce using rule 14 (DECLARATOR)


State 21

   16 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 25


State 22

    7 COMPOUND_STATEMENT: T_LBRACE . STATEMENT_LIST T_RBRACE
    8                   | T_LBRACE . T_RBRACE

    T_LBRACE   shift, and go to state 22
    T_RBRACE   shift, and go to state 26
    TK_return  shift, and go to state 27

    STATEMENT           go to state 28
    COMPOUND_STATEMENT  go to state 29
    STATEMENT_LIST      go to state 30
    JUMP_STATEMENT      go to state 31


State 23

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 4 (FUNCTION_DEFINITION)


State 24

   17 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET . T_RBRACKET

    T_RBRACKET  shift, and go to state 32


State 25

   16 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 16 (DIRECT_DECLARATOR)


State 26

    8 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 8 (COMPOUND_STATEMENT)


State 27

   11 JUMP_STATEMENT: TK_return . TP_semiColon
   12               | TK_return . EXPRESSION TP_semiColon

    TP_semiColon  shift, and go to state 33
    TC_integer    shift, and go to state 34

    EXPRESSION          go to state 35
    PRIMARY_EXPRESSION  go to state 36
    CONSTANT            go to state 37


State 28

    9 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 29

    5 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 5 (STATEMENT)


State 30

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE
   10 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_LBRACE   shift, and go to state 22
    T_RBRACE   shift, and go to state 38
    TK_return  shift, and go to state 27

    STATEMENT           go to state 39
    COMPOUND_STATEMENT  go to state 29
    JUMP_STATEMENT      go to state 31


State 31

    6 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


State 32

   17 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET T_RBRACKET .

    $default  reduce using rule 17 (DIRECT_DECLARATOR)


State 33

   11 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 11 (JUMP_STATEMENT)


State 34

   29 CONSTANT: TC_integer .

    $default  reduce using rule 29 (CONSTANT)


State 35

   12 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 40


State 36

   27 EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 27 (EXPRESSION)


State 37

   28 PRIMARY_EXPRESSION: CONSTANT .

    $default  reduce using rule 28 (PRIMARY_EXPRESSION)


State 38

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 7 (COMPOUND_STATEMENT)


State 39

   10 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 10 (STATEMENT_LIST)


State 40

   12 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 12 (JUMP_STATEMENT)
