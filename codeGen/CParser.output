Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_continue
   TK_default
   TK_do
   TK_else
   TK_enum
   TK_extern
   TK_for
   TK_goto
   TK_if
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_logicAnd
   TO_increment
   TO_decrement
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr
   TO_logicOr
   TO_questionMark


State 56 conflicts: 2 reduce/reduce
State 57 conflicts: 2 reduce/reduce
State 58 conflicts: 2 reduce/reduce
State 59 conflicts: 2 reduce/reduce
State 60 conflicts: 2 reduce/reduce
State 61 conflicts: 2 reduce/reduce
State 62 conflicts: 2 reduce/reduce
State 63 conflicts: 2 reduce/reduce
State 64 conflicts: 2 reduce/reduce
State 65 conflicts: 2 reduce/reduce
State 66 conflicts: 2 reduce/reduce
State 67 conflicts: 2 reduce/reduce


Grammar

    0 $accept: START $end

    1 START: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION
    3                 | DECLARATION
    4                 | FUNCTION_DEFINITION TRANSLATION_UNIT
    5                 | DECLARATION TRANSLATION_UNIT

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    7 STATEMENT: COMPOUND_STATEMENT
    8          | JUMP_STATEMENT
    9          | EXPRESSION_STATEMENT

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE
   11                   | T_LBRACE STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE DECLARATION_LIST T_RBRACE
   13                   | T_LBRACE T_RBRACE

   14 DECLARATION_LIST: DECLARATION
   15                 | DECLARATION DECLARATION_LIST

   16 STATEMENT_LIST: STATEMENT
   17               | STATEMENT STATEMENT_LIST

   18 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon
   19                     | TP_semiColon

   20 JUMP_STATEMENT: TK_return TP_semiColon
   21               | TK_return EXPRESSION TP_semiColon

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon

   23 DECLARATION_SPECIFIERS: TYPE_SPECIFIER
   24                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS
   25                       | TYPE_QUALIFIER
   26                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS

   27 INIT_DECLARATION_LIST: INIT_DECLARATOR

   28 INIT_DECLARATOR: DECLARATOR

   29 DECLARATOR: DIRECT_DECLARATOR

   30 DIRECT_DECLARATOR: T_IDENTIFIER
   31                  | T_LBRACKET DECLARATOR T_RBRACKET
   32                  | T_IDENTIFIER T_LBRACKET T_RBRACKET
   33                  | T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

   34 PARAMETER_TYPE_LIST: PARAMETER_LIST

   35 PARAMETER_LIST: PARAMETER_DECLARATION
   36               | PARAMETER_DECLARATION TP_comma PARAMETER_LIST

   37 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR

   38 TYPE_SPECIFIER: TK_void
   39               | TK_char
   40               | TK_short
   41               | TK_int
   42               | TK_long
   43               | TK_float
   44               | TK_double
   45               | TK_signed
   46               | TK_unsigned

   47 TYPE_QUALIFIER: TK_const
   48               | TK_volatile

   49 EXPRESSION: PRIMARY_EXPRESSION
   50           | MULTIPLICATIVE_EXPRESSION
   51           | ADDITIVE_EXPRESSION
   52           | ASSIGNMENT_EXPRESSION
   53           | AND_EXPRESSION
   54           | EXCLUSIVE_OR_EXPRESSION
   55           | INCLUSIVE_OR_EXPRESSION
   56           | SHIFT_EXPRESSION
   57           | RELATIONAL_EXPRESSION
   58           | EQUALITY_EXPRESSION
   59           | POSTFIX_EXPRESSION
   60           | UNARY_EXPRESSION
   61           | CAST_EXPRESSION

   62 PRIMARY_EXPRESSION: TC_integer
   63                   | T_LBRACKET EXPRESSION T_RBRACKET
   64                   | T_IDENTIFIER

   65 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
   66                   | T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   67                   | T_IDENTIFIER T_LBRACKET T_RBRACKET

   68 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
   69                         | ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST

   70 UNARY_EXPRESSION: POSTFIX_EXPRESSION

   71 CAST_EXPRESSION: UNARY_EXPRESSION

   72 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   73                          | MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION
   74                          | MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION
   75                          | MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION

   76 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   77                    | ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION

   79 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   80                 | SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION

   82 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   83                      | RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION

   87 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   88                    | EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION
   89                    | EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION

   90 AND_EXPRESSION: EQUALITY_EXPRESSION
   91               | AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION

   92 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   93                        | EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION

   94 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   95                        | INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION

   96 CONDITIONAL_EXPRESSION: INCLUSIVE_OR_EXPRESSION

   97 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   98                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

   99 ASSIGNMENT_OPERATOR: TO_equal
  100                    | TO_multEqual
  101                    | TO_divEqual
  102                    | TO_modEqual
  103                    | TO_plusEqual
  104                    | TO_minusEqual
  105                    | TO_rightEqual
  106                    | TO_leftEqual
  107                    | TO_andEqual
  108                    | TO_exOrEqual
  109                    | TO_OrEqual


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 30 32 33 64 66 67
T_LBRACE (259) 10 11 12 13
T_RBRACE (260) 10 11 12 13
T_LBRACKET (261) 31 32 33 63 66 67
T_RBRACKET (262) 31 32 33 63 66 67
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 39
TK_const (269) 47
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273) 44
TK_else (274)
TK_enum (275)
TK_extern (276)
TK_float (277) 43
TK_for (278)
TK_goto (279)
TK_if (280)
TK_int (281) 41
TK_long (282) 42
TK_register (283)
TK_return (284) 20 21
TK_short (285) 40
TK_signed (286) 45
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 46
TK_void (294) 38
TK_volatile (295) 48
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 74
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304) 91
TO_logicAnd (305)
TO_asterix (306) 73
TO_mod (307) 75
TO_bitwiseLeft (308) 80
TO_bitwiseRight (309) 81
TO_lessThan (310) 83
TO_moreThan (311) 84
TO_lessThanOrEqual (312) 85
TO_moreThanOrEqual (313) 86
TO_equalTo (314) 88
TO_notEqualTo (315) 89
TO_plus (316) 77
TO_minus (317) 78
TO_increment (318)
TO_decrement (319)
TO_equal (320) 99
TP_comma (321) 36 69
TP_colon (322)
TP_semiColon (323) 18 19 20 21 22
TC_integer (324) 62
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334) 109
TO_exOrEqual (335) 108
TO_andEqual (336) 107
TO_rightEqual (337) 105
TO_leftEqual (338) 106
TO_minusEqual (339) 104
TO_plusEqual (340) 103
TO_divEqual (341) 101
TO_multEqual (342) 100
TO_OR (343) 95
TO_logicOr (344)
TO_exclussiveOr (345) 93
TO_questionMark (346)
TO_modEqual (347) 102


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
START (94)
    on left: 1, on right: 0
TRANSLATION_UNIT (95)
    on left: 2 3 4 5, on right: 1 4 5
FUNCTION_DEFINITION (96)
    on left: 6, on right: 2 4
STATEMENT (97)
    on left: 7 8 9, on right: 16 17
COMPOUND_STATEMENT (98)
    on left: 10 11 12 13, on right: 6 7
DECLARATION_LIST (99)
    on left: 14 15, on right: 10 12 15
STATEMENT_LIST (100)
    on left: 16 17, on right: 10 11 17
EXPRESSION_STATEMENT (101)
    on left: 18 19, on right: 9
JUMP_STATEMENT (102)
    on left: 20 21, on right: 8
DECLARATION (103)
    on left: 22, on right: 3 5 14 15
DECLARATION_SPECIFIERS (104)
    on left: 23 24 25 26, on right: 6 22 24 26 37
INIT_DECLARATION_LIST (105)
    on left: 27, on right: 22
INIT_DECLARATOR (106)
    on left: 28, on right: 27
DECLARATOR (107)
    on left: 29, on right: 6 28 31 37
DIRECT_DECLARATOR (108)
    on left: 30 31 32 33, on right: 29
PARAMETER_TYPE_LIST (109)
    on left: 34, on right: 33
PARAMETER_LIST (110)
    on left: 35 36, on right: 34 36
PARAMETER_DECLARATION (111)
    on left: 37, on right: 35 36
TYPE_SPECIFIER (112)
    on left: 38 39 40 41 42 43 44 45 46, on right: 23 24
TYPE_QUALIFIER (113)
    on left: 47 48, on right: 25 26
EXPRESSION (114)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61, on right: 18 21
    63
PRIMARY_EXPRESSION (115)
    on left: 62 63 64, on right: 49 65
POSTFIX_EXPRESSION (116)
    on left: 65 66 67, on right: 59 70
ARGUMENT_EXPRESSION_LIST (117)
    on left: 68 69, on right: 66 69
UNARY_EXPRESSION (118)
    on left: 70, on right: 60 71 98
CAST_EXPRESSION (119)
    on left: 71, on right: 61 72 73 74 75
MULTIPLICATIVE_EXPRESSION (120)
    on left: 72 73 74 75, on right: 50 73 74 75 76 77 78
ADDITIVE_EXPRESSION (121)
    on left: 76 77 78, on right: 51 77 78 79 80 81 91
SHIFT_EXPRESSION (122)
    on left: 79 80 81, on right: 56 80 81 82 83 84 85 86
RELATIONAL_EXPRESSION (123)
    on left: 82 83 84 85 86, on right: 57 83 84 85 86 87 88 89
EQUALITY_EXPRESSION (124)
    on left: 87 88 89, on right: 58 88 89 90
AND_EXPRESSION (125)
    on left: 90 91, on right: 53 91 92 93
EXCLUSIVE_OR_EXPRESSION (126)
    on left: 92 93, on right: 54 93 94 95
INCLUSIVE_OR_EXPRESSION (127)
    on left: 94 95, on right: 55 95 96
CONDITIONAL_EXPRESSION (128)
    on left: 96, on right: 97
ASSIGNMENT_EXPRESSION (129)
    on left: 97 98, on right: 52 68 69 98
ASSIGNMENT_OPERATOR (130)
    on left: 99 100 101 102 103 104 105 106 107 108 109, on right:
    98


State 0

    0 $accept: . START $end

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    START                   go to state 12
    TRANSLATION_UNIT        go to state 13
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 1

   39 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 39 (TYPE_SPECIFIER)


State 2

   47 TYPE_QUALIFIER: TK_const .

    $default  reduce using rule 47 (TYPE_QUALIFIER)


State 3

   44 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 44 (TYPE_SPECIFIER)


State 4

   43 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 43 (TYPE_SPECIFIER)


State 5

   41 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 41 (TYPE_SPECIFIER)


State 6

   42 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 42 (TYPE_SPECIFIER)


State 7

   40 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 40 (TYPE_SPECIFIER)


State 8

   45 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 45 (TYPE_SPECIFIER)


State 9

   46 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 46 (TYPE_SPECIFIER)


State 10

   38 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 38 (TYPE_SPECIFIER)


State 11

   48 TYPE_QUALIFIER: TK_volatile .

    $default  reduce using rule 48 (TYPE_QUALIFIER)


State 12

    0 $accept: START . $end

    $end  shift, and go to state 19


State 13

    1 START: TRANSLATION_UNIT .

    $default  reduce using rule 1 (START)


State 14

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION .
    4                 | FUNCTION_DEFINITION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 2 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 20
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 15

    3 TRANSLATION_UNIT: DECLARATION .
    5                 | DECLARATION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 3 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 21
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 16

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
   22 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 26
    DIRECT_DECLARATOR      go to state 27


State 17

   23 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .
   24                       | TYPE_SPECIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 23 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 28
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 18

   25 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .
   26                       | TYPE_QUALIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 25 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 29
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 19

    0 $accept: START $end .

    $default  accept


State 20

    4 TRANSLATION_UNIT: FUNCTION_DEFINITION TRANSLATION_UNIT .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 21

    5 TRANSLATION_UNIT: DECLARATION TRANSLATION_UNIT .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 22

   30 DIRECT_DECLARATOR: T_IDENTIFIER .
   32                  | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   33                  | T_IDENTIFIER . T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 30

    $default  reduce using rule 30 (DIRECT_DECLARATOR)


State 23

   31 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 31
    DIRECT_DECLARATOR  go to state 27


State 24

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST . TP_semiColon

    TP_semiColon  shift, and go to state 32


State 25

   27 INIT_DECLARATION_LIST: INIT_DECLARATOR .

    $default  reduce using rule 27 (INIT_DECLARATION_LIST)


State 26

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   28 INIT_DECLARATOR: DECLARATOR .

    T_LBRACE  shift, and go to state 33

    $default  reduce using rule 28 (INIT_DECLARATOR)

    COMPOUND_STATEMENT  go to state 34


State 27

   29 DECLARATOR: DIRECT_DECLARATOR .

    $default  reduce using rule 29 (DECLARATOR)


State 28

   24 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 24 (DECLARATION_SPECIFIERS)


State 29

   26 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 26 (DECLARATION_SPECIFIERS)


State 30

   32 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   33                  | T_IDENTIFIER T_LBRACKET . PARAMETER_TYPE_LIST T_RBRACKET

    T_RBRACKET   shift, and go to state 35
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_TYPE_LIST     go to state 37
    PARAMETER_LIST          go to state 38
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 31

   31 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 40


State 32

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon .

    $default  reduce using rule 22 (DECLARATION)


State 33

   10 COMPOUND_STATEMENT: T_LBRACE . DECLARATION_LIST STATEMENT_LIST T_RBRACE
   11                   | T_LBRACE . STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE . DECLARATION_LIST T_RBRACE
   13                   | T_LBRACE . T_RBRACE

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACE      shift, and go to state 33
    T_RBRACE      shift, and go to state 42
    T_LBRACKET    shift, and go to state 43
    TK_char       shift, and go to state 1
    TK_const      shift, and go to state 2
    TK_double     shift, and go to state 3
    TK_float      shift, and go to state 4
    TK_int        shift, and go to state 5
    TK_long       shift, and go to state 6
    TK_return     shift, and go to state 44
    TK_short      shift, and go to state 7
    TK_signed     shift, and go to state 8
    TK_unsigned   shift, and go to state 9
    TK_void       shift, and go to state 10
    TK_volatile   shift, and go to state 11
    TP_semiColon  shift, and go to state 45
    TC_integer    shift, and go to state 46

    STATEMENT                  go to state 47
    COMPOUND_STATEMENT         go to state 48
    DECLARATION_LIST           go to state 49
    STATEMENT_LIST             go to state 50
    EXPRESSION_STATEMENT       go to state 51
    JUMP_STATEMENT             go to state 52
    DECLARATION                go to state 53
    DECLARATION_SPECIFIERS     go to state 54
    TYPE_SPECIFIER             go to state 17
    TYPE_QUALIFIER             go to state 18
    EXPRESSION                 go to state 55
    PRIMARY_EXPRESSION         go to state 56
    POSTFIX_EXPRESSION         go to state 57
    UNARY_EXPRESSION           go to state 58
    CAST_EXPRESSION            go to state 59
    MULTIPLICATIVE_EXPRESSION  go to state 60
    ADDITIVE_EXPRESSION        go to state 61
    SHIFT_EXPRESSION           go to state 62
    RELATIONAL_EXPRESSION      go to state 63
    EQUALITY_EXPRESSION        go to state 64
    AND_EXPRESSION             go to state 65
    EXCLUSIVE_OR_EXPRESSION    go to state 66
    INCLUSIVE_OR_EXPRESSION    go to state 67
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 69


State 34

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 6 (FUNCTION_DEFINITION)


State 35

   32 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 32 (DIRECT_DECLARATOR)


State 36

   37 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS . DECLARATOR

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 70
    DIRECT_DECLARATOR  go to state 27


State 37

   33 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 71


State 38

   34 PARAMETER_TYPE_LIST: PARAMETER_LIST .

    $default  reduce using rule 34 (PARAMETER_TYPE_LIST)


State 39

   35 PARAMETER_LIST: PARAMETER_DECLARATION .
   36               | PARAMETER_DECLARATION . TP_comma PARAMETER_LIST

    TP_comma  shift, and go to state 72

    $default  reduce using rule 35 (PARAMETER_LIST)


State 40

   31 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 31 (DIRECT_DECLARATOR)


State 41

   64 PRIMARY_EXPRESSION: T_IDENTIFIER .
   66 POSTFIX_EXPRESSION: T_IDENTIFIER . T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   67                   | T_IDENTIFIER . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 73

    $default  reduce using rule 64 (PRIMARY_EXPRESSION)


State 42

   13 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 13 (COMPOUND_STATEMENT)


State 43

   63 PRIMARY_EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    EXPRESSION                 go to state 74
    PRIMARY_EXPRESSION         go to state 56
    POSTFIX_EXPRESSION         go to state 57
    UNARY_EXPRESSION           go to state 58
    CAST_EXPRESSION            go to state 59
    MULTIPLICATIVE_EXPRESSION  go to state 60
    ADDITIVE_EXPRESSION        go to state 61
    SHIFT_EXPRESSION           go to state 62
    RELATIONAL_EXPRESSION      go to state 63
    EQUALITY_EXPRESSION        go to state 64
    AND_EXPRESSION             go to state 65
    EXCLUSIVE_OR_EXPRESSION    go to state 66
    INCLUSIVE_OR_EXPRESSION    go to state 67
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 69


State 44

   20 JUMP_STATEMENT: TK_return . TP_semiColon
   21               | TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TP_semiColon  shift, and go to state 75
    TC_integer    shift, and go to state 46

    EXPRESSION                 go to state 76
    PRIMARY_EXPRESSION         go to state 56
    POSTFIX_EXPRESSION         go to state 57
    UNARY_EXPRESSION           go to state 58
    CAST_EXPRESSION            go to state 59
    MULTIPLICATIVE_EXPRESSION  go to state 60
    ADDITIVE_EXPRESSION        go to state 61
    SHIFT_EXPRESSION           go to state 62
    RELATIONAL_EXPRESSION      go to state 63
    EQUALITY_EXPRESSION        go to state 64
    AND_EXPRESSION             go to state 65
    EXCLUSIVE_OR_EXPRESSION    go to state 66
    INCLUSIVE_OR_EXPRESSION    go to state 67
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 69


State 45

   19 EXPRESSION_STATEMENT: TP_semiColon .

    $default  reduce using rule 19 (EXPRESSION_STATEMENT)


State 46

   62 PRIMARY_EXPRESSION: TC_integer .

    $default  reduce using rule 62 (PRIMARY_EXPRESSION)


State 47

   16 STATEMENT_LIST: STATEMENT .
   17               | STATEMENT . STATEMENT_LIST

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACE      shift, and go to state 33
    T_LBRACKET    shift, and go to state 43
    TK_return     shift, and go to state 44
    TP_semiColon  shift, and go to state 45
    TC_integer    shift, and go to state 46

    $default  reduce using rule 16 (STATEMENT_LIST)

    STATEMENT                  go to state 47
    COMPOUND_STATEMENT         go to state 48
    STATEMENT_LIST             go to state 77
    EXPRESSION_STATEMENT       go to state 51
    JUMP_STATEMENT             go to state 52
    EXPRESSION                 go to state 55
    PRIMARY_EXPRESSION         go to state 56
    POSTFIX_EXPRESSION         go to state 57
    UNARY_EXPRESSION           go to state 58
    CAST_EXPRESSION            go to state 59
    MULTIPLICATIVE_EXPRESSION  go to state 60
    ADDITIVE_EXPRESSION        go to state 61
    SHIFT_EXPRESSION           go to state 62
    RELATIONAL_EXPRESSION      go to state 63
    EQUALITY_EXPRESSION        go to state 64
    AND_EXPRESSION             go to state 65
    EXCLUSIVE_OR_EXPRESSION    go to state 66
    INCLUSIVE_OR_EXPRESSION    go to state 67
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 69


State 48

    7 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 49

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST . STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE DECLARATION_LIST . T_RBRACE

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACE      shift, and go to state 33
    T_RBRACE      shift, and go to state 78
    T_LBRACKET    shift, and go to state 43
    TK_return     shift, and go to state 44
    TP_semiColon  shift, and go to state 45
    TC_integer    shift, and go to state 46

    STATEMENT                  go to state 47
    COMPOUND_STATEMENT         go to state 48
    STATEMENT_LIST             go to state 79
    EXPRESSION_STATEMENT       go to state 51
    JUMP_STATEMENT             go to state 52
    EXPRESSION                 go to state 55
    PRIMARY_EXPRESSION         go to state 56
    POSTFIX_EXPRESSION         go to state 57
    UNARY_EXPRESSION           go to state 58
    CAST_EXPRESSION            go to state 59
    MULTIPLICATIVE_EXPRESSION  go to state 60
    ADDITIVE_EXPRESSION        go to state 61
    SHIFT_EXPRESSION           go to state 62
    RELATIONAL_EXPRESSION      go to state 63
    EQUALITY_EXPRESSION        go to state 64
    AND_EXPRESSION             go to state 65
    EXCLUSIVE_OR_EXPRESSION    go to state 66
    INCLUSIVE_OR_EXPRESSION    go to state 67
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 69


State 50

   11 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 80


State 51

    9 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 52

    8 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 53

   14 DECLARATION_LIST: DECLARATION .
   15                 | DECLARATION . DECLARATION_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 14 (DECLARATION_LIST)

    DECLARATION_LIST        go to state 81
    DECLARATION             go to state 53
    DECLARATION_SPECIFIERS  go to state 54
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 54

   22 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 82
    DIRECT_DECLARATOR      go to state 27


State 55

   18 EXPRESSION_STATEMENT: EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 83


State 56

   49 EXPRESSION: PRIMARY_EXPRESSION .
   65 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    T_RBRACKET    reduce using rule 49 (EXPRESSION)
    T_RBRACKET    [reduce using rule 65 (POSTFIX_EXPRESSION)]
    TP_semiColon  reduce using rule 49 (EXPRESSION)
    TP_semiColon  [reduce using rule 65 (POSTFIX_EXPRESSION)]
    $default      reduce using rule 65 (POSTFIX_EXPRESSION)


State 57

   59 EXPRESSION: POSTFIX_EXPRESSION .
   70 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    T_RBRACKET    reduce using rule 59 (EXPRESSION)
    T_RBRACKET    [reduce using rule 70 (UNARY_EXPRESSION)]
    TP_semiColon  reduce using rule 59 (EXPRESSION)
    TP_semiColon  [reduce using rule 70 (UNARY_EXPRESSION)]
    $default      reduce using rule 70 (UNARY_EXPRESSION)


State 58

   60 EXPRESSION: UNARY_EXPRESSION .
   71 CAST_EXPRESSION: UNARY_EXPRESSION .
   98 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 84
    TO_OrEqual     shift, and go to state 85
    TO_exOrEqual   shift, and go to state 86
    TO_andEqual    shift, and go to state 87
    TO_rightEqual  shift, and go to state 88
    TO_leftEqual   shift, and go to state 89
    TO_minusEqual  shift, and go to state 90
    TO_plusEqual   shift, and go to state 91
    TO_divEqual    shift, and go to state 92
    TO_multEqual   shift, and go to state 93
    TO_modEqual    shift, and go to state 94

    T_RBRACKET    reduce using rule 60 (EXPRESSION)
    T_RBRACKET    [reduce using rule 71 (CAST_EXPRESSION)]
    TP_semiColon  reduce using rule 60 (EXPRESSION)
    TP_semiColon  [reduce using rule 71 (CAST_EXPRESSION)]
    $default      reduce using rule 71 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 95


State 59

   61 EXPRESSION: CAST_EXPRESSION .
   72 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    T_RBRACKET    reduce using rule 61 (EXPRESSION)
    T_RBRACKET    [reduce using rule 72 (MULTIPLICATIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 61 (EXPRESSION)
    TP_semiColon  [reduce using rule 72 (MULTIPLICATIVE_EXPRESSION)]
    $default      reduce using rule 72 (MULTIPLICATIVE_EXPRESSION)


State 60

   50 EXPRESSION: MULTIPLICATIVE_EXPRESSION .
   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   74                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   75                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   76 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 96
    TO_asterix  shift, and go to state 97
    TO_mod      shift, and go to state 98

    T_RBRACKET    reduce using rule 50 (EXPRESSION)
    T_RBRACKET    [reduce using rule 76 (ADDITIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 50 (EXPRESSION)
    TP_semiColon  [reduce using rule 76 (ADDITIVE_EXPRESSION)]
    $default      reduce using rule 76 (ADDITIVE_EXPRESSION)


State 61

   51 EXPRESSION: ADDITIVE_EXPRESSION .
   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   79 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 99
    TO_minus  shift, and go to state 100

    T_RBRACKET    reduce using rule 51 (EXPRESSION)
    T_RBRACKET    [reduce using rule 79 (SHIFT_EXPRESSION)]
    TP_semiColon  reduce using rule 51 (EXPRESSION)
    TP_semiColon  [reduce using rule 79 (SHIFT_EXPRESSION)]
    $default      reduce using rule 79 (SHIFT_EXPRESSION)


State 62

   56 EXPRESSION: SHIFT_EXPRESSION .
   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   82 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    T_RBRACKET    reduce using rule 56 (EXPRESSION)
    T_RBRACKET    [reduce using rule 82 (RELATIONAL_EXPRESSION)]
    TP_semiColon  reduce using rule 56 (EXPRESSION)
    TP_semiColon  [reduce using rule 82 (RELATIONAL_EXPRESSION)]
    $default      reduce using rule 82 (RELATIONAL_EXPRESSION)


State 63

   57 EXPRESSION: RELATIONAL_EXPRESSION .
   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   87 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 103
    TO_moreThan         shift, and go to state 104
    TO_lessThanOrEqual  shift, and go to state 105
    TO_moreThanOrEqual  shift, and go to state 106

    T_RBRACKET    reduce using rule 57 (EXPRESSION)
    T_RBRACKET    [reduce using rule 87 (EQUALITY_EXPRESSION)]
    TP_semiColon  reduce using rule 57 (EXPRESSION)
    TP_semiColon  [reduce using rule 87 (EQUALITY_EXPRESSION)]
    $default      reduce using rule 87 (EQUALITY_EXPRESSION)


State 64

   58 EXPRESSION: EQUALITY_EXPRESSION .
   88 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
   89                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
   90 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 107
    TO_notEqualTo  shift, and go to state 108

    T_RBRACKET    reduce using rule 58 (EXPRESSION)
    T_RBRACKET    [reduce using rule 90 (AND_EXPRESSION)]
    TP_semiColon  reduce using rule 58 (EXPRESSION)
    TP_semiColon  [reduce using rule 90 (AND_EXPRESSION)]
    $default      reduce using rule 90 (AND_EXPRESSION)


State 65

   53 EXPRESSION: AND_EXPRESSION .
   91 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
   92 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 109

    T_RBRACKET       reduce using rule 53 (EXPRESSION)
    T_RBRACKET       [reduce using rule 92 (EXCLUSIVE_OR_EXPRESSION)]
    TP_semiColon     reduce using rule 53 (EXPRESSION)
    TP_semiColon     [reduce using rule 92 (EXCLUSIVE_OR_EXPRESSION)]
    TO_OR            reduce using rule 92 (EXCLUSIVE_OR_EXPRESSION)
    TO_exclussiveOr  reduce using rule 92 (EXCLUSIVE_OR_EXPRESSION)
    $default         reduce using rule 53 (EXPRESSION)


State 66

   54 EXPRESSION: EXCLUSIVE_OR_EXPRESSION .
   93 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
   94 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 110

    T_RBRACKET    reduce using rule 54 (EXPRESSION)
    T_RBRACKET    [reduce using rule 94 (INCLUSIVE_OR_EXPRESSION)]
    TP_semiColon  reduce using rule 54 (EXPRESSION)
    TP_semiColon  [reduce using rule 94 (INCLUSIVE_OR_EXPRESSION)]
    TO_OR         reduce using rule 94 (INCLUSIVE_OR_EXPRESSION)
    $default      reduce using rule 54 (EXPRESSION)


State 67

   55 EXPRESSION: INCLUSIVE_OR_EXPRESSION .
   95 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
   96 CONDITIONAL_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 111

    T_RBRACKET    reduce using rule 55 (EXPRESSION)
    T_RBRACKET    [reduce using rule 96 (CONDITIONAL_EXPRESSION)]
    TP_semiColon  reduce using rule 55 (EXPRESSION)
    TP_semiColon  [reduce using rule 96 (CONDITIONAL_EXPRESSION)]
    $default      reduce using rule 55 (EXPRESSION)


State 68

   97 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 97 (ASSIGNMENT_EXPRESSION)


State 69

   52 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 52 (EXPRESSION)


State 70

   37 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR .

    $default  reduce using rule 37 (PARAMETER_DECLARATION)


State 71

   33 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET .

    $default  reduce using rule 33 (DIRECT_DECLARATOR)


State 72

   36 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma . PARAMETER_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_LIST          go to state 112
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 73

   66 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET . ARGUMENT_EXPRESSION_LIST T_RBRACKET
   67                   | T_IDENTIFIER T_LBRACKET . T_RBRACKET

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    T_RBRACKET    shift, and go to state 113
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    ARGUMENT_EXPRESSION_LIST   go to state 116
    UNARY_EXPRESSION           go to state 117
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 122
    EQUALITY_EXPRESSION        go to state 123
    AND_EXPRESSION             go to state 124
    EXCLUSIVE_OR_EXPRESSION    go to state 125
    INCLUSIVE_OR_EXPRESSION    go to state 126
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 127


State 74

   63 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 128


State 75

   20 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 20 (JUMP_STATEMENT)


State 76

   21 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 129


State 77

   17 STATEMENT_LIST: STATEMENT STATEMENT_LIST .

    $default  reduce using rule 17 (STATEMENT_LIST)


State 78

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST T_RBRACE .

    $default  reduce using rule 12 (COMPOUND_STATEMENT)


State 79

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 130


State 80

   11 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 11 (COMPOUND_STATEMENT)


State 81

   15 DECLARATION_LIST: DECLARATION DECLARATION_LIST .

    $default  reduce using rule 15 (DECLARATION_LIST)


State 82

   28 INIT_DECLARATOR: DECLARATOR .

    $default  reduce using rule 28 (INIT_DECLARATOR)


State 83

   18 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 18 (EXPRESSION_STATEMENT)


State 84

   99 ASSIGNMENT_OPERATOR: TO_equal .

    $default  reduce using rule 99 (ASSIGNMENT_OPERATOR)


State 85

  109 ASSIGNMENT_OPERATOR: TO_OrEqual .

    $default  reduce using rule 109 (ASSIGNMENT_OPERATOR)


State 86

  108 ASSIGNMENT_OPERATOR: TO_exOrEqual .

    $default  reduce using rule 108 (ASSIGNMENT_OPERATOR)


State 87

  107 ASSIGNMENT_OPERATOR: TO_andEqual .

    $default  reduce using rule 107 (ASSIGNMENT_OPERATOR)


State 88

  105 ASSIGNMENT_OPERATOR: TO_rightEqual .

    $default  reduce using rule 105 (ASSIGNMENT_OPERATOR)


State 89

  106 ASSIGNMENT_OPERATOR: TO_leftEqual .

    $default  reduce using rule 106 (ASSIGNMENT_OPERATOR)


State 90

  104 ASSIGNMENT_OPERATOR: TO_minusEqual .

    $default  reduce using rule 104 (ASSIGNMENT_OPERATOR)


State 91

  103 ASSIGNMENT_OPERATOR: TO_plusEqual .

    $default  reduce using rule 103 (ASSIGNMENT_OPERATOR)


State 92

  101 ASSIGNMENT_OPERATOR: TO_divEqual .

    $default  reduce using rule 101 (ASSIGNMENT_OPERATOR)


State 93

  100 ASSIGNMENT_OPERATOR: TO_multEqual .

    $default  reduce using rule 100 (ASSIGNMENT_OPERATOR)


State 94

  102 ASSIGNMENT_OPERATOR: TO_modEqual .

    $default  reduce using rule 102 (ASSIGNMENT_OPERATOR)


State 95

   98 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 117
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 122
    EQUALITY_EXPRESSION        go to state 123
    AND_EXPRESSION             go to state 124
    EXCLUSIVE_OR_EXPRESSION    go to state 125
    INCLUSIVE_OR_EXPRESSION    go to state 126
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 131


State 96

   74 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION  go to state 114
    POSTFIX_EXPRESSION  go to state 115
    UNARY_EXPRESSION    go to state 132
    CAST_EXPRESSION     go to state 133


State 97

   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION  go to state 114
    POSTFIX_EXPRESSION  go to state 115
    UNARY_EXPRESSION    go to state 132
    CAST_EXPRESSION     go to state 134


State 98

   75 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION  go to state 114
    POSTFIX_EXPRESSION  go to state 115
    UNARY_EXPRESSION    go to state 132
    CAST_EXPRESSION     go to state 135


State 99

   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 136


State 100

   78 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 137


State 101

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft . ADDITIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 138


State 102

   81 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight . ADDITIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 139


State 103

   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan . SHIFT_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 140


State 104

   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan . SHIFT_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 141


State 105

   85 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 142


State 106

   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 143


State 107

   88 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 144


State 108

   89 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 145


State 109

   91 AND_EXPRESSION: AND_EXPRESSION TO_ampersand . ADDITIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 146


State 110

   93 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr . AND_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 122
    EQUALITY_EXPRESSION        go to state 123
    AND_EXPRESSION             go to state 147


State 111

   95 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR . EXCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    UNARY_EXPRESSION           go to state 132
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 122
    EQUALITY_EXPRESSION        go to state 123
    AND_EXPRESSION             go to state 124
    EXCLUSIVE_OR_EXPRESSION    go to state 148


State 112

   36 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma PARAMETER_LIST .

    $default  reduce using rule 36 (PARAMETER_LIST)


State 113

   67 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 67 (POSTFIX_EXPRESSION)


State 114

   65 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 65 (POSTFIX_EXPRESSION)


State 115

   70 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    $default  reduce using rule 70 (UNARY_EXPRESSION)


State 116

   66 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 149


State 117

   71 CAST_EXPRESSION: UNARY_EXPRESSION .
   98 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 84
    TO_OrEqual     shift, and go to state 85
    TO_exOrEqual   shift, and go to state 86
    TO_andEqual    shift, and go to state 87
    TO_rightEqual  shift, and go to state 88
    TO_leftEqual   shift, and go to state 89
    TO_minusEqual  shift, and go to state 90
    TO_plusEqual   shift, and go to state 91
    TO_divEqual    shift, and go to state 92
    TO_multEqual   shift, and go to state 93
    TO_modEqual    shift, and go to state 94

    $default  reduce using rule 71 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 95


State 118

   72 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 72 (MULTIPLICATIVE_EXPRESSION)


State 119

   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   74                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   75                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   76 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 96
    TO_asterix  shift, and go to state 97
    TO_mod      shift, and go to state 98

    $default  reduce using rule 76 (ADDITIVE_EXPRESSION)


State 120

   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   79 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 99
    TO_minus  shift, and go to state 100

    $default  reduce using rule 79 (SHIFT_EXPRESSION)


State 121

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   82 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    $default  reduce using rule 82 (RELATIONAL_EXPRESSION)


State 122

   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   87 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 103
    TO_moreThan         shift, and go to state 104
    TO_lessThanOrEqual  shift, and go to state 105
    TO_moreThanOrEqual  shift, and go to state 106

    $default  reduce using rule 87 (EQUALITY_EXPRESSION)


State 123

   88 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
   89                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
   90 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 107
    TO_notEqualTo  shift, and go to state 108

    $default  reduce using rule 90 (AND_EXPRESSION)


State 124

   91 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
   92 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 109

    $default  reduce using rule 92 (EXCLUSIVE_OR_EXPRESSION)


State 125

   93 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
   94 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 110

    $default  reduce using rule 94 (INCLUSIVE_OR_EXPRESSION)


State 126

   95 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
   96 CONDITIONAL_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 111

    $default  reduce using rule 96 (CONDITIONAL_EXPRESSION)


State 127

   68 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .
   69                         | ASSIGNMENT_EXPRESSION . TP_comma ARGUMENT_EXPRESSION_LIST

    TP_comma  shift, and go to state 150

    $default  reduce using rule 68 (ARGUMENT_EXPRESSION_LIST)


State 128

   63 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 63 (PRIMARY_EXPRESSION)


State 129

   21 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 21 (JUMP_STATEMENT)


State 130

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 10 (COMPOUND_STATEMENT)


State 131

   98 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 98 (ASSIGNMENT_EXPRESSION)


State 132

   71 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 71 (CAST_EXPRESSION)


State 133

   74 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION .

    $default  reduce using rule 74 (MULTIPLICATIVE_EXPRESSION)


State 134

   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION .

    $default  reduce using rule 73 (MULTIPLICATIVE_EXPRESSION)


State 135

   75 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION .

    $default  reduce using rule 75 (MULTIPLICATIVE_EXPRESSION)


State 136

   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   74                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   75                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 96
    TO_asterix  shift, and go to state 97
    TO_mod      shift, and go to state 98

    $default  reduce using rule 77 (ADDITIVE_EXPRESSION)


State 137

   73 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   74                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   75                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   78 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 96
    TO_asterix  shift, and go to state 97
    TO_mod      shift, and go to state 98

    $default  reduce using rule 78 (ADDITIVE_EXPRESSION)


State 138

   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 99
    TO_minus  shift, and go to state 100

    $default  reduce using rule 80 (SHIFT_EXPRESSION)


State 139

   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   81 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 99
    TO_minus  shift, and go to state 100

    $default  reduce using rule 81 (SHIFT_EXPRESSION)


State 140

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    $default  reduce using rule 83 (RELATIONAL_EXPRESSION)


State 141

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    $default  reduce using rule 84 (RELATIONAL_EXPRESSION)


State 142

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   85 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    $default  reduce using rule 85 (RELATIONAL_EXPRESSION)


State 143

   80 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   81                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 101
    TO_bitwiseRight  shift, and go to state 102

    $default  reduce using rule 86 (RELATIONAL_EXPRESSION)


State 144

   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   88 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 103
    TO_moreThan         shift, and go to state 104
    TO_lessThanOrEqual  shift, and go to state 105
    TO_moreThanOrEqual  shift, and go to state 106

    $default  reduce using rule 88 (EQUALITY_EXPRESSION)


State 145

   83 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   89 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 103
    TO_moreThan         shift, and go to state 104
    TO_lessThanOrEqual  shift, and go to state 105
    TO_moreThanOrEqual  shift, and go to state 106

    $default  reduce using rule 89 (EQUALITY_EXPRESSION)


State 146

   77 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   78                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   91 AND_EXPRESSION: AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 99
    TO_minus  shift, and go to state 100

    $default  reduce using rule 91 (AND_EXPRESSION)


State 147

   91 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
   93 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION .

    TO_ampersand  shift, and go to state 109

    $default  reduce using rule 93 (EXCLUSIVE_OR_EXPRESSION)


State 148

   93 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
   95 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 110

    $default  reduce using rule 95 (INCLUSIVE_OR_EXPRESSION)


State 149

   66 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET .

    $default  reduce using rule 66 (POSTFIX_EXPRESSION)


State 150

   69 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma . ARGUMENT_EXPRESSION_LIST

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 43
    TC_integer    shift, and go to state 46

    PRIMARY_EXPRESSION         go to state 114
    POSTFIX_EXPRESSION         go to state 115
    ARGUMENT_EXPRESSION_LIST   go to state 151
    UNARY_EXPRESSION           go to state 117
    CAST_EXPRESSION            go to state 118
    MULTIPLICATIVE_EXPRESSION  go to state 119
    ADDITIVE_EXPRESSION        go to state 120
    SHIFT_EXPRESSION           go to state 121
    RELATIONAL_EXPRESSION      go to state 122
    EQUALITY_EXPRESSION        go to state 123
    AND_EXPRESSION             go to state 124
    EXCLUSIVE_OR_EXPRESSION    go to state 125
    INCLUSIVE_OR_EXPRESSION    go to state 126
    CONDITIONAL_EXPRESSION     go to state 68
    ASSIGNMENT_EXPRESSION      go to state 127


State 151

   69 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST .

    $default  reduce using rule 69 (ARGUMENT_EXPRESSION_LIST)
