Terminals unused in grammar

   T_LBRACKET
   T_RBRACKET
   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_const
   TK_continue
   TK_default
   TK_do
   TK_else
   TK_enum
   TK_extern
   TK_for
   TK_goto
   TK_if
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_volatile
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_divide
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_ampersand
   TO_logicAnd
   TO_asterix
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThan
   TO_moreThan
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_equalTo
   TO_notEqualTo
   TO_plus
   TO_minus
   TO_increment
   TO_decrement
   TO_equal
   TP_comma
   TP_colon
   TC_integer
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    2                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    5 STATEMENT: COMPOUND_STATEMENT
    6          | JUMP_STATEMENT

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE

    8 STATEMENT_LIST: STATEMENT
    9               | STATEMENT_LIST STATEMENT

   10 JUMP_STATEMENT: TK_return TP_semiColon

   11 DECLARATION_SPECIFIERS: TYPE_SPECIFIER

   12 DECLARATOR: DIRECT_DECLARATOR

   13 DIRECT_DECLARATOR: T_IDENTIFIER

   14 TYPE_SPECIFIER: TK_void
   15               | TK_char
   16               | TK_short
   17               | TK_int
   18               | TK_long
   19               | TK_float
   20               | TK_double
   21               | TK_signed
   22               | TK_unsigned


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 13
T_LBRACE (259) 7
T_RBRACE (260) 7
T_LBRACKET (261)
T_RBRACKET (262)
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 15
TK_const (269)
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273) 20
TK_else (274)
TK_enum (275)
TK_extern (276)
TK_float (277) 19
TK_for (278)
TK_goto (279)
TK_if (280)
TK_int (281) 17
TK_long (282) 18
TK_register (283)
TK_return (284) 10
TK_short (285) 16
TK_signed (286) 21
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 22
TK_void (294) 14
TK_volatile (295)
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300)
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304)
TO_logicAnd (305)
TO_asterix (306)
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310)
TO_moreThan (311)
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314)
TO_notEqualTo (315)
TO_plus (316)
TO_minus (317)
TO_increment (318)
TO_decrement (319)
TO_equal (320)
TP_comma (321)
TP_colon (322)
TP_semiColon (323) 10
TC_integer (324)
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
TRANSLATION_UNIT (80)
    on left: 1 2, on right: 0 2
EXTERNAL_DECLARATION (81)
    on left: 3, on right: 1 2
FUNCTION_DEFINITION (82)
    on left: 4, on right: 3
STATEMENT (83)
    on left: 5 6, on right: 8 9
COMPOUND_STATEMENT (84)
    on left: 7, on right: 4 5
STATEMENT_LIST (85)
    on left: 8 9, on right: 7 9
JUMP_STATEMENT (86)
    on left: 10, on right: 6
DECLARATION_SPECIFIERS (87)
    on left: 11, on right: 4
DECLARATOR (88)
    on left: 12, on right: 4
DIRECT_DECLARATOR (89)
    on left: 13, on right: 12
TYPE_SPECIFIER (90)
    on left: 14 15 16 17 18 19 20 21 22, on right: 11


State 0

    0 $accept: . TRANSLATION_UNIT $end

    TK_char      shift, and go to state 1
    TK_double    shift, and go to state 2
    TK_float     shift, and go to state 3
    TK_int       shift, and go to state 4
    TK_long      shift, and go to state 5
    TK_short     shift, and go to state 6
    TK_signed    shift, and go to state 7
    TK_unsigned  shift, and go to state 8
    TK_void      shift, and go to state 9

    TRANSLATION_UNIT        go to state 10
    EXTERNAL_DECLARATION    go to state 11
    FUNCTION_DEFINITION     go to state 12
    DECLARATION_SPECIFIERS  go to state 13
    TYPE_SPECIFIER          go to state 14


State 1

   15 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 15 (TYPE_SPECIFIER)


State 2

   20 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 20 (TYPE_SPECIFIER)


State 3

   19 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 19 (TYPE_SPECIFIER)


State 4

   17 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 17 (TYPE_SPECIFIER)


State 5

   18 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 18 (TYPE_SPECIFIER)


State 6

   16 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 16 (TYPE_SPECIFIER)


State 7

   21 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 21 (TYPE_SPECIFIER)


State 8

   22 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 22 (TYPE_SPECIFIER)


State 9

   14 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 14 (TYPE_SPECIFIER)


State 10

    0 $accept: TRANSLATION_UNIT . $end
    2 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end         shift, and go to state 15
    TK_char      shift, and go to state 1
    TK_double    shift, and go to state 2
    TK_float     shift, and go to state 3
    TK_int       shift, and go to state 4
    TK_long      shift, and go to state 5
    TK_short     shift, and go to state 6
    TK_signed    shift, and go to state 7
    TK_unsigned  shift, and go to state 8
    TK_void      shift, and go to state 9

    EXTERNAL_DECLARATION    go to state 16
    FUNCTION_DEFINITION     go to state 12
    DECLARATION_SPECIFIERS  go to state 13
    TYPE_SPECIFIER          go to state 14


State 11

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 1 (TRANSLATION_UNIT)


State 12

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 13

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT

    T_IDENTIFIER  shift, and go to state 17

    DECLARATOR         go to state 18
    DIRECT_DECLARATOR  go to state 19


State 14

   11 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .

    $default  reduce using rule 11 (DECLARATION_SPECIFIERS)


State 15

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 16

    2 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 17

   13 DIRECT_DECLARATOR: T_IDENTIFIER .

    $default  reduce using rule 13 (DIRECT_DECLARATOR)


State 18

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT

    T_LBRACE  shift, and go to state 20

    COMPOUND_STATEMENT  go to state 21


State 19

   12 DECLARATOR: DIRECT_DECLARATOR .

    $default  reduce using rule 12 (DECLARATOR)


State 20

    7 COMPOUND_STATEMENT: T_LBRACE . STATEMENT_LIST T_RBRACE

    T_LBRACE   shift, and go to state 20
    TK_return  shift, and go to state 22

    STATEMENT           go to state 23
    COMPOUND_STATEMENT  go to state 24
    STATEMENT_LIST      go to state 25
    JUMP_STATEMENT      go to state 26


State 21

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 4 (FUNCTION_DEFINITION)


State 22

   10 JUMP_STATEMENT: TK_return . TP_semiColon

    TP_semiColon  shift, and go to state 27


State 23

    8 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 8 (STATEMENT_LIST)


State 24

    5 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 5 (STATEMENT)


State 25

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE
    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_LBRACE   shift, and go to state 20
    T_RBRACE   shift, and go to state 28
    TK_return  shift, and go to state 22

    STATEMENT           go to state 29
    COMPOUND_STATEMENT  go to state 24
    JUMP_STATEMENT      go to state 26


State 26

    6 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


State 27

   10 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 10 (JUMP_STATEMENT)


State 28

    7 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 7 (COMPOUND_STATEMENT)


State 29

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)
