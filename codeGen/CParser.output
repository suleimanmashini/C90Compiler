Nonterminals useless in grammar

   CONSTANT_EXPRESSION


Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_continue
   TK_default
   TK_extern
   TK_goto
   TK_register
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TC_unsigned
   TC_long
   TC_longLong
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr


Rules useless in grammar

  153 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION


State 70 conflicts: 3 reduce/reduce
State 71 conflicts: 3 reduce/reduce
State 72 conflicts: 3 reduce/reduce
State 73 conflicts: 3 reduce/reduce
State 74 conflicts: 3 reduce/reduce
State 75 conflicts: 3 reduce/reduce
State 76 conflicts: 3 reduce/reduce
State 77 conflicts: 3 reduce/reduce
State 78 conflicts: 3 reduce/reduce
State 79 conflicts: 3 reduce/reduce
State 80 conflicts: 3 reduce/reduce
State 81 conflicts: 3 reduce/reduce
State 82 conflicts: 3 reduce/reduce
State 83 conflicts: 3 reduce/reduce
State 84 conflicts: 3 reduce/reduce
State 223 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION
    3                 | DECLARATION
    4                 | FUNCTION_DEFINITION TRANSLATION_UNIT
    5                 | DECLARATION TRANSLATION_UNIT

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    7 STATEMENT: COMPOUND_STATEMENT
    8          | JUMP_STATEMENT
    9          | SELECTION_STATEMENT
   10          | EXPRESSION_STATEMENT
   11          | ITERATION_STATEMENT

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE
   13                   | T_LBRACE STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE DECLARATION_LIST T_RBRACE
   15                   | T_LBRACE T_RBRACE

   16 DECLARATION_LIST: DECLARATION
   17                 | DECLARATION DECLARATION_LIST

   18 STATEMENT_LIST: STATEMENT
   19               | STATEMENT STATEMENT_LIST

   20 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon
   21                     | TP_semiColon

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   25                    | TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon
   26                    | TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

   27 JUMP_STATEMENT: TK_return TP_semiColon
   28               | TK_return EXPRESSION TP_semiColon

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon

   30 DECLARATION_SPECIFIERS: TYPE_SPECIFIER
   31                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS
   32                       | TYPE_QUALIFIER
   33                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS

   34 INIT_DECLARATION_LIST: INIT_DECLARATOR

   35 INIT_DECLARATOR: DECLARATOR

   36 DECLARATOR: DIRECT_DECLARATOR

   37 DIRECT_DECLARATOR: T_IDENTIFIER
   38                  | T_LBRACKET DECLARATOR T_RBRACKET
   39                  | T_IDENTIFIER T_LBRACKET T_RBRACKET
   40                  | T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

   41 PARAMETER_TYPE_LIST: PARAMETER_LIST

   42 PARAMETER_LIST: PARAMETER_DECLARATION
   43               | PARAMETER_DECLARATION TP_comma PARAMETER_LIST

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR

   45 TYPE_SPECIFIER: TK_void
   46               | TK_char
   47               | TK_short
   48               | TK_int
   49               | TK_long
   50               | TK_float
   51               | TK_double
   52               | TK_signed
   53               | TK_unsigned

   54 TYPE_QUALIFIER: TK_const
   55               | TK_volatile

   56 EXPRESSION: PRIMARY_EXPRESSION
   57           | MULTIPLICATIVE_EXPRESSION
   58           | ADDITIVE_EXPRESSION
   59           | ASSIGNMENT_EXPRESSION
   60           | AND_EXPRESSION
   61           | EXCLUSIVE_OR_EXPRESSION
   62           | INCLUSIVE_OR_EXPRESSION
   63           | SHIFT_EXPRESSION
   64           | RELATIONAL_EXPRESSION
   65           | EQUALITY_EXPRESSION
   66           | POSTFIX_EXPRESSION
   67           | UNARY_EXPRESSION
   68           | CAST_EXPRESSION
   69           | LOGICAL_AND_EXPRESSION
   70           | LOGICAL_OR_EXPRESSION
   71           | CONDITIONAL_EXPRESSION

   72 PRIMARY_EXPRESSION: TC_integer
   73                   | TC_float
   74                   | T_LBRACKET EXPRESSION T_RBRACKET
   75                   | T_IDENTIFIER

   76 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
   77                   | T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   78                   | T_IDENTIFIER T_LBRACKET T_RBRACKET
   79                   | POSTFIX_EXPRESSION TO_increment
   80                   | POSTFIX_EXPRESSION TO_decrement

   81 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
   82                         | ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST

   83 UNARY_EXPRESSION: POSTFIX_EXPRESSION
   84                 | TO_not CAST_EXPRESSION
   85                 | TO_bitwiseNot CAST_EXPRESSION
   86                 | TO_minus CAST_EXPRESSION
   87                 | TO_plus CAST_EXPRESSION
   88                 | TO_increment UNARY_EXPRESSION
   89                 | TO_decrement UNARY_EXPRESSION
   90                 | TK_sizeof T_LBRACKET TYPE_NAME T_RBRACKET

   91 TYPE_NAME: TK_char
   92          | TK_unsigned TK_char
   93          | TK_signed TK_char
   94          | TK_short
   95          | TK_signed TK_short
   96          | TK_unsigned TK_short
   97          | TK_int
   98          | TK_signed TK_int
   99          | TK_unsigned TK_int
  100          | TK_long
  101          | TK_signed TK_long
  102          | TK_unsigned TK_long
  103          | TK_enum
  104          | TYPE_NAME TO_asterix
  105          | TYPE_NAME T_LBRACKET TO_asterix T_RBRACKET T_LBRACKET T_RBRACKET
  106          | TK_float
  107          | TK_double
  108          | TK_long TK_double

  109 CAST_EXPRESSION: UNARY_EXPRESSION

  110 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
  111                          | MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION
  112                          | MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION
  113                          | MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION

  114 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
  115                    | ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION

  117 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
  118                 | SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION

  120 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
  121                      | RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION
  122                      | RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION
  123                      | RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION
  124                      | RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION

  125 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
  126                    | EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION
  127                    | EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION

  128 AND_EXPRESSION: EQUALITY_EXPRESSION
  129               | AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION

  130 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
  131                        | EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION

  132 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
  133                        | INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION

  134 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
  135                       | LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION

  136 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
  137                       | LOGICAL_AND_EXPRESSION TO_logicAnd INCLUSIVE_OR_EXPRESSION

  138 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
  139                      | LOGICAL_OR_EXPRESSION TO_logicOr LOGICAL_AND_EXPRESSION

  140 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
  141                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

  142 ASSIGNMENT_OPERATOR: TO_equal
  143                    | TO_multEqual
  144                    | TO_divEqual
  145                    | TO_modEqual
  146                    | TO_plusEqual
  147                    | TO_minusEqual
  148                    | TO_rightEqual
  149                    | TO_leftEqual
  150                    | TO_andEqual
  151                    | TO_exOrEqual
  152                    | TO_OrEqual


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 37 39 40 75 77 78
T_LBRACE (259) 12 13 14 15
T_RBRACE (260) 12 13 14 15
T_LBRACKET (261) 22 23 24 25 26 38 39 40 74 77 78 90 105
T_RBRACKET (262) 22 23 24 25 26 38 39 40 74 77 78 90 105
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 46 91 92 93
TK_const (269) 54
TK_continue (270)
TK_default (271)
TK_do (272) 25
TK_double (273) 51 107 108
TK_else (274) 23
TK_enum (275) 103
TK_extern (276)
TK_float (277) 50 106
TK_for (278) 26
TK_goto (279)
TK_if (280) 22 23
TK_int (281) 48 97 98 99
TK_long (282) 49 100 101 102 108
TK_register (283)
TK_return (284) 27 28
TK_short (285) 47 94 95 96
TK_signed (286) 52 93 95 98 101
TK_sizeof (287) 90
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 53 92 96 99 102
TK_void (294) 45
TK_volatile (295) 55
TK_while (296) 24 25
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 112
TO_memberAccess (301)
TO_not (302) 84
TO_bitwiseNot (303) 85
TO_ampersand (304) 129
TO_logicAnd (305) 137
TO_asterix (306) 104 105 111
TO_mod (307) 113
TO_bitwiseLeft (308) 118
TO_bitwiseRight (309) 119
TO_lessThan (310) 121
TO_moreThan (311) 122
TO_lessThanOrEqual (312) 123
TO_moreThanOrEqual (313) 124
TO_equalTo (314) 126
TO_notEqualTo (315) 127
TO_plus (316) 87 115
TO_minus (317) 86 116
TO_increment (318) 79 88
TO_decrement (319) 80 89
TO_equal (320) 142
TP_comma (321) 43 82
TP_colon (322) 135
TP_semiColon (323) 20 21 25 26 27 28 29
TC_integer (324) 72
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328) 73
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334) 152
TO_exOrEqual (335) 151
TO_andEqual (336) 150
TO_rightEqual (337) 148
TO_leftEqual (338) 149
TO_minusEqual (339) 147
TO_plusEqual (340) 146
TO_divEqual (341) 144
TO_multEqual (342) 143
TO_OR (343) 133
TO_logicOr (344) 139
TO_exclussiveOr (345) 131
TO_questionMark (346) 135
TO_modEqual (347) 145


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
START (94)
    on left: 1, on right: 0
TRANSLATION_UNIT (95)
    on left: 2 3 4 5, on right: 1 4 5
FUNCTION_DEFINITION (96)
    on left: 6, on right: 2 4
STATEMENT (97)
    on left: 7 8 9 10 11, on right: 18 19 22 23 24 25 26
COMPOUND_STATEMENT (98)
    on left: 12 13 14 15, on right: 6 7
DECLARATION_LIST (99)
    on left: 16 17, on right: 12 14 17
STATEMENT_LIST (100)
    on left: 18 19, on right: 12 13 19
EXPRESSION_STATEMENT (101)
    on left: 20 21, on right: 10
SELECTION_STATEMENT (102)
    on left: 22 23, on right: 9
ITERATION_STATEMENT (103)
    on left: 24 25 26, on right: 11
JUMP_STATEMENT (104)
    on left: 27 28, on right: 8
DECLARATION (105)
    on left: 29, on right: 3 5 16 17
DECLARATION_SPECIFIERS (106)
    on left: 30 31 32 33, on right: 6 29 31 33 44
INIT_DECLARATION_LIST (107)
    on left: 34, on right: 29
INIT_DECLARATOR (108)
    on left: 35, on right: 34
DECLARATOR (109)
    on left: 36, on right: 6 35 38 44
DIRECT_DECLARATOR (110)
    on left: 37 38 39 40, on right: 36
PARAMETER_TYPE_LIST (111)
    on left: 41, on right: 40
PARAMETER_LIST (112)
    on left: 42 43, on right: 41 43
PARAMETER_DECLARATION (113)
    on left: 44, on right: 42 43
TYPE_SPECIFIER (114)
    on left: 45 46 47 48 49 50 51 52 53, on right: 30 31
TYPE_QUALIFIER (115)
    on left: 54 55, on right: 32 33
EXPRESSION (116)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right:
    20 22 23 24 25 26 28 74 135
PRIMARY_EXPRESSION (117)
    on left: 72 73 74 75, on right: 56 76
POSTFIX_EXPRESSION (118)
    on left: 76 77 78 79 80, on right: 66 79 80 83
ARGUMENT_EXPRESSION_LIST (119)
    on left: 81 82, on right: 77 82
UNARY_EXPRESSION (120)
    on left: 83 84 85 86 87 88 89 90, on right: 67 88 89 109 141
TYPE_NAME (121)
    on left: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
    107 108, on right: 90 104 105
CAST_EXPRESSION (122)
    on left: 109, on right: 68 84 85 86 87 110 111 112 113
MULTIPLICATIVE_EXPRESSION (123)
    on left: 110 111 112 113, on right: 57 111 112 113 114 115 116
ADDITIVE_EXPRESSION (124)
    on left: 114 115 116, on right: 58 115 116 117 118 119 129
SHIFT_EXPRESSION (125)
    on left: 117 118 119, on right: 63 118 119 120 121 122 123 124
RELATIONAL_EXPRESSION (126)
    on left: 120 121 122 123 124, on right: 64 121 122 123 124 125
    126 127
EQUALITY_EXPRESSION (127)
    on left: 125 126 127, on right: 65 126 127 128
AND_EXPRESSION (128)
    on left: 128 129, on right: 60 129 130 131
EXCLUSIVE_OR_EXPRESSION (129)
    on left: 130 131, on right: 61 131 132 133
INCLUSIVE_OR_EXPRESSION (130)
    on left: 132 133, on right: 62 133 136 137
CONDITIONAL_EXPRESSION (131)
    on left: 134 135, on right: 71 135 140
LOGICAL_AND_EXPRESSION (132)
    on left: 136 137, on right: 69 137 138 139
LOGICAL_OR_EXPRESSION (133)
    on left: 138 139, on right: 70 134 135 139
ASSIGNMENT_EXPRESSION (134)
    on left: 140 141, on right: 59 81 82 141
ASSIGNMENT_OPERATOR (135)
    on left: 142 143 144 145 146 147 148 149 150 151 152, on right:
    141


State 0

    0 $accept: . START $end

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    START                   go to state 12
    TRANSLATION_UNIT        go to state 13
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 1

   46 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 46 (TYPE_SPECIFIER)


State 2

   54 TYPE_QUALIFIER: TK_const .

    $default  reduce using rule 54 (TYPE_QUALIFIER)


State 3

   51 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 51 (TYPE_SPECIFIER)


State 4

   50 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 50 (TYPE_SPECIFIER)


State 5

   48 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 48 (TYPE_SPECIFIER)


State 6

   49 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 49 (TYPE_SPECIFIER)


State 7

   47 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 47 (TYPE_SPECIFIER)


State 8

   52 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 52 (TYPE_SPECIFIER)


State 9

   53 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 53 (TYPE_SPECIFIER)


State 10

   45 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 45 (TYPE_SPECIFIER)


State 11

   55 TYPE_QUALIFIER: TK_volatile .

    $default  reduce using rule 55 (TYPE_QUALIFIER)


State 12

    0 $accept: START . $end

    $end  shift, and go to state 19


State 13

    1 START: TRANSLATION_UNIT .

    $default  reduce using rule 1 (START)


State 14

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION .
    4                 | FUNCTION_DEFINITION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 2 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 20
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 15

    3 TRANSLATION_UNIT: DECLARATION .
    5                 | DECLARATION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 3 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 21
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 16

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
   29 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 26
    DIRECT_DECLARATOR      go to state 27


State 17

   30 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .
   31                       | TYPE_SPECIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 30 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 28
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 18

   32 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .
   33                       | TYPE_QUALIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 32 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 29
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 19

    0 $accept: START $end .

    $default  accept


State 20

    4 TRANSLATION_UNIT: FUNCTION_DEFINITION TRANSLATION_UNIT .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 21

    5 TRANSLATION_UNIT: DECLARATION TRANSLATION_UNIT .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 22

   37 DIRECT_DECLARATOR: T_IDENTIFIER .
   39                  | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   40                  | T_IDENTIFIER . T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 30

    $default  reduce using rule 37 (DIRECT_DECLARATOR)


State 23

   38 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 31
    DIRECT_DECLARATOR  go to state 27


State 24

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST . TP_semiColon

    TP_semiColon  shift, and go to state 32


State 25

   34 INIT_DECLARATION_LIST: INIT_DECLARATOR .

    $default  reduce using rule 34 (INIT_DECLARATION_LIST)


State 26

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   35 INIT_DECLARATOR: DECLARATOR .

    T_LBRACE  shift, and go to state 33

    $default  reduce using rule 35 (INIT_DECLARATOR)

    COMPOUND_STATEMENT  go to state 34


State 27

   36 DECLARATOR: DIRECT_DECLARATOR .

    $default  reduce using rule 36 (DECLARATOR)


State 28

   31 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 31 (DECLARATION_SPECIFIERS)


State 29

   33 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 33 (DECLARATION_SPECIFIERS)


State 30

   39 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   40                  | T_IDENTIFIER T_LBRACKET . PARAMETER_TYPE_LIST T_RBRACKET

    T_RBRACKET   shift, and go to state 35
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_TYPE_LIST     go to state 37
    PARAMETER_LIST          go to state 38
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 31

   38 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 40


State 32

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon .

    $default  reduce using rule 29 (DECLARATION)


State 33

   12 COMPOUND_STATEMENT: T_LBRACE . DECLARATION_LIST STATEMENT_LIST T_RBRACE
   13                   | T_LBRACE . STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE . DECLARATION_LIST T_RBRACE
   15                   | T_LBRACE . T_RBRACE

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_RBRACE       shift, and go to state 42
    T_LBRACKET     shift, and go to state 43
    TK_char        shift, and go to state 1
    TK_const       shift, and go to state 2
    TK_do          shift, and go to state 44
    TK_double      shift, and go to state 3
    TK_float       shift, and go to state 4
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_int         shift, and go to state 5
    TK_long        shift, and go to state 6
    TK_return      shift, and go to state 47
    TK_short       shift, and go to state 7
    TK_signed      shift, and go to state 8
    TK_sizeof      shift, and go to state 48
    TK_unsigned    shift, and go to state 9
    TK_void        shift, and go to state 10
    TK_volatile    shift, and go to state 11
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 59
    COMPOUND_STATEMENT         go to state 60
    DECLARATION_LIST           go to state 61
    STATEMENT_LIST             go to state 62
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    DECLARATION                go to state 67
    DECLARATION_SPECIFIERS     go to state 68
    TYPE_SPECIFIER             go to state 17
    TYPE_QUALIFIER             go to state 18
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 34

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 6 (FUNCTION_DEFINITION)


State 35

   39 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 39 (DIRECT_DECLARATOR)


State 36

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS . DECLARATOR

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 86
    DIRECT_DECLARATOR  go to state 27


State 37

   40 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 87


State 38

   41 PARAMETER_TYPE_LIST: PARAMETER_LIST .

    $default  reduce using rule 41 (PARAMETER_TYPE_LIST)


State 39

   42 PARAMETER_LIST: PARAMETER_DECLARATION .
   43               | PARAMETER_DECLARATION . TP_comma PARAMETER_LIST

    TP_comma  shift, and go to state 88

    $default  reduce using rule 42 (PARAMETER_LIST)


State 40

   38 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 38 (DIRECT_DECLARATOR)


State 41

   75 PRIMARY_EXPRESSION: T_IDENTIFIER .
   77 POSTFIX_EXPRESSION: T_IDENTIFIER . T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   78                   | T_IDENTIFIER . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 89

    $default  reduce using rule 75 (PRIMARY_EXPRESSION)


State 42

   15 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 15 (COMPOUND_STATEMENT)


State 43

   74 PRIMARY_EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 90
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 44

   25 ITERATION_STATEMENT: TK_do . STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 91
    COMPOUND_STATEMENT         go to state 60
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 45

   26 ITERATION_STATEMENT: TK_for . T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 92


State 46

   22 SELECTION_STATEMENT: TK_if . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

    T_LBRACKET  shift, and go to state 93


State 47

   27 JUMP_STATEMENT: TK_return . TP_semiColon
   28               | TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 94
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 95
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 48

   90 UNARY_EXPRESSION: TK_sizeof . T_LBRACKET TYPE_NAME T_RBRACKET

    T_LBRACKET  shift, and go to state 96


State 49

   24 ITERATION_STATEMENT: TK_while . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 97


State 50

   84 UNARY_EXPRESSION: TO_not . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 101


State 51

   85 UNARY_EXPRESSION: TO_bitwiseNot . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 102


State 52

   87 UNARY_EXPRESSION: TO_plus . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 103


State 53

   86 UNARY_EXPRESSION: TO_minus . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 104


State 54

   88 UNARY_EXPRESSION: TO_increment . UNARY_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 105


State 55

   89 UNARY_EXPRESSION: TO_decrement . UNARY_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 106


State 56

   21 EXPRESSION_STATEMENT: TP_semiColon .

    $default  reduce using rule 21 (EXPRESSION_STATEMENT)


State 57

   72 PRIMARY_EXPRESSION: TC_integer .

    $default  reduce using rule 72 (PRIMARY_EXPRESSION)


State 58

   73 PRIMARY_EXPRESSION: TC_float .

    $default  reduce using rule 73 (PRIMARY_EXPRESSION)


State 59

   18 STATEMENT_LIST: STATEMENT .
   19               | STATEMENT . STATEMENT_LIST

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    $default  reduce using rule 18 (STATEMENT_LIST)

    STATEMENT                  go to state 59
    COMPOUND_STATEMENT         go to state 60
    STATEMENT_LIST             go to state 107
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 60

    7 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 61

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST . STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE DECLARATION_LIST . T_RBRACE

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_RBRACE       shift, and go to state 108
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 59
    COMPOUND_STATEMENT         go to state 60
    STATEMENT_LIST             go to state 109
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 62

   13 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 110


State 63

   10 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 10 (STATEMENT)


State 64

    9 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 65

   11 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 66

    8 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 67

   16 DECLARATION_LIST: DECLARATION .
   17                 | DECLARATION . DECLARATION_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 16 (DECLARATION_LIST)

    DECLARATION_LIST        go to state 111
    DECLARATION             go to state 67
    DECLARATION_SPECIFIERS  go to state 68
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 68

   29 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 112
    DIRECT_DECLARATOR      go to state 27


State 69

   20 EXPRESSION_STATEMENT: EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 113


State 70

   56 EXPRESSION: PRIMARY_EXPRESSION .
   76 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    T_RBRACKET    reduce using rule 56 (EXPRESSION)
    T_RBRACKET    [reduce using rule 76 (POSTFIX_EXPRESSION)]
    TP_colon      reduce using rule 56 (EXPRESSION)
    TP_colon      [reduce using rule 76 (POSTFIX_EXPRESSION)]
    TP_semiColon  reduce using rule 56 (EXPRESSION)
    TP_semiColon  [reduce using rule 76 (POSTFIX_EXPRESSION)]
    $default      reduce using rule 76 (POSTFIX_EXPRESSION)


State 71

   66 EXPRESSION: POSTFIX_EXPRESSION .
   79 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . TO_increment
   80                   | POSTFIX_EXPRESSION . TO_decrement
   83 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    TO_increment  shift, and go to state 114
    TO_decrement  shift, and go to state 115

    T_RBRACKET    reduce using rule 66 (EXPRESSION)
    T_RBRACKET    [reduce using rule 83 (UNARY_EXPRESSION)]
    TP_colon      reduce using rule 66 (EXPRESSION)
    TP_colon      [reduce using rule 83 (UNARY_EXPRESSION)]
    TP_semiColon  reduce using rule 66 (EXPRESSION)
    TP_semiColon  [reduce using rule 83 (UNARY_EXPRESSION)]
    $default      reduce using rule 83 (UNARY_EXPRESSION)


State 72

   67 EXPRESSION: UNARY_EXPRESSION .
  109 CAST_EXPRESSION: UNARY_EXPRESSION .
  141 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 116
    TO_OrEqual     shift, and go to state 117
    TO_exOrEqual   shift, and go to state 118
    TO_andEqual    shift, and go to state 119
    TO_rightEqual  shift, and go to state 120
    TO_leftEqual   shift, and go to state 121
    TO_minusEqual  shift, and go to state 122
    TO_plusEqual   shift, and go to state 123
    TO_divEqual    shift, and go to state 124
    TO_multEqual   shift, and go to state 125
    TO_modEqual    shift, and go to state 126

    T_RBRACKET    reduce using rule 67 (EXPRESSION)
    T_RBRACKET    [reduce using rule 109 (CAST_EXPRESSION)]
    TP_colon      reduce using rule 67 (EXPRESSION)
    TP_colon      [reduce using rule 109 (CAST_EXPRESSION)]
    TP_semiColon  reduce using rule 67 (EXPRESSION)
    TP_semiColon  [reduce using rule 109 (CAST_EXPRESSION)]
    $default      reduce using rule 109 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 127


State 73

   68 EXPRESSION: CAST_EXPRESSION .
  110 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    T_RBRACKET    reduce using rule 68 (EXPRESSION)
    T_RBRACKET    [reduce using rule 110 (MULTIPLICATIVE_EXPRESSION)]
    TP_colon      reduce using rule 68 (EXPRESSION)
    TP_colon      [reduce using rule 110 (MULTIPLICATIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 68 (EXPRESSION)
    TP_semiColon  [reduce using rule 110 (MULTIPLICATIVE_EXPRESSION)]
    $default      reduce using rule 110 (MULTIPLICATIVE_EXPRESSION)


State 74

   57 EXPRESSION: MULTIPLICATIVE_EXPRESSION .
  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
  112                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
  113                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
  114 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 128
    TO_asterix  shift, and go to state 129
    TO_mod      shift, and go to state 130

    T_RBRACKET    reduce using rule 57 (EXPRESSION)
    T_RBRACKET    [reduce using rule 114 (ADDITIVE_EXPRESSION)]
    TP_colon      reduce using rule 57 (EXPRESSION)
    TP_colon      [reduce using rule 114 (ADDITIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 57 (EXPRESSION)
    TP_semiColon  [reduce using rule 114 (ADDITIVE_EXPRESSION)]
    $default      reduce using rule 114 (ADDITIVE_EXPRESSION)


State 75

   58 EXPRESSION: ADDITIVE_EXPRESSION .
  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  117 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 131
    TO_minus  shift, and go to state 132

    T_RBRACKET    reduce using rule 58 (EXPRESSION)
    T_RBRACKET    [reduce using rule 117 (SHIFT_EXPRESSION)]
    TP_colon      reduce using rule 58 (EXPRESSION)
    TP_colon      [reduce using rule 117 (SHIFT_EXPRESSION)]
    TP_semiColon  reduce using rule 58 (EXPRESSION)
    TP_semiColon  [reduce using rule 117 (SHIFT_EXPRESSION)]
    $default      reduce using rule 117 (SHIFT_EXPRESSION)


State 76

   63 EXPRESSION: SHIFT_EXPRESSION .
  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  120 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    T_RBRACKET    reduce using rule 63 (EXPRESSION)
    T_RBRACKET    [reduce using rule 120 (RELATIONAL_EXPRESSION)]
    TP_colon      reduce using rule 63 (EXPRESSION)
    TP_colon      [reduce using rule 120 (RELATIONAL_EXPRESSION)]
    TP_semiColon  reduce using rule 63 (EXPRESSION)
    TP_semiColon  [reduce using rule 120 (RELATIONAL_EXPRESSION)]
    $default      reduce using rule 120 (RELATIONAL_EXPRESSION)


State 77

   64 EXPRESSION: RELATIONAL_EXPRESSION .
  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
  122                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
  123                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
  124                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
  125 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 135
    TO_moreThan         shift, and go to state 136
    TO_lessThanOrEqual  shift, and go to state 137
    TO_moreThanOrEqual  shift, and go to state 138

    T_RBRACKET    reduce using rule 64 (EXPRESSION)
    T_RBRACKET    [reduce using rule 125 (EQUALITY_EXPRESSION)]
    TP_colon      reduce using rule 64 (EXPRESSION)
    TP_colon      [reduce using rule 125 (EQUALITY_EXPRESSION)]
    TP_semiColon  reduce using rule 64 (EXPRESSION)
    TP_semiColon  [reduce using rule 125 (EQUALITY_EXPRESSION)]
    $default      reduce using rule 125 (EQUALITY_EXPRESSION)


State 78

   65 EXPRESSION: EQUALITY_EXPRESSION .
  126 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
  127                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
  128 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 139
    TO_notEqualTo  shift, and go to state 140

    T_RBRACKET    reduce using rule 65 (EXPRESSION)
    T_RBRACKET    [reduce using rule 128 (AND_EXPRESSION)]
    TP_colon      reduce using rule 65 (EXPRESSION)
    TP_colon      [reduce using rule 128 (AND_EXPRESSION)]
    TP_semiColon  reduce using rule 65 (EXPRESSION)
    TP_semiColon  [reduce using rule 128 (AND_EXPRESSION)]
    $default      reduce using rule 128 (AND_EXPRESSION)


State 79

   60 EXPRESSION: AND_EXPRESSION .
  129 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  130 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 141

    T_RBRACKET    reduce using rule 60 (EXPRESSION)
    T_RBRACKET    [reduce using rule 130 (EXCLUSIVE_OR_EXPRESSION)]
    TP_colon      reduce using rule 60 (EXPRESSION)
    TP_colon      [reduce using rule 130 (EXCLUSIVE_OR_EXPRESSION)]
    TP_semiColon  reduce using rule 60 (EXPRESSION)
    TP_semiColon  [reduce using rule 130 (EXCLUSIVE_OR_EXPRESSION)]
    $default      reduce using rule 130 (EXCLUSIVE_OR_EXPRESSION)


State 80

   61 EXPRESSION: EXCLUSIVE_OR_EXPRESSION .
  131 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  132 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 142

    T_RBRACKET    reduce using rule 61 (EXPRESSION)
    T_RBRACKET    [reduce using rule 132 (INCLUSIVE_OR_EXPRESSION)]
    TP_colon      reduce using rule 61 (EXPRESSION)
    TP_colon      [reduce using rule 132 (INCLUSIVE_OR_EXPRESSION)]
    TP_semiColon  reduce using rule 61 (EXPRESSION)
    TP_semiColon  [reduce using rule 132 (INCLUSIVE_OR_EXPRESSION)]
    $default      reduce using rule 132 (INCLUSIVE_OR_EXPRESSION)


State 81

   62 EXPRESSION: INCLUSIVE_OR_EXPRESSION .
  133 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  136 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 143

    T_RBRACKET       reduce using rule 62 (EXPRESSION)
    T_RBRACKET       [reduce using rule 136 (LOGICAL_AND_EXPRESSION)]
    TO_logicAnd      reduce using rule 136 (LOGICAL_AND_EXPRESSION)
    TP_colon         reduce using rule 62 (EXPRESSION)
    TP_colon         [reduce using rule 136 (LOGICAL_AND_EXPRESSION)]
    TP_semiColon     reduce using rule 62 (EXPRESSION)
    TP_semiColon     [reduce using rule 136 (LOGICAL_AND_EXPRESSION)]
    TO_logicOr       reduce using rule 136 (LOGICAL_AND_EXPRESSION)
    TO_questionMark  reduce using rule 136 (LOGICAL_AND_EXPRESSION)
    $default         reduce using rule 62 (EXPRESSION)


State 82

   71 EXPRESSION: CONDITIONAL_EXPRESSION .
  140 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    T_RBRACKET    reduce using rule 71 (EXPRESSION)
    T_RBRACKET    [reduce using rule 140 (ASSIGNMENT_EXPRESSION)]
    TP_colon      reduce using rule 71 (EXPRESSION)
    TP_colon      [reduce using rule 140 (ASSIGNMENT_EXPRESSION)]
    TP_semiColon  reduce using rule 71 (EXPRESSION)
    TP_semiColon  [reduce using rule 140 (ASSIGNMENT_EXPRESSION)]
    $default      reduce using rule 71 (EXPRESSION)


State 83

   69 EXPRESSION: LOGICAL_AND_EXPRESSION .
  137 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . TO_logicAnd INCLUSIVE_OR_EXPRESSION
  138 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .

    TO_logicAnd  shift, and go to state 144

    T_RBRACKET       reduce using rule 69 (EXPRESSION)
    T_RBRACKET       [reduce using rule 138 (LOGICAL_OR_EXPRESSION)]
    TP_colon         reduce using rule 69 (EXPRESSION)
    TP_colon         [reduce using rule 138 (LOGICAL_OR_EXPRESSION)]
    TP_semiColon     reduce using rule 69 (EXPRESSION)
    TP_semiColon     [reduce using rule 138 (LOGICAL_OR_EXPRESSION)]
    TO_logicOr       reduce using rule 138 (LOGICAL_OR_EXPRESSION)
    TO_questionMark  reduce using rule 138 (LOGICAL_OR_EXPRESSION)
    $default         reduce using rule 69 (EXPRESSION)


State 84

   70 EXPRESSION: LOGICAL_OR_EXPRESSION .
  134 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
  135                       | LOGICAL_OR_EXPRESSION . TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION
  139 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . TO_logicOr LOGICAL_AND_EXPRESSION

    TO_logicOr       shift, and go to state 145
    TO_questionMark  shift, and go to state 146

    T_RBRACKET    reduce using rule 70 (EXPRESSION)
    T_RBRACKET    [reduce using rule 134 (CONDITIONAL_EXPRESSION)]
    TP_colon      reduce using rule 70 (EXPRESSION)
    TP_colon      [reduce using rule 134 (CONDITIONAL_EXPRESSION)]
    TP_semiColon  reduce using rule 70 (EXPRESSION)
    TP_semiColon  [reduce using rule 134 (CONDITIONAL_EXPRESSION)]
    $default      reduce using rule 70 (EXPRESSION)


State 85

   59 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 59 (EXPRESSION)


State 86

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR .

    $default  reduce using rule 44 (PARAMETER_DECLARATION)


State 87

   40 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET .

    $default  reduce using rule 40 (DIRECT_DECLARATOR)


State 88

   43 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma . PARAMETER_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_LIST          go to state 147
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 89

   77 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET . ARGUMENT_EXPRESSION_LIST T_RBRACKET
   78                   | T_IDENTIFIER T_LBRACKET . T_RBRACKET

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    T_RBRACKET     shift, and go to state 148
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    ARGUMENT_EXPRESSION_LIST   go to state 149
    UNARY_EXPRESSION           go to state 150
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 159
    CONDITIONAL_EXPRESSION     go to state 160
    LOGICAL_AND_EXPRESSION     go to state 161
    LOGICAL_OR_EXPRESSION      go to state 162
    ASSIGNMENT_EXPRESSION      go to state 163


State 90

   74 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 164


State 91

   25 ITERATION_STATEMENT: TK_do STATEMENT . TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    TK_while  shift, and go to state 165


State 92

   26 ITERATION_STATEMENT: TK_for T_LBRACKET . EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 166
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 93

   22 SELECTION_STATEMENT: TK_if T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 167
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 94

   27 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 27 (JUMP_STATEMENT)


State 95

   28 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 168


State 96

   90 UNARY_EXPRESSION: TK_sizeof T_LBRACKET . TYPE_NAME T_RBRACKET

    TK_char      shift, and go to state 169
    TK_double    shift, and go to state 170
    TK_enum      shift, and go to state 171
    TK_float     shift, and go to state 172
    TK_int       shift, and go to state 173
    TK_long      shift, and go to state 174
    TK_short     shift, and go to state 175
    TK_signed    shift, and go to state 176
    TK_unsigned  shift, and go to state 177

    TYPE_NAME  go to state 178


State 97

   24 ITERATION_STATEMENT: TK_while T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 179
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 98

   76 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 76 (POSTFIX_EXPRESSION)


State 99

   79 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . TO_increment
   80                   | POSTFIX_EXPRESSION . TO_decrement
   83 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    TO_increment  shift, and go to state 114
    TO_decrement  shift, and go to state 115

    $default  reduce using rule 83 (UNARY_EXPRESSION)


State 100

  109 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 109 (CAST_EXPRESSION)


State 101

   84 UNARY_EXPRESSION: TO_not CAST_EXPRESSION .

    $default  reduce using rule 84 (UNARY_EXPRESSION)


State 102

   85 UNARY_EXPRESSION: TO_bitwiseNot CAST_EXPRESSION .

    $default  reduce using rule 85 (UNARY_EXPRESSION)


State 103

   87 UNARY_EXPRESSION: TO_plus CAST_EXPRESSION .

    $default  reduce using rule 87 (UNARY_EXPRESSION)


State 104

   86 UNARY_EXPRESSION: TO_minus CAST_EXPRESSION .

    $default  reduce using rule 86 (UNARY_EXPRESSION)


State 105

   88 UNARY_EXPRESSION: TO_increment UNARY_EXPRESSION .

    $default  reduce using rule 88 (UNARY_EXPRESSION)


State 106

   89 UNARY_EXPRESSION: TO_decrement UNARY_EXPRESSION .

    $default  reduce using rule 89 (UNARY_EXPRESSION)


State 107

   19 STATEMENT_LIST: STATEMENT STATEMENT_LIST .

    $default  reduce using rule 19 (STATEMENT_LIST)


State 108

   14 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST T_RBRACE .

    $default  reduce using rule 14 (COMPOUND_STATEMENT)


State 109

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 180


State 110

   13 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 13 (COMPOUND_STATEMENT)


State 111

   17 DECLARATION_LIST: DECLARATION DECLARATION_LIST .

    $default  reduce using rule 17 (DECLARATION_LIST)


State 112

   35 INIT_DECLARATOR: DECLARATOR .

    $default  reduce using rule 35 (INIT_DECLARATOR)


State 113

   20 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 20 (EXPRESSION_STATEMENT)


State 114

   79 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION TO_increment .

    $default  reduce using rule 79 (POSTFIX_EXPRESSION)


State 115

   80 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION TO_decrement .

    $default  reduce using rule 80 (POSTFIX_EXPRESSION)


State 116

  142 ASSIGNMENT_OPERATOR: TO_equal .

    $default  reduce using rule 142 (ASSIGNMENT_OPERATOR)


State 117

  152 ASSIGNMENT_OPERATOR: TO_OrEqual .

    $default  reduce using rule 152 (ASSIGNMENT_OPERATOR)


State 118

  151 ASSIGNMENT_OPERATOR: TO_exOrEqual .

    $default  reduce using rule 151 (ASSIGNMENT_OPERATOR)


State 119

  150 ASSIGNMENT_OPERATOR: TO_andEqual .

    $default  reduce using rule 150 (ASSIGNMENT_OPERATOR)


State 120

  148 ASSIGNMENT_OPERATOR: TO_rightEqual .

    $default  reduce using rule 148 (ASSIGNMENT_OPERATOR)


State 121

  149 ASSIGNMENT_OPERATOR: TO_leftEqual .

    $default  reduce using rule 149 (ASSIGNMENT_OPERATOR)


State 122

  147 ASSIGNMENT_OPERATOR: TO_minusEqual .

    $default  reduce using rule 147 (ASSIGNMENT_OPERATOR)


State 123

  146 ASSIGNMENT_OPERATOR: TO_plusEqual .

    $default  reduce using rule 146 (ASSIGNMENT_OPERATOR)


State 124

  144 ASSIGNMENT_OPERATOR: TO_divEqual .

    $default  reduce using rule 144 (ASSIGNMENT_OPERATOR)


State 125

  143 ASSIGNMENT_OPERATOR: TO_multEqual .

    $default  reduce using rule 143 (ASSIGNMENT_OPERATOR)


State 126

  145 ASSIGNMENT_OPERATOR: TO_modEqual .

    $default  reduce using rule 145 (ASSIGNMENT_OPERATOR)


State 127

  141 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 150
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 159
    CONDITIONAL_EXPRESSION     go to state 160
    LOGICAL_AND_EXPRESSION     go to state 161
    LOGICAL_OR_EXPRESSION      go to state 162
    ASSIGNMENT_EXPRESSION      go to state 181


State 128

  112 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 182


State 129

  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 183


State 130

  113 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 100
    CAST_EXPRESSION     go to state 184


State 131

  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 185


State 132

  116 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 186


State 133

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 187


State 134

  119 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 188


State 135

  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 189


State 136

  122 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 190


State 137

  123 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 191


State 138

  124 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 192


State 139

  126 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 193


State 140

  127 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 194


State 141

  129 AND_EXPRESSION: AND_EXPRESSION TO_ampersand . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 195


State 142

  131 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr . AND_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 196


State 143

  133 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR . EXCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 197


State 144

  137 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION TO_logicAnd . INCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 198


State 145

  139 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION TO_logicOr . LOGICAL_AND_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 159
    LOGICAL_AND_EXPRESSION     go to state 199


State 146

  135 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark . EXPRESSION TP_colon CONDITIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 200
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 147

   43 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma PARAMETER_LIST .

    $default  reduce using rule 43 (PARAMETER_LIST)


State 148

   78 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 78 (POSTFIX_EXPRESSION)


State 149

   77 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 201


State 150

  109 CAST_EXPRESSION: UNARY_EXPRESSION .
  141 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 116
    TO_OrEqual     shift, and go to state 117
    TO_exOrEqual   shift, and go to state 118
    TO_andEqual    shift, and go to state 119
    TO_rightEqual  shift, and go to state 120
    TO_leftEqual   shift, and go to state 121
    TO_minusEqual  shift, and go to state 122
    TO_plusEqual   shift, and go to state 123
    TO_divEqual    shift, and go to state 124
    TO_multEqual   shift, and go to state 125
    TO_modEqual    shift, and go to state 126

    $default  reduce using rule 109 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 127


State 151

  110 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 110 (MULTIPLICATIVE_EXPRESSION)


State 152

  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
  112                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
  113                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
  114 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 128
    TO_asterix  shift, and go to state 129
    TO_mod      shift, and go to state 130

    $default  reduce using rule 114 (ADDITIVE_EXPRESSION)


State 153

  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  117 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 131
    TO_minus  shift, and go to state 132

    $default  reduce using rule 117 (SHIFT_EXPRESSION)


State 154

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  120 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    $default  reduce using rule 120 (RELATIONAL_EXPRESSION)


State 155

  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
  122                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
  123                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
  124                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
  125 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 135
    TO_moreThan         shift, and go to state 136
    TO_lessThanOrEqual  shift, and go to state 137
    TO_moreThanOrEqual  shift, and go to state 138

    $default  reduce using rule 125 (EQUALITY_EXPRESSION)


State 156

  126 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
  127                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
  128 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 139
    TO_notEqualTo  shift, and go to state 140

    $default  reduce using rule 128 (AND_EXPRESSION)


State 157

  129 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  130 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 141

    $default  reduce using rule 130 (EXCLUSIVE_OR_EXPRESSION)


State 158

  131 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  132 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 142

    $default  reduce using rule 132 (INCLUSIVE_OR_EXPRESSION)


State 159

  133 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  136 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 143

    $default  reduce using rule 136 (LOGICAL_AND_EXPRESSION)


State 160

  140 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 140 (ASSIGNMENT_EXPRESSION)


State 161

  137 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . TO_logicAnd INCLUSIVE_OR_EXPRESSION
  138 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .

    TO_logicAnd  shift, and go to state 144

    $default  reduce using rule 138 (LOGICAL_OR_EXPRESSION)


State 162

  134 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
  135                       | LOGICAL_OR_EXPRESSION . TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION
  139 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . TO_logicOr LOGICAL_AND_EXPRESSION

    TO_logicOr       shift, and go to state 145
    TO_questionMark  shift, and go to state 146

    $default  reduce using rule 134 (CONDITIONAL_EXPRESSION)


State 163

   81 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .
   82                         | ASSIGNMENT_EXPRESSION . TP_comma ARGUMENT_EXPRESSION_LIST

    TP_comma  shift, and go to state 202

    $default  reduce using rule 81 (ARGUMENT_EXPRESSION_LIST)


State 164

   74 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 74 (PRIMARY_EXPRESSION)


State 165

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while . T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    T_LBRACKET  shift, and go to state 203


State 166

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION . TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    TP_semiColon  shift, and go to state 204


State 167

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT TK_else STATEMENT

    T_RBRACKET  shift, and go to state 205


State 168

   28 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 28 (JUMP_STATEMENT)


State 169

   91 TYPE_NAME: TK_char .

    $default  reduce using rule 91 (TYPE_NAME)


State 170

  107 TYPE_NAME: TK_double .

    $default  reduce using rule 107 (TYPE_NAME)


State 171

  103 TYPE_NAME: TK_enum .

    $default  reduce using rule 103 (TYPE_NAME)


State 172

  106 TYPE_NAME: TK_float .

    $default  reduce using rule 106 (TYPE_NAME)


State 173

   97 TYPE_NAME: TK_int .

    $default  reduce using rule 97 (TYPE_NAME)


State 174

  100 TYPE_NAME: TK_long .
  108          | TK_long . TK_double

    TK_double  shift, and go to state 206

    $default  reduce using rule 100 (TYPE_NAME)


State 175

   94 TYPE_NAME: TK_short .

    $default  reduce using rule 94 (TYPE_NAME)


State 176

   93 TYPE_NAME: TK_signed . TK_char
   95          | TK_signed . TK_short
   98          | TK_signed . TK_int
  101          | TK_signed . TK_long

    TK_char   shift, and go to state 207
    TK_int    shift, and go to state 208
    TK_long   shift, and go to state 209
    TK_short  shift, and go to state 210


State 177

   92 TYPE_NAME: TK_unsigned . TK_char
   96          | TK_unsigned . TK_short
   99          | TK_unsigned . TK_int
  102          | TK_unsigned . TK_long

    TK_char   shift, and go to state 211
    TK_int    shift, and go to state 212
    TK_long   shift, and go to state 213
    TK_short  shift, and go to state 214


State 178

   90 UNARY_EXPRESSION: TK_sizeof T_LBRACKET TYPE_NAME . T_RBRACKET
  104 TYPE_NAME: TYPE_NAME . TO_asterix
  105          | TYPE_NAME . T_LBRACKET TO_asterix T_RBRACKET T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 215
    T_RBRACKET  shift, and go to state 216
    TO_asterix  shift, and go to state 217


State 179

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT

    T_RBRACKET  shift, and go to state 218


State 180

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 12 (COMPOUND_STATEMENT)


State 181

  141 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 141 (ASSIGNMENT_EXPRESSION)


State 182

  112 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION .

    $default  reduce using rule 112 (MULTIPLICATIVE_EXPRESSION)


State 183

  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION .

    $default  reduce using rule 111 (MULTIPLICATIVE_EXPRESSION)


State 184

  113 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION .

    $default  reduce using rule 113 (MULTIPLICATIVE_EXPRESSION)


State 185

  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
  112                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
  113                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 128
    TO_asterix  shift, and go to state 129
    TO_mod      shift, and go to state 130

    $default  reduce using rule 115 (ADDITIVE_EXPRESSION)


State 186

  111 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
  112                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
  113                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
  116 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 128
    TO_asterix  shift, and go to state 129
    TO_mod      shift, and go to state 130

    $default  reduce using rule 116 (ADDITIVE_EXPRESSION)


State 187

  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 131
    TO_minus  shift, and go to state 132

    $default  reduce using rule 118 (SHIFT_EXPRESSION)


State 188

  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  119 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 131
    TO_minus  shift, and go to state 132

    $default  reduce using rule 119 (SHIFT_EXPRESSION)


State 189

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    $default  reduce using rule 121 (RELATIONAL_EXPRESSION)


State 190

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  122 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    $default  reduce using rule 122 (RELATIONAL_EXPRESSION)


State 191

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  123 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    $default  reduce using rule 123 (RELATIONAL_EXPRESSION)


State 192

  118 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
  119                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
  124 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 133
    TO_bitwiseRight  shift, and go to state 134

    $default  reduce using rule 124 (RELATIONAL_EXPRESSION)


State 193

  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
  122                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
  123                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
  124                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
  126 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 135
    TO_moreThan         shift, and go to state 136
    TO_lessThanOrEqual  shift, and go to state 137
    TO_moreThanOrEqual  shift, and go to state 138

    $default  reduce using rule 126 (EQUALITY_EXPRESSION)


State 194

  121 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
  122                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
  123                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
  124                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
  127 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 135
    TO_moreThan         shift, and go to state 136
    TO_lessThanOrEqual  shift, and go to state 137
    TO_moreThanOrEqual  shift, and go to state 138

    $default  reduce using rule 127 (EQUALITY_EXPRESSION)


State 195

  115 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
  116                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  129 AND_EXPRESSION: AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 131
    TO_minus  shift, and go to state 132

    $default  reduce using rule 129 (AND_EXPRESSION)


State 196

  129 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  131 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION .

    TO_ampersand  shift, and go to state 141

    $default  reduce using rule 131 (EXCLUSIVE_OR_EXPRESSION)


State 197

  131 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  133 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 142

    $default  reduce using rule 133 (INCLUSIVE_OR_EXPRESSION)


State 198

  133 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  137 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION TO_logicAnd INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 143

    $default  reduce using rule 137 (LOGICAL_AND_EXPRESSION)


State 199

  137 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . TO_logicAnd INCLUSIVE_OR_EXPRESSION
  139 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION TO_logicOr LOGICAL_AND_EXPRESSION .

    TO_logicAnd  shift, and go to state 144

    $default  reduce using rule 139 (LOGICAL_OR_EXPRESSION)


State 200

  135 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION . TP_colon CONDITIONAL_EXPRESSION

    TP_colon  shift, and go to state 219


State 201

   77 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET .

    $default  reduce using rule 77 (POSTFIX_EXPRESSION)


State 202

   82 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma . ARGUMENT_EXPRESSION_LIST

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    ARGUMENT_EXPRESSION_LIST   go to state 220
    UNARY_EXPRESSION           go to state 150
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 159
    CONDITIONAL_EXPRESSION     go to state 160
    LOGICAL_AND_EXPRESSION     go to state 161
    LOGICAL_OR_EXPRESSION      go to state 162
    ASSIGNMENT_EXPRESSION      go to state 163


State 203

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET . EXPRESSION T_RBRACKET TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 221
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 204

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon . EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 222
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 205

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT TK_else STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 223
    COMPOUND_STATEMENT         go to state 60
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 206

  108 TYPE_NAME: TK_long TK_double .

    $default  reduce using rule 108 (TYPE_NAME)


State 207

   93 TYPE_NAME: TK_signed TK_char .

    $default  reduce using rule 93 (TYPE_NAME)


State 208

   98 TYPE_NAME: TK_signed TK_int .

    $default  reduce using rule 98 (TYPE_NAME)


State 209

  101 TYPE_NAME: TK_signed TK_long .

    $default  reduce using rule 101 (TYPE_NAME)


State 210

   95 TYPE_NAME: TK_signed TK_short .

    $default  reduce using rule 95 (TYPE_NAME)


State 211

   92 TYPE_NAME: TK_unsigned TK_char .

    $default  reduce using rule 92 (TYPE_NAME)


State 212

   99 TYPE_NAME: TK_unsigned TK_int .

    $default  reduce using rule 99 (TYPE_NAME)


State 213

  102 TYPE_NAME: TK_unsigned TK_long .

    $default  reduce using rule 102 (TYPE_NAME)


State 214

   96 TYPE_NAME: TK_unsigned TK_short .

    $default  reduce using rule 96 (TYPE_NAME)


State 215

  105 TYPE_NAME: TYPE_NAME T_LBRACKET . TO_asterix T_RBRACKET T_LBRACKET T_RBRACKET

    TO_asterix  shift, and go to state 224


State 216

   90 UNARY_EXPRESSION: TK_sizeof T_LBRACKET TYPE_NAME T_RBRACKET .

    $default  reduce using rule 90 (UNARY_EXPRESSION)


State 217

  104 TYPE_NAME: TYPE_NAME TO_asterix .

    $default  reduce using rule 104 (TYPE_NAME)


State 218

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 225
    COMPOUND_STATEMENT         go to state 60
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 219

  135 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon . CONDITIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    CAST_EXPRESSION            go to state 151
    MULTIPLICATIVE_EXPRESSION  go to state 152
    ADDITIVE_EXPRESSION        go to state 153
    SHIFT_EXPRESSION           go to state 154
    RELATIONAL_EXPRESSION      go to state 155
    EQUALITY_EXPRESSION        go to state 156
    AND_EXPRESSION             go to state 157
    EXCLUSIVE_OR_EXPRESSION    go to state 158
    INCLUSIVE_OR_EXPRESSION    go to state 159
    CONDITIONAL_EXPRESSION     go to state 226
    LOGICAL_AND_EXPRESSION     go to state 161
    LOGICAL_OR_EXPRESSION      go to state 162


State 220

   82 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST .

    $default  reduce using rule 82 (ARGUMENT_EXPRESSION_LIST)


State 221

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION . T_RBRACKET TP_semiColon

    T_RBRACKET  shift, and go to state 227


State 222

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION . TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    TP_semiColon  shift, and go to state 228


State 223

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT .
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT . TK_else STATEMENT

    TK_else  shift, and go to state 229

    TK_else   [reduce using rule 22 (SELECTION_STATEMENT)]
    $default  reduce using rule 22 (SELECTION_STATEMENT)


State 224

  105 TYPE_NAME: TYPE_NAME T_LBRACKET TO_asterix . T_RBRACKET T_LBRACKET T_RBRACKET

    T_RBRACKET  shift, and go to state 230


State 225

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET STATEMENT .

    $default  reduce using rule 24 (ITERATION_STATEMENT)


State 226

  135 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION .

    $default  reduce using rule 135 (CONDITIONAL_EXPRESSION)


State 227

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET . TP_semiColon

    TP_semiColon  shift, and go to state 231


State 228

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon . EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TK_sizeof      shift, and go to state 48
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    EXPRESSION                 go to state 232
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 229

   23 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 233
    COMPOUND_STATEMENT         go to state 60
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 230

  105 TYPE_NAME: TYPE_NAME T_LBRACKET TO_asterix T_RBRACKET . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 234


State 231

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon .

    $default  reduce using rule 25 (ITERATION_STATEMENT)


State 232

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION . T_RBRACKET STATEMENT

    T_RBRACKET  shift, and go to state 235


State 233

   23 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT .

    $default  reduce using rule 23 (SELECTION_STATEMENT)


State 234

  105 TYPE_NAME: TYPE_NAME T_LBRACKET TO_asterix T_RBRACKET T_LBRACKET . T_RBRACKET

    T_RBRACKET  shift, and go to state 236


State 235

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_sizeof      shift, and go to state 48
    TK_while       shift, and go to state 49
    TO_not         shift, and go to state 50
    TO_bitwiseNot  shift, and go to state 51
    TO_plus        shift, and go to state 52
    TO_minus       shift, and go to state 53
    TO_increment   shift, and go to state 54
    TO_decrement   shift, and go to state 55
    TP_semiColon   shift, and go to state 56
    TC_integer     shift, and go to state 57
    TC_float       shift, and go to state 58

    STATEMENT                  go to state 237
    COMPOUND_STATEMENT         go to state 60
    EXPRESSION_STATEMENT       go to state 63
    SELECTION_STATEMENT        go to state 64
    ITERATION_STATEMENT        go to state 65
    JUMP_STATEMENT             go to state 66
    EXPRESSION                 go to state 69
    PRIMARY_EXPRESSION         go to state 70
    POSTFIX_EXPRESSION         go to state 71
    UNARY_EXPRESSION           go to state 72
    CAST_EXPRESSION            go to state 73
    MULTIPLICATIVE_EXPRESSION  go to state 74
    ADDITIVE_EXPRESSION        go to state 75
    SHIFT_EXPRESSION           go to state 76
    RELATIONAL_EXPRESSION      go to state 77
    EQUALITY_EXPRESSION        go to state 78
    AND_EXPRESSION             go to state 79
    EXCLUSIVE_OR_EXPRESSION    go to state 80
    INCLUSIVE_OR_EXPRESSION    go to state 81
    CONDITIONAL_EXPRESSION     go to state 82
    LOGICAL_AND_EXPRESSION     go to state 83
    LOGICAL_OR_EXPRESSION      go to state 84
    ASSIGNMENT_EXPRESSION      go to state 85


State 236

  105 TYPE_NAME: TYPE_NAME T_LBRACKET TO_asterix T_RBRACKET T_LBRACKET T_RBRACKET .

    $default  reduce using rule 105 (TYPE_NAME)


State 237

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT .

    $default  reduce using rule 26 (ITERATION_STATEMENT)
