Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_continue
   TK_default
   TK_enum
   TK_extern
   TK_goto
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_increment
   TO_decrement
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr


State 66 conflicts: 3 reduce/reduce
State 67 conflicts: 3 reduce/reduce
State 68 conflicts: 3 reduce/reduce
State 69 conflicts: 3 reduce/reduce
State 70 conflicts: 3 reduce/reduce
State 71 conflicts: 3 reduce/reduce
State 72 conflicts: 3 reduce/reduce
State 73 conflicts: 3 reduce/reduce
State 74 conflicts: 3 reduce/reduce
State 75 conflicts: 3 reduce/reduce
State 76 conflicts: 3 reduce/reduce
State 77 conflicts: 3 reduce/reduce
State 189 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION
    3                 | DECLARATION
    4                 | FUNCTION_DEFINITION TRANSLATION_UNIT
    5                 | DECLARATION TRANSLATION_UNIT

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    7 STATEMENT: COMPOUND_STATEMENT
    8          | JUMP_STATEMENT
    9          | SELECTION_STATEMENT
   10          | EXPRESSION_STATEMENT
   11          | ITERATION_STATEMENT

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE
   13                   | T_LBRACE STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE DECLARATION_LIST T_RBRACE
   15                   | T_LBRACE T_RBRACE

   16 DECLARATION_LIST: DECLARATION
   17                 | DECLARATION DECLARATION_LIST

   18 STATEMENT_LIST: STATEMENT
   19               | STATEMENT STATEMENT_LIST

   20 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon
   21                     | TP_semiColon

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   25                    | TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon
   26                    | TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

   27 JUMP_STATEMENT: TK_return TP_semiColon
   28               | TK_return EXPRESSION TP_semiColon

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon

   30 DECLARATION_SPECIFIERS: TYPE_SPECIFIER
   31                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS
   32                       | TYPE_QUALIFIER
   33                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS

   34 INIT_DECLARATION_LIST: INIT_DECLARATOR

   35 INIT_DECLARATOR: DECLARATOR

   36 DECLARATOR: DIRECT_DECLARATOR

   37 DIRECT_DECLARATOR: T_IDENTIFIER
   38                  | T_LBRACKET DECLARATOR T_RBRACKET
   39                  | T_IDENTIFIER T_LBRACKET T_RBRACKET
   40                  | T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

   41 PARAMETER_TYPE_LIST: PARAMETER_LIST

   42 PARAMETER_LIST: PARAMETER_DECLARATION
   43               | PARAMETER_DECLARATION TP_comma PARAMETER_LIST

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR

   45 TYPE_SPECIFIER: TK_void
   46               | TK_char
   47               | TK_short
   48               | TK_int
   49               | TK_long
   50               | TK_float
   51               | TK_double
   52               | TK_signed
   53               | TK_unsigned

   54 TYPE_QUALIFIER: TK_const
   55               | TK_volatile

   56 EXPRESSION: PRIMARY_EXPRESSION
   57           | MULTIPLICATIVE_EXPRESSION
   58           | ADDITIVE_EXPRESSION
   59           | ASSIGNMENT_EXPRESSION
   60           | AND_EXPRESSION
   61           | EXCLUSIVE_OR_EXPRESSION
   62           | INCLUSIVE_OR_EXPRESSION
   63           | SHIFT_EXPRESSION
   64           | RELATIONAL_EXPRESSION
   65           | EQUALITY_EXPRESSION
   66           | POSTFIX_EXPRESSION
   67           | UNARY_EXPRESSION
   68           | CAST_EXPRESSION

   69 PRIMARY_EXPRESSION: TC_integer
   70                   | T_LBRACKET EXPRESSION T_RBRACKET
   71                   | T_IDENTIFIER

   72 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
   73                   | T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   74                   | T_IDENTIFIER T_LBRACKET T_RBRACKET

   75 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
   76                         | ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST

   77 UNARY_EXPRESSION: POSTFIX_EXPRESSION
   78                 | TO_not CAST_EXPRESSION
   79                 | TO_bitwiseNot CAST_EXPRESSION
   80                 | TO_minus CAST_EXPRESSION
   81                 | TO_plus CAST_EXPRESSION

   82 CAST_EXPRESSION: UNARY_EXPRESSION

   83 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   84                          | MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION
   85                          | MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION
   86                          | MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION

   87 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   88                    | ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION

   90 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   91                 | SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION

   93 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   94                      | RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION
   95                      | RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION
   96                      | RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION
   97                      | RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION

   98 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   99                    | EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION
  100                    | EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION

  101 AND_EXPRESSION: EQUALITY_EXPRESSION
  102               | AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION

  103 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
  104                        | EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION

  105 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
  106                        | INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION

  107 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
  108                       | LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION

  109 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
  110                       | LOGICAL_AND_EXPRESSION TO_logicAnd INCLUSIVE_OR_EXPRESSION

  111 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
  112                      | LOGICAL_OR_EXPRESSION TO_logicOr LOGICAL_AND_EXPRESSION

  113 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
  114                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

  115 ASSIGNMENT_OPERATOR: TO_equal
  116                    | TO_multEqual
  117                    | TO_divEqual
  118                    | TO_modEqual
  119                    | TO_plusEqual
  120                    | TO_minusEqual
  121                    | TO_rightEqual
  122                    | TO_leftEqual
  123                    | TO_andEqual
  124                    | TO_exOrEqual
  125                    | TO_OrEqual


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 37 39 40 71 73 74
T_LBRACE (259) 12 13 14 15
T_RBRACE (260) 12 13 14 15
T_LBRACKET (261) 22 23 24 25 26 38 39 40 70 73 74
T_RBRACKET (262) 22 23 24 25 26 38 39 40 70 73 74
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 46
TK_const (269) 54
TK_continue (270)
TK_default (271)
TK_do (272) 25
TK_double (273) 51
TK_else (274) 23
TK_enum (275)
TK_extern (276)
TK_float (277) 50
TK_for (278) 26
TK_goto (279)
TK_if (280) 22 23
TK_int (281) 48
TK_long (282) 49
TK_register (283)
TK_return (284) 27 28
TK_short (285) 47
TK_signed (286) 52
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 53
TK_void (294) 45
TK_volatile (295) 55
TK_while (296) 24 25
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 85
TO_memberAccess (301)
TO_not (302) 78
TO_bitwiseNot (303) 79
TO_ampersand (304) 102
TO_logicAnd (305) 110
TO_asterix (306) 84
TO_mod (307) 86
TO_bitwiseLeft (308) 91
TO_bitwiseRight (309) 92
TO_lessThan (310) 94
TO_moreThan (311) 95
TO_lessThanOrEqual (312) 96
TO_moreThanOrEqual (313) 97
TO_equalTo (314) 99
TO_notEqualTo (315) 100
TO_plus (316) 81 88
TO_minus (317) 80 89
TO_increment (318)
TO_decrement (319)
TO_equal (320) 115
TP_comma (321) 43 76
TP_colon (322) 108
TP_semiColon (323) 20 21 25 26 27 28 29
TC_integer (324) 69
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334) 125
TO_exOrEqual (335) 124
TO_andEqual (336) 123
TO_rightEqual (337) 121
TO_leftEqual (338) 122
TO_minusEqual (339) 120
TO_plusEqual (340) 119
TO_divEqual (341) 117
TO_multEqual (342) 116
TO_OR (343) 106
TO_logicOr (344) 112
TO_exclussiveOr (345) 104
TO_questionMark (346) 108
TO_modEqual (347) 118


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
START (94)
    on left: 1, on right: 0
TRANSLATION_UNIT (95)
    on left: 2 3 4 5, on right: 1 4 5
FUNCTION_DEFINITION (96)
    on left: 6, on right: 2 4
STATEMENT (97)
    on left: 7 8 9 10 11, on right: 18 19 22 23 24 25 26
COMPOUND_STATEMENT (98)
    on left: 12 13 14 15, on right: 6 7
DECLARATION_LIST (99)
    on left: 16 17, on right: 12 14 17
STATEMENT_LIST (100)
    on left: 18 19, on right: 12 13 19
EXPRESSION_STATEMENT (101)
    on left: 20 21, on right: 10
SELECTION_STATEMENT (102)
    on left: 22 23, on right: 9
ITERATION_STATEMENT (103)
    on left: 24 25 26, on right: 11
JUMP_STATEMENT (104)
    on left: 27 28, on right: 8
DECLARATION (105)
    on left: 29, on right: 3 5 16 17
DECLARATION_SPECIFIERS (106)
    on left: 30 31 32 33, on right: 6 29 31 33 44
INIT_DECLARATION_LIST (107)
    on left: 34, on right: 29
INIT_DECLARATOR (108)
    on left: 35, on right: 34
DECLARATOR (109)
    on left: 36, on right: 6 35 38 44
DIRECT_DECLARATOR (110)
    on left: 37 38 39 40, on right: 36
PARAMETER_TYPE_LIST (111)
    on left: 41, on right: 40
PARAMETER_LIST (112)
    on left: 42 43, on right: 41 43
PARAMETER_DECLARATION (113)
    on left: 44, on right: 42 43
TYPE_SPECIFIER (114)
    on left: 45 46 47 48 49 50 51 52 53, on right: 30 31
TYPE_QUALIFIER (115)
    on left: 54 55, on right: 32 33
EXPRESSION (116)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 20 22
    23 24 25 26 28 70 108
PRIMARY_EXPRESSION (117)
    on left: 69 70 71, on right: 56 72
POSTFIX_EXPRESSION (118)
    on left: 72 73 74, on right: 66 77
ARGUMENT_EXPRESSION_LIST (119)
    on left: 75 76, on right: 73 76
UNARY_EXPRESSION (120)
    on left: 77 78 79 80 81, on right: 67 82 114
CAST_EXPRESSION (121)
    on left: 82, on right: 68 78 79 80 81 83 84 85 86
MULTIPLICATIVE_EXPRESSION (122)
    on left: 83 84 85 86, on right: 57 84 85 86 87 88 89
ADDITIVE_EXPRESSION (123)
    on left: 87 88 89, on right: 58 88 89 90 91 92 102
SHIFT_EXPRESSION (124)
    on left: 90 91 92, on right: 63 91 92 93 94 95 96 97
RELATIONAL_EXPRESSION (125)
    on left: 93 94 95 96 97, on right: 64 94 95 96 97 98 99 100
EQUALITY_EXPRESSION (126)
    on left: 98 99 100, on right: 65 99 100 101
AND_EXPRESSION (127)
    on left: 101 102, on right: 60 102 103 104
EXCLUSIVE_OR_EXPRESSION (128)
    on left: 103 104, on right: 61 104 105 106
INCLUSIVE_OR_EXPRESSION (129)
    on left: 105 106, on right: 62 106 109 110
CONDITIONAL_EXPRESSION (130)
    on left: 107 108, on right: 108 113
LOGICAL_AND_EXPRESSION (131)
    on left: 109 110, on right: 110 111 112
LOGICAL_OR_EXPRESSION (132)
    on left: 111 112, on right: 107 108 112
ASSIGNMENT_EXPRESSION (133)
    on left: 113 114, on right: 59 75 76 114
ASSIGNMENT_OPERATOR (134)
    on left: 115 116 117 118 119 120 121 122 123 124 125, on right:
    114


State 0

    0 $accept: . START $end

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    START                   go to state 12
    TRANSLATION_UNIT        go to state 13
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 1

   46 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 46 (TYPE_SPECIFIER)


State 2

   54 TYPE_QUALIFIER: TK_const .

    $default  reduce using rule 54 (TYPE_QUALIFIER)


State 3

   51 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 51 (TYPE_SPECIFIER)


State 4

   50 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 50 (TYPE_SPECIFIER)


State 5

   48 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 48 (TYPE_SPECIFIER)


State 6

   49 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 49 (TYPE_SPECIFIER)


State 7

   47 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 47 (TYPE_SPECIFIER)


State 8

   52 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 52 (TYPE_SPECIFIER)


State 9

   53 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 53 (TYPE_SPECIFIER)


State 10

   45 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 45 (TYPE_SPECIFIER)


State 11

   55 TYPE_QUALIFIER: TK_volatile .

    $default  reduce using rule 55 (TYPE_QUALIFIER)


State 12

    0 $accept: START . $end

    $end  shift, and go to state 19


State 13

    1 START: TRANSLATION_UNIT .

    $default  reduce using rule 1 (START)


State 14

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION .
    4                 | FUNCTION_DEFINITION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 2 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 20
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 15

    3 TRANSLATION_UNIT: DECLARATION .
    5                 | DECLARATION . TRANSLATION_UNIT

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 3 (TRANSLATION_UNIT)

    TRANSLATION_UNIT        go to state 21
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 16

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
   29 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 26
    DIRECT_DECLARATOR      go to state 27


State 17

   30 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .
   31                       | TYPE_SPECIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 30 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 28
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 18

   32 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .
   33                       | TYPE_QUALIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 32 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 29
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 19

    0 $accept: START $end .

    $default  accept


State 20

    4 TRANSLATION_UNIT: FUNCTION_DEFINITION TRANSLATION_UNIT .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 21

    5 TRANSLATION_UNIT: DECLARATION TRANSLATION_UNIT .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 22

   37 DIRECT_DECLARATOR: T_IDENTIFIER .
   39                  | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   40                  | T_IDENTIFIER . T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 30

    $default  reduce using rule 37 (DIRECT_DECLARATOR)


State 23

   38 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 31
    DIRECT_DECLARATOR  go to state 27


State 24

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST . TP_semiColon

    TP_semiColon  shift, and go to state 32


State 25

   34 INIT_DECLARATION_LIST: INIT_DECLARATOR .

    $default  reduce using rule 34 (INIT_DECLARATION_LIST)


State 26

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   35 INIT_DECLARATOR: DECLARATOR .

    T_LBRACE  shift, and go to state 33

    $default  reduce using rule 35 (INIT_DECLARATOR)

    COMPOUND_STATEMENT  go to state 34


State 27

   36 DECLARATOR: DIRECT_DECLARATOR .

    $default  reduce using rule 36 (DECLARATOR)


State 28

   31 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 31 (DECLARATION_SPECIFIERS)


State 29

   33 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 33 (DECLARATION_SPECIFIERS)


State 30

   39 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   40                  | T_IDENTIFIER T_LBRACKET . PARAMETER_TYPE_LIST T_RBRACKET

    T_RBRACKET   shift, and go to state 35
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_TYPE_LIST     go to state 37
    PARAMETER_LIST          go to state 38
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 31

   38 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 40


State 32

   29 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon .

    $default  reduce using rule 29 (DECLARATION)


State 33

   12 COMPOUND_STATEMENT: T_LBRACE . DECLARATION_LIST STATEMENT_LIST T_RBRACE
   13                   | T_LBRACE . STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE . DECLARATION_LIST T_RBRACE
   15                   | T_LBRACE . T_RBRACE

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_RBRACE       shift, and go to state 42
    T_LBRACKET     shift, and go to state 43
    TK_char        shift, and go to state 1
    TK_const       shift, and go to state 2
    TK_do          shift, and go to state 44
    TK_double      shift, and go to state 3
    TK_float       shift, and go to state 4
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_int         shift, and go to state 5
    TK_long        shift, and go to state 6
    TK_return      shift, and go to state 47
    TK_short       shift, and go to state 7
    TK_signed      shift, and go to state 8
    TK_unsigned    shift, and go to state 9
    TK_void        shift, and go to state 10
    TK_volatile    shift, and go to state 11
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 55
    COMPOUND_STATEMENT         go to state 56
    DECLARATION_LIST           go to state 57
    STATEMENT_LIST             go to state 58
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    DECLARATION                go to state 63
    DECLARATION_SPECIFIERS     go to state 64
    TYPE_SPECIFIER             go to state 17
    TYPE_QUALIFIER             go to state 18
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 34

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 6 (FUNCTION_DEFINITION)


State 35

   39 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 39 (DIRECT_DECLARATOR)


State 36

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS . DECLARATOR

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 82
    DIRECT_DECLARATOR  go to state 27


State 37

   40 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 83


State 38

   41 PARAMETER_TYPE_LIST: PARAMETER_LIST .

    $default  reduce using rule 41 (PARAMETER_TYPE_LIST)


State 39

   42 PARAMETER_LIST: PARAMETER_DECLARATION .
   43               | PARAMETER_DECLARATION . TP_comma PARAMETER_LIST

    TP_comma  shift, and go to state 84

    $default  reduce using rule 42 (PARAMETER_LIST)


State 40

   38 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 38 (DIRECT_DECLARATOR)


State 41

   71 PRIMARY_EXPRESSION: T_IDENTIFIER .
   73 POSTFIX_EXPRESSION: T_IDENTIFIER . T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET
   74                   | T_IDENTIFIER . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 85

    $default  reduce using rule 71 (PRIMARY_EXPRESSION)


State 42

   15 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 15 (COMPOUND_STATEMENT)


State 43

   70 PRIMARY_EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 86
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 44

   25 ITERATION_STATEMENT: TK_do . STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 87
    COMPOUND_STATEMENT         go to state 56
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 45

   26 ITERATION_STATEMENT: TK_for . T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 88


State 46

   22 SELECTION_STATEMENT: TK_if . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

    T_LBRACKET  shift, and go to state 89


State 47

   27 JUMP_STATEMENT: TK_return . TP_semiColon
   28               | TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 90
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 91
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 48

   24 ITERATION_STATEMENT: TK_while . T_LBRACKET EXPRESSION T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 92


State 49

   78 UNARY_EXPRESSION: TO_not . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 96


State 50

   79 UNARY_EXPRESSION: TO_bitwiseNot . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 97


State 51

   81 UNARY_EXPRESSION: TO_plus . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 98


State 52

   80 UNARY_EXPRESSION: TO_minus . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 99


State 53

   21 EXPRESSION_STATEMENT: TP_semiColon .

    $default  reduce using rule 21 (EXPRESSION_STATEMENT)


State 54

   69 PRIMARY_EXPRESSION: TC_integer .

    $default  reduce using rule 69 (PRIMARY_EXPRESSION)


State 55

   18 STATEMENT_LIST: STATEMENT .
   19               | STATEMENT . STATEMENT_LIST

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    $default  reduce using rule 18 (STATEMENT_LIST)

    STATEMENT                  go to state 55
    COMPOUND_STATEMENT         go to state 56
    STATEMENT_LIST             go to state 100
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 56

    7 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 57

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST . STATEMENT_LIST T_RBRACE
   14                   | T_LBRACE DECLARATION_LIST . T_RBRACE

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_RBRACE       shift, and go to state 101
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 55
    COMPOUND_STATEMENT         go to state 56
    STATEMENT_LIST             go to state 102
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 58

   13 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 103


State 59

   10 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 10 (STATEMENT)


State 60

    9 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 61

   11 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 62

    8 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 63

   16 DECLARATION_LIST: DECLARATION .
   17                 | DECLARATION . DECLARATION_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 16 (DECLARATION_LIST)

    DECLARATION_LIST        go to state 104
    DECLARATION             go to state 63
    DECLARATION_SPECIFIERS  go to state 64
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 64

   29 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 105
    DIRECT_DECLARATOR      go to state 27


State 65

   20 EXPRESSION_STATEMENT: EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 106


State 66

   56 EXPRESSION: PRIMARY_EXPRESSION .
   72 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    T_RBRACKET    reduce using rule 56 (EXPRESSION)
    T_RBRACKET    [reduce using rule 72 (POSTFIX_EXPRESSION)]
    TP_colon      reduce using rule 56 (EXPRESSION)
    TP_colon      [reduce using rule 72 (POSTFIX_EXPRESSION)]
    TP_semiColon  reduce using rule 56 (EXPRESSION)
    TP_semiColon  [reduce using rule 72 (POSTFIX_EXPRESSION)]
    $default      reduce using rule 72 (POSTFIX_EXPRESSION)


State 67

   66 EXPRESSION: POSTFIX_EXPRESSION .
   77 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    T_RBRACKET    reduce using rule 66 (EXPRESSION)
    T_RBRACKET    [reduce using rule 77 (UNARY_EXPRESSION)]
    TP_colon      reduce using rule 66 (EXPRESSION)
    TP_colon      [reduce using rule 77 (UNARY_EXPRESSION)]
    TP_semiColon  reduce using rule 66 (EXPRESSION)
    TP_semiColon  [reduce using rule 77 (UNARY_EXPRESSION)]
    $default      reduce using rule 77 (UNARY_EXPRESSION)


State 68

   67 EXPRESSION: UNARY_EXPRESSION .
   82 CAST_EXPRESSION: UNARY_EXPRESSION .
  114 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 107
    TO_OrEqual     shift, and go to state 108
    TO_exOrEqual   shift, and go to state 109
    TO_andEqual    shift, and go to state 110
    TO_rightEqual  shift, and go to state 111
    TO_leftEqual   shift, and go to state 112
    TO_minusEqual  shift, and go to state 113
    TO_plusEqual   shift, and go to state 114
    TO_divEqual    shift, and go to state 115
    TO_multEqual   shift, and go to state 116
    TO_modEqual    shift, and go to state 117

    T_RBRACKET    reduce using rule 67 (EXPRESSION)
    T_RBRACKET    [reduce using rule 82 (CAST_EXPRESSION)]
    TP_colon      reduce using rule 67 (EXPRESSION)
    TP_colon      [reduce using rule 82 (CAST_EXPRESSION)]
    TP_semiColon  reduce using rule 67 (EXPRESSION)
    TP_semiColon  [reduce using rule 82 (CAST_EXPRESSION)]
    $default      reduce using rule 82 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 118


State 69

   68 EXPRESSION: CAST_EXPRESSION .
   83 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    T_RBRACKET    reduce using rule 68 (EXPRESSION)
    T_RBRACKET    [reduce using rule 83 (MULTIPLICATIVE_EXPRESSION)]
    TP_colon      reduce using rule 68 (EXPRESSION)
    TP_colon      [reduce using rule 83 (MULTIPLICATIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 68 (EXPRESSION)
    TP_semiColon  [reduce using rule 83 (MULTIPLICATIVE_EXPRESSION)]
    $default      reduce using rule 83 (MULTIPLICATIVE_EXPRESSION)


State 70

   57 EXPRESSION: MULTIPLICATIVE_EXPRESSION .
   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   85                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   86                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   87 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 119
    TO_asterix  shift, and go to state 120
    TO_mod      shift, and go to state 121

    T_RBRACKET    reduce using rule 57 (EXPRESSION)
    T_RBRACKET    [reduce using rule 87 (ADDITIVE_EXPRESSION)]
    TP_colon      reduce using rule 57 (EXPRESSION)
    TP_colon      [reduce using rule 87 (ADDITIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 57 (EXPRESSION)
    TP_semiColon  [reduce using rule 87 (ADDITIVE_EXPRESSION)]
    $default      reduce using rule 87 (ADDITIVE_EXPRESSION)


State 71

   58 EXPRESSION: ADDITIVE_EXPRESSION .
   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   90 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 122
    TO_minus  shift, and go to state 123

    T_RBRACKET    reduce using rule 58 (EXPRESSION)
    T_RBRACKET    [reduce using rule 90 (SHIFT_EXPRESSION)]
    TP_colon      reduce using rule 58 (EXPRESSION)
    TP_colon      [reduce using rule 90 (SHIFT_EXPRESSION)]
    TP_semiColon  reduce using rule 58 (EXPRESSION)
    TP_semiColon  [reduce using rule 90 (SHIFT_EXPRESSION)]
    $default      reduce using rule 90 (SHIFT_EXPRESSION)


State 72

   63 EXPRESSION: SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   93 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    T_RBRACKET    reduce using rule 63 (EXPRESSION)
    T_RBRACKET    [reduce using rule 93 (RELATIONAL_EXPRESSION)]
    TP_colon      reduce using rule 63 (EXPRESSION)
    TP_colon      [reduce using rule 93 (RELATIONAL_EXPRESSION)]
    TP_semiColon  reduce using rule 63 (EXPRESSION)
    TP_semiColon  [reduce using rule 93 (RELATIONAL_EXPRESSION)]
    $default      reduce using rule 93 (RELATIONAL_EXPRESSION)


State 73

   64 EXPRESSION: RELATIONAL_EXPRESSION .
   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   95                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   96                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   97                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   98 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 126
    TO_moreThan         shift, and go to state 127
    TO_lessThanOrEqual  shift, and go to state 128
    TO_moreThanOrEqual  shift, and go to state 129

    T_RBRACKET    reduce using rule 64 (EXPRESSION)
    T_RBRACKET    [reduce using rule 98 (EQUALITY_EXPRESSION)]
    TP_colon      reduce using rule 64 (EXPRESSION)
    TP_colon      [reduce using rule 98 (EQUALITY_EXPRESSION)]
    TP_semiColon  reduce using rule 64 (EXPRESSION)
    TP_semiColon  [reduce using rule 98 (EQUALITY_EXPRESSION)]
    $default      reduce using rule 98 (EQUALITY_EXPRESSION)


State 74

   65 EXPRESSION: EQUALITY_EXPRESSION .
   99 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
  100                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
  101 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 130
    TO_notEqualTo  shift, and go to state 131

    T_RBRACKET    reduce using rule 65 (EXPRESSION)
    T_RBRACKET    [reduce using rule 101 (AND_EXPRESSION)]
    TP_colon      reduce using rule 65 (EXPRESSION)
    TP_colon      [reduce using rule 101 (AND_EXPRESSION)]
    TP_semiColon  reduce using rule 65 (EXPRESSION)
    TP_semiColon  [reduce using rule 101 (AND_EXPRESSION)]
    $default      reduce using rule 101 (AND_EXPRESSION)


State 75

   60 EXPRESSION: AND_EXPRESSION .
  102 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  103 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 132

    T_RBRACKET    reduce using rule 60 (EXPRESSION)
    T_RBRACKET    [reduce using rule 103 (EXCLUSIVE_OR_EXPRESSION)]
    TP_colon      reduce using rule 60 (EXPRESSION)
    TP_colon      [reduce using rule 103 (EXCLUSIVE_OR_EXPRESSION)]
    TP_semiColon  reduce using rule 60 (EXPRESSION)
    TP_semiColon  [reduce using rule 103 (EXCLUSIVE_OR_EXPRESSION)]
    $default      reduce using rule 103 (EXCLUSIVE_OR_EXPRESSION)


State 76

   61 EXPRESSION: EXCLUSIVE_OR_EXPRESSION .
  104 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  105 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 133

    T_RBRACKET    reduce using rule 61 (EXPRESSION)
    T_RBRACKET    [reduce using rule 105 (INCLUSIVE_OR_EXPRESSION)]
    TP_colon      reduce using rule 61 (EXPRESSION)
    TP_colon      [reduce using rule 105 (INCLUSIVE_OR_EXPRESSION)]
    TP_semiColon  reduce using rule 61 (EXPRESSION)
    TP_semiColon  [reduce using rule 105 (INCLUSIVE_OR_EXPRESSION)]
    $default      reduce using rule 105 (INCLUSIVE_OR_EXPRESSION)


State 77

   62 EXPRESSION: INCLUSIVE_OR_EXPRESSION .
  106 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  109 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 134

    T_RBRACKET       reduce using rule 62 (EXPRESSION)
    T_RBRACKET       [reduce using rule 109 (LOGICAL_AND_EXPRESSION)]
    TO_logicAnd      reduce using rule 109 (LOGICAL_AND_EXPRESSION)
    TP_colon         reduce using rule 62 (EXPRESSION)
    TP_colon         [reduce using rule 109 (LOGICAL_AND_EXPRESSION)]
    TP_semiColon     reduce using rule 62 (EXPRESSION)
    TP_semiColon     [reduce using rule 109 (LOGICAL_AND_EXPRESSION)]
    TO_logicOr       reduce using rule 109 (LOGICAL_AND_EXPRESSION)
    TO_questionMark  reduce using rule 109 (LOGICAL_AND_EXPRESSION)
    $default         reduce using rule 62 (EXPRESSION)


State 78

  113 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 113 (ASSIGNMENT_EXPRESSION)


State 79

  110 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . TO_logicAnd INCLUSIVE_OR_EXPRESSION
  111 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .

    TO_logicAnd  shift, and go to state 135

    $default  reduce using rule 111 (LOGICAL_OR_EXPRESSION)


State 80

  107 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
  108                       | LOGICAL_OR_EXPRESSION . TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION
  112 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . TO_logicOr LOGICAL_AND_EXPRESSION

    TO_logicOr       shift, and go to state 136
    TO_questionMark  shift, and go to state 137

    $default  reduce using rule 107 (CONDITIONAL_EXPRESSION)


State 81

   59 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 59 (EXPRESSION)


State 82

   44 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR .

    $default  reduce using rule 44 (PARAMETER_DECLARATION)


State 83

   40 DIRECT_DECLARATOR: T_IDENTIFIER T_LBRACKET PARAMETER_TYPE_LIST T_RBRACKET .

    $default  reduce using rule 40 (DIRECT_DECLARATOR)


State 84

   43 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma . PARAMETER_LIST

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    DECLARATION_SPECIFIERS  go to state 36
    PARAMETER_LIST          go to state 138
    PARAMETER_DECLARATION   go to state 39
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 85

   73 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET . ARGUMENT_EXPRESSION_LIST T_RBRACKET
   74                   | T_IDENTIFIER T_LBRACKET . T_RBRACKET

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    T_RBRACKET     shift, and go to state 139
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    ARGUMENT_EXPRESSION_LIST   go to state 140
    UNARY_EXPRESSION           go to state 141
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 150
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 151


State 86

   70 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 152


State 87

   25 ITERATION_STATEMENT: TK_do STATEMENT . TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    TK_while  shift, and go to state 153


State 88

   26 ITERATION_STATEMENT: TK_for T_LBRACKET . EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 154
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 89

   22 SELECTION_STATEMENT: TK_if T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 155
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 90

   27 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 27 (JUMP_STATEMENT)


State 91

   28 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 156


State 92

   24 ITERATION_STATEMENT: TK_while T_LBRACKET . EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 157
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 93

   72 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 72 (POSTFIX_EXPRESSION)


State 94

   77 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    $default  reduce using rule 77 (UNARY_EXPRESSION)


State 95

   82 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 82 (CAST_EXPRESSION)


State 96

   78 UNARY_EXPRESSION: TO_not CAST_EXPRESSION .

    $default  reduce using rule 78 (UNARY_EXPRESSION)


State 97

   79 UNARY_EXPRESSION: TO_bitwiseNot CAST_EXPRESSION .

    $default  reduce using rule 79 (UNARY_EXPRESSION)


State 98

   81 UNARY_EXPRESSION: TO_plus CAST_EXPRESSION .

    $default  reduce using rule 81 (UNARY_EXPRESSION)


State 99

   80 UNARY_EXPRESSION: TO_minus CAST_EXPRESSION .

    $default  reduce using rule 80 (UNARY_EXPRESSION)


State 100

   19 STATEMENT_LIST: STATEMENT STATEMENT_LIST .

    $default  reduce using rule 19 (STATEMENT_LIST)


State 101

   14 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST T_RBRACE .

    $default  reduce using rule 14 (COMPOUND_STATEMENT)


State 102

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST . T_RBRACE

    T_RBRACE  shift, and go to state 158


State 103

   13 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 13 (COMPOUND_STATEMENT)


State 104

   17 DECLARATION_LIST: DECLARATION DECLARATION_LIST .

    $default  reduce using rule 17 (DECLARATION_LIST)


State 105

   35 INIT_DECLARATOR: DECLARATOR .

    $default  reduce using rule 35 (INIT_DECLARATOR)


State 106

   20 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 20 (EXPRESSION_STATEMENT)


State 107

  115 ASSIGNMENT_OPERATOR: TO_equal .

    $default  reduce using rule 115 (ASSIGNMENT_OPERATOR)


State 108

  125 ASSIGNMENT_OPERATOR: TO_OrEqual .

    $default  reduce using rule 125 (ASSIGNMENT_OPERATOR)


State 109

  124 ASSIGNMENT_OPERATOR: TO_exOrEqual .

    $default  reduce using rule 124 (ASSIGNMENT_OPERATOR)


State 110

  123 ASSIGNMENT_OPERATOR: TO_andEqual .

    $default  reduce using rule 123 (ASSIGNMENT_OPERATOR)


State 111

  121 ASSIGNMENT_OPERATOR: TO_rightEqual .

    $default  reduce using rule 121 (ASSIGNMENT_OPERATOR)


State 112

  122 ASSIGNMENT_OPERATOR: TO_leftEqual .

    $default  reduce using rule 122 (ASSIGNMENT_OPERATOR)


State 113

  120 ASSIGNMENT_OPERATOR: TO_minusEqual .

    $default  reduce using rule 120 (ASSIGNMENT_OPERATOR)


State 114

  119 ASSIGNMENT_OPERATOR: TO_plusEqual .

    $default  reduce using rule 119 (ASSIGNMENT_OPERATOR)


State 115

  117 ASSIGNMENT_OPERATOR: TO_divEqual .

    $default  reduce using rule 117 (ASSIGNMENT_OPERATOR)


State 116

  116 ASSIGNMENT_OPERATOR: TO_multEqual .

    $default  reduce using rule 116 (ASSIGNMENT_OPERATOR)


State 117

  118 ASSIGNMENT_OPERATOR: TO_modEqual .

    $default  reduce using rule 118 (ASSIGNMENT_OPERATOR)


State 118

  114 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 141
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 150
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 159


State 119

   85 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 160


State 120

   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 161


State 121

   86 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod . CAST_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION  go to state 93
    POSTFIX_EXPRESSION  go to state 94
    UNARY_EXPRESSION    go to state 95
    CAST_EXPRESSION     go to state 162


State 122

   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 163


State 123

   89 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 164


State 124

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 165


State 125

   92 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 166


State 126

   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 167


State 127

   95 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 168


State 128

   96 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 169


State 129

   97 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual . SHIFT_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 170


State 130

   99 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 171


State 131

  100 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo . RELATIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 172


State 132

  102 AND_EXPRESSION: AND_EXPRESSION TO_ampersand . ADDITIVE_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 173


State 133

  104 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr . AND_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 174


State 134

  106 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR . EXCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 175


State 135

  110 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION TO_logicAnd . INCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 176


State 136

  112 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION TO_logicOr . LOGICAL_AND_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 150
    LOGICAL_AND_EXPRESSION     go to state 177


State 137

  108 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark . EXPRESSION TP_colon CONDITIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 178
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 138

   43 PARAMETER_LIST: PARAMETER_DECLARATION TP_comma PARAMETER_LIST .

    $default  reduce using rule 43 (PARAMETER_LIST)


State 139

   74 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 74 (POSTFIX_EXPRESSION)


State 140

   73 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 179


State 141

   82 CAST_EXPRESSION: UNARY_EXPRESSION .
  114 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    TO_equal       shift, and go to state 107
    TO_OrEqual     shift, and go to state 108
    TO_exOrEqual   shift, and go to state 109
    TO_andEqual    shift, and go to state 110
    TO_rightEqual  shift, and go to state 111
    TO_leftEqual   shift, and go to state 112
    TO_minusEqual  shift, and go to state 113
    TO_plusEqual   shift, and go to state 114
    TO_divEqual    shift, and go to state 115
    TO_multEqual   shift, and go to state 116
    TO_modEqual    shift, and go to state 117

    $default  reduce using rule 82 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 118


State 142

   83 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 83 (MULTIPLICATIVE_EXPRESSION)


State 143

   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   85                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   86                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   87 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 119
    TO_asterix  shift, and go to state 120
    TO_mod      shift, and go to state 121

    $default  reduce using rule 87 (ADDITIVE_EXPRESSION)


State 144

   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   90 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 122
    TO_minus  shift, and go to state 123

    $default  reduce using rule 90 (SHIFT_EXPRESSION)


State 145

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   93 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    $default  reduce using rule 93 (RELATIONAL_EXPRESSION)


State 146

   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   95                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   96                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   97                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   98 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 126
    TO_moreThan         shift, and go to state 127
    TO_lessThanOrEqual  shift, and go to state 128
    TO_moreThanOrEqual  shift, and go to state 129

    $default  reduce using rule 98 (EQUALITY_EXPRESSION)


State 147

   99 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . TO_equalTo RELATIONAL_EXPRESSION
  100                    | EQUALITY_EXPRESSION . TO_notEqualTo RELATIONAL_EXPRESSION
  101 AND_EXPRESSION: EQUALITY_EXPRESSION .

    TO_equalTo     shift, and go to state 130
    TO_notEqualTo  shift, and go to state 131

    $default  reduce using rule 101 (AND_EXPRESSION)


State 148

  102 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  103 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 132

    $default  reduce using rule 103 (EXCLUSIVE_OR_EXPRESSION)


State 149

  104 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  105 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 133

    $default  reduce using rule 105 (INCLUSIVE_OR_EXPRESSION)


State 150

  106 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  109 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 134

    $default  reduce using rule 109 (LOGICAL_AND_EXPRESSION)


State 151

   75 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .
   76                         | ASSIGNMENT_EXPRESSION . TP_comma ARGUMENT_EXPRESSION_LIST

    TP_comma  shift, and go to state 180

    $default  reduce using rule 75 (ARGUMENT_EXPRESSION_LIST)


State 152

   70 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 70 (PRIMARY_EXPRESSION)


State 153

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while . T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon

    T_LBRACKET  shift, and go to state 181


State 154

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION . TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    TP_semiColon  shift, and go to state 182


State 155

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT TK_else STATEMENT

    T_RBRACKET  shift, and go to state 183


State 156

   28 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 28 (JUMP_STATEMENT)


State 157

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION . T_RBRACKET STATEMENT

    T_RBRACKET  shift, and go to state 184


State 158

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 12 (COMPOUND_STATEMENT)


State 159

  114 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 114 (ASSIGNMENT_EXPRESSION)


State 160

   85 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION .

    $default  reduce using rule 85 (MULTIPLICATIVE_EXPRESSION)


State 161

   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION .

    $default  reduce using rule 84 (MULTIPLICATIVE_EXPRESSION)


State 162

   86 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION .

    $default  reduce using rule 86 (MULTIPLICATIVE_EXPRESSION)


State 163

   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   85                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   86                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 119
    TO_asterix  shift, and go to state 120
    TO_mod      shift, and go to state 121

    $default  reduce using rule 88 (ADDITIVE_EXPRESSION)


State 164

   84 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   85                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   86                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   89 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 119
    TO_asterix  shift, and go to state 120
    TO_mod      shift, and go to state 121

    $default  reduce using rule 89 (ADDITIVE_EXPRESSION)


State 165

   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseLeft ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 122
    TO_minus  shift, and go to state 123

    $default  reduce using rule 91 (SHIFT_EXPRESSION)


State 166

   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   92 SHIFT_EXPRESSION: SHIFT_EXPRESSION TO_bitwiseRight ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 122
    TO_minus  shift, and go to state 123

    $default  reduce using rule 92 (SHIFT_EXPRESSION)


State 167

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    $default  reduce using rule 94 (RELATIONAL_EXPRESSION)


State 168

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   95 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThan SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    $default  reduce using rule 95 (RELATIONAL_EXPRESSION)


State 169

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   96 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_lessThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    $default  reduce using rule 96 (RELATIONAL_EXPRESSION)


State 170

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . TO_bitwiseLeft ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . TO_bitwiseRight ADDITIVE_EXPRESSION
   97 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION TO_moreThanOrEqual SHIFT_EXPRESSION .

    TO_bitwiseLeft   shift, and go to state 124
    TO_bitwiseRight  shift, and go to state 125

    $default  reduce using rule 97 (RELATIONAL_EXPRESSION)


State 171

   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   95                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   96                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   97                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
   99 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_equalTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 126
    TO_moreThan         shift, and go to state 127
    TO_lessThanOrEqual  shift, and go to state 128
    TO_moreThanOrEqual  shift, and go to state 129

    $default  reduce using rule 99 (EQUALITY_EXPRESSION)


State 172

   94 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . TO_lessThan SHIFT_EXPRESSION
   95                      | RELATIONAL_EXPRESSION . TO_moreThan SHIFT_EXPRESSION
   96                      | RELATIONAL_EXPRESSION . TO_lessThanOrEqual SHIFT_EXPRESSION
   97                      | RELATIONAL_EXPRESSION . TO_moreThanOrEqual SHIFT_EXPRESSION
  100 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION TO_notEqualTo RELATIONAL_EXPRESSION .

    TO_lessThan         shift, and go to state 126
    TO_moreThan         shift, and go to state 127
    TO_lessThanOrEqual  shift, and go to state 128
    TO_moreThanOrEqual  shift, and go to state 129

    $default  reduce using rule 100 (EQUALITY_EXPRESSION)


State 173

   88 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   89                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
  102 AND_EXPRESSION: AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 122
    TO_minus  shift, and go to state 123

    $default  reduce using rule 102 (AND_EXPRESSION)


State 174

  102 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
  104 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION .

    TO_ampersand  shift, and go to state 132

    $default  reduce using rule 104 (EXCLUSIVE_OR_EXPRESSION)


State 175

  104 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
  106 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 133

    $default  reduce using rule 106 (INCLUSIVE_OR_EXPRESSION)


State 176

  106 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
  110 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION TO_logicAnd INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 134

    $default  reduce using rule 110 (LOGICAL_AND_EXPRESSION)


State 177

  110 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . TO_logicAnd INCLUSIVE_OR_EXPRESSION
  112 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION TO_logicOr LOGICAL_AND_EXPRESSION .

    TO_logicAnd  shift, and go to state 135

    $default  reduce using rule 112 (LOGICAL_OR_EXPRESSION)


State 178

  108 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION . TP_colon CONDITIONAL_EXPRESSION

    TP_colon  shift, and go to state 185


State 179

   73 POSTFIX_EXPRESSION: T_IDENTIFIER T_LBRACKET ARGUMENT_EXPRESSION_LIST T_RBRACKET .

    $default  reduce using rule 73 (POSTFIX_EXPRESSION)


State 180

   76 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma . ARGUMENT_EXPRESSION_LIST

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    ARGUMENT_EXPRESSION_LIST   go to state 186
    UNARY_EXPRESSION           go to state 141
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 150
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 151


State 181

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET . EXPRESSION T_RBRACKET TP_semiColon

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 187
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 182

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon . EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 188
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 183

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT TK_else STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 189
    COMPOUND_STATEMENT         go to state 56
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 184

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 190
    COMPOUND_STATEMENT         go to state 56
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 185

  108 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon . CONDITIONAL_EXPRESSION

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    PRIMARY_EXPRESSION         go to state 93
    POSTFIX_EXPRESSION         go to state 94
    UNARY_EXPRESSION           go to state 95
    CAST_EXPRESSION            go to state 142
    MULTIPLICATIVE_EXPRESSION  go to state 143
    ADDITIVE_EXPRESSION        go to state 144
    SHIFT_EXPRESSION           go to state 145
    RELATIONAL_EXPRESSION      go to state 146
    EQUALITY_EXPRESSION        go to state 147
    AND_EXPRESSION             go to state 148
    EXCLUSIVE_OR_EXPRESSION    go to state 149
    INCLUSIVE_OR_EXPRESSION    go to state 150
    CONDITIONAL_EXPRESSION     go to state 191
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80


State 186

   76 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION TP_comma ARGUMENT_EXPRESSION_LIST .

    $default  reduce using rule 76 (ARGUMENT_EXPRESSION_LIST)


State 187

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION . T_RBRACKET TP_semiColon

    T_RBRACKET  shift, and go to state 192


State 188

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION . TP_semiColon EXPRESSION T_RBRACKET STATEMENT

    TP_semiColon  shift, and go to state 193


State 189

   22 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT .
   23                    | TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT . TK_else STATEMENT

    TK_else  shift, and go to state 194

    TK_else   [reduce using rule 22 (SELECTION_STATEMENT)]
    $default  reduce using rule 22 (SELECTION_STATEMENT)


State 190

   24 ITERATION_STATEMENT: TK_while T_LBRACKET EXPRESSION T_RBRACKET STATEMENT .

    $default  reduce using rule 24 (ITERATION_STATEMENT)


State 191

  108 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TO_questionMark EXPRESSION TP_colon CONDITIONAL_EXPRESSION .

    $default  reduce using rule 108 (CONDITIONAL_EXPRESSION)


State 192

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET . TP_semiColon

    TP_semiColon  shift, and go to state 195


State 193

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon . EXPRESSION T_RBRACKET STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACKET     shift, and go to state 43
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TC_integer     shift, and go to state 54

    EXPRESSION                 go to state 196
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 194

   23 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 197
    COMPOUND_STATEMENT         go to state 56
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 195

   25 ITERATION_STATEMENT: TK_do STATEMENT TK_while T_LBRACKET EXPRESSION T_RBRACKET TP_semiColon .

    $default  reduce using rule 25 (ITERATION_STATEMENT)


State 196

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION . T_RBRACKET STATEMENT

    T_RBRACKET  shift, and go to state 198


State 197

   23 SELECTION_STATEMENT: TK_if T_LBRACKET EXPRESSION T_RBRACKET STATEMENT TK_else STATEMENT .

    $default  reduce using rule 23 (SELECTION_STATEMENT)


State 198

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET . STATEMENT

    T_IDENTIFIER   shift, and go to state 41
    T_LBRACE       shift, and go to state 33
    T_LBRACKET     shift, and go to state 43
    TK_do          shift, and go to state 44
    TK_for         shift, and go to state 45
    TK_if          shift, and go to state 46
    TK_return      shift, and go to state 47
    TK_while       shift, and go to state 48
    TO_not         shift, and go to state 49
    TO_bitwiseNot  shift, and go to state 50
    TO_plus        shift, and go to state 51
    TO_minus       shift, and go to state 52
    TP_semiColon   shift, and go to state 53
    TC_integer     shift, and go to state 54

    STATEMENT                  go to state 199
    COMPOUND_STATEMENT         go to state 56
    EXPRESSION_STATEMENT       go to state 59
    SELECTION_STATEMENT        go to state 60
    ITERATION_STATEMENT        go to state 61
    JUMP_STATEMENT             go to state 62
    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 66
    POSTFIX_EXPRESSION         go to state 67
    UNARY_EXPRESSION           go to state 68
    CAST_EXPRESSION            go to state 69
    MULTIPLICATIVE_EXPRESSION  go to state 70
    ADDITIVE_EXPRESSION        go to state 71
    SHIFT_EXPRESSION           go to state 72
    RELATIONAL_EXPRESSION      go to state 73
    EQUALITY_EXPRESSION        go to state 74
    AND_EXPRESSION             go to state 75
    EXCLUSIVE_OR_EXPRESSION    go to state 76
    INCLUSIVE_OR_EXPRESSION    go to state 77
    CONDITIONAL_EXPRESSION     go to state 78
    LOGICAL_AND_EXPRESSION     go to state 79
    LOGICAL_OR_EXPRESSION      go to state 80
    ASSIGNMENT_EXPRESSION      go to state 81


State 199

   26 ITERATION_STATEMENT: TK_for T_LBRACKET EXPRESSION TP_semiColon EXPRESSION TP_semiColon EXPRESSION T_RBRACKET STATEMENT .

    $default  reduce using rule 26 (ITERATION_STATEMENT)
