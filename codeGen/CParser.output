Nonterminals useless in grammar

   POSTFIX_EXPRESSION
   UNARY_EXPRESSION
   CAST_EXPRESSION
   MULTIPLICATIVE_EXPRESSION
   ADDITIVE_EXPRESSION


Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_continue
   TK_default
   TK_do
   TK_else
   TK_enum
   TK_extern
   TK_for
   TK_goto
   TK_if
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_divide
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_ampersand
   TO_logicAnd
   TO_asterix
   TO_mod
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThan
   TO_moreThan
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_equalTo
   TO_notEqualTo
   TO_plus
   TO_minus
   TO_increment
   TO_decrement
   TO_equal
   TP_comma
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr
   TO_OrEqual
   TO_exOrEqual
   TO_andEqual
   TO_rightEqual
   TO_leftEqual
   TO_minusEqual
   TO_plusEqual
   TO_divEqual
   TO_multEqual
   TO_OR
   TO_logicOr
   TO_exclussiveOr
   TO_questionMark
   TO_modEqual


Rules useless in grammar

   44 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION

   45 UNARY_EXPRESSION: POSTFIX_EXPRESSION

   46 CAST_EXPRESSION: UNARY_EXPRESSION

   47 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   48                          | MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION
   49                          | MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION
   50                          | MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION

   51 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   52                    | ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION
   53                    | ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    2                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    5 STATEMENT: COMPOUND_STATEMENT
    6          | JUMP_STATEMENT

    7 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE
    8                   | T_LBRACE STATEMENT_LIST T_RBRACE
    9                   | T_LBRACE DECLARATION_LIST T_RBRACE
   10                   | T_LBRACE T_RBRACE

   11 DECLARATION_LIST: DECLARATION
   12                 | DECLARATION_LIST DECLARATION

   13 STATEMENT_LIST: STATEMENT
   14               | STATEMENT_LIST STATEMENT

   15 JUMP_STATEMENT: TK_return TP_semiColon
   16               | TK_return EXPRESSION TP_semiColon

   17 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon

   18 DECLARATION_SPECIFIERS: TYPE_SPECIFIER
   19                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS
   20                       | TYPE_QUALIFIER
   21                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS

   22 INIT_DECLARATION_LIST: INIT_DECLARATOR

   23 INIT_DECLARATOR: DECLARATOR

   24 DECLARATOR: DIRECT_DECLARATOR

   25 DIRECT_DECLARATOR: T_IDENTIFIER
   26                  | T_LBRACKET DECLARATOR T_RBRACKET
   27                  | DIRECT_DECLARATOR T_LBRACKET T_RBRACKET

   28 TYPE_SPECIFIER: TK_void
   29               | TK_char
   30               | TK_short
   31               | TK_int
   32               | TK_long
   33               | TK_float
   34               | TK_double
   35               | TK_signed
   36               | TK_unsigned

   37 TYPE_QUALIFIER: TK_const
   38               | TK_volatile

   39 EXPRESSION: PRIMARY_EXPRESSION

   40 PRIMARY_EXPRESSION: CONSTANT
   41                   | T_LBRACKET EXPRESSION T_RBRACKET
   42                   | T_IDENTIFIER

   43 CONSTANT: TC_integer


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 25 42
T_LBRACE (259) 7 8 9 10
T_RBRACE (260) 7 8 9 10
T_LBRACKET (261) 26 27 41
T_RBRACKET (262) 26 27 41
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 29
TK_const (269) 37
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273) 34
TK_else (274)
TK_enum (275)
TK_extern (276)
TK_float (277) 33
TK_for (278)
TK_goto (279)
TK_if (280)
TK_int (281) 31
TK_long (282) 32
TK_register (283)
TK_return (284) 15 16
TK_short (285) 30
TK_signed (286) 35
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 36
TK_void (294) 28
TK_volatile (295) 38
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300)
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304)
TO_logicAnd (305)
TO_asterix (306)
TO_mod (307)
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310)
TO_moreThan (311)
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314)
TO_notEqualTo (315)
TO_plus (316)
TO_minus (317)
TO_increment (318)
TO_decrement (319)
TO_equal (320)
TP_comma (321)
TP_colon (322)
TP_semiColon (323) 15 16 17
TC_integer (324) 43
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334)
TO_exOrEqual (335)
TO_andEqual (336)
TO_rightEqual (337)
TO_leftEqual (338)
TO_minusEqual (339)
TO_plusEqual (340)
TO_divEqual (341)
TO_multEqual (342)
TO_OR (343)
TO_logicOr (344)
TO_exclussiveOr (345)
TO_questionMark (346)
TO_modEqual (347)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
TRANSLATION_UNIT (94)
    on left: 1 2, on right: 0 2
EXTERNAL_DECLARATION (95)
    on left: 3, on right: 1 2
FUNCTION_DEFINITION (96)
    on left: 4, on right: 3
STATEMENT (97)
    on left: 5 6, on right: 13 14
COMPOUND_STATEMENT (98)
    on left: 7 8 9 10, on right: 4 5
DECLARATION_LIST (99)
    on left: 11 12, on right: 7 9 12
STATEMENT_LIST (100)
    on left: 13 14, on right: 7 8 14
JUMP_STATEMENT (101)
    on left: 15 16, on right: 6
DECLARATION (102)
    on left: 17, on right: 11 12
DECLARATION_SPECIFIERS (103)
    on left: 18 19 20 21, on right: 4 17 19 21
INIT_DECLARATION_LIST (104)
    on left: 22, on right: 17
INIT_DECLARATOR (105)
    on left: 23, on right: 22
DECLARATOR (106)
    on left: 24, on right: 4 23 26
DIRECT_DECLARATOR (107)
    on left: 25 26 27, on right: 24 27
TYPE_SPECIFIER (108)
    on left: 28 29 30 31 32 33 34 35 36, on right: 18 19
TYPE_QUALIFIER (109)
    on left: 37 38, on right: 20 21
EXPRESSION (110)
    on left: 39, on right: 16 41
PRIMARY_EXPRESSION (111)
    on left: 40 41 42, on right: 39
CONSTANT (112)
    on left: 43, on right: 40


State 0

    0 $accept: . TRANSLATION_UNIT $end

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    TRANSLATION_UNIT        go to state 12
    EXTERNAL_DECLARATION    go to state 13
    FUNCTION_DEFINITION     go to state 14
    DECLARATION_SPECIFIERS  go to state 15
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 1

   29 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 29 (TYPE_SPECIFIER)


State 2

   37 TYPE_QUALIFIER: TK_const .

    $default  reduce using rule 37 (TYPE_QUALIFIER)


State 3

   34 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 34 (TYPE_SPECIFIER)


State 4

   33 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 33 (TYPE_SPECIFIER)


State 5

   31 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 31 (TYPE_SPECIFIER)


State 6

   32 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 32 (TYPE_SPECIFIER)


State 7

   30 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 30 (TYPE_SPECIFIER)


State 8

   35 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 35 (TYPE_SPECIFIER)


State 9

   36 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 36 (TYPE_SPECIFIER)


State 10

   28 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 28 (TYPE_SPECIFIER)


State 11

   38 TYPE_QUALIFIER: TK_volatile .

    $default  reduce using rule 38 (TYPE_QUALIFIER)


State 12

    0 $accept: TRANSLATION_UNIT . $end
    2 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end         shift, and go to state 18
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    EXTERNAL_DECLARATION    go to state 19
    FUNCTION_DEFINITION     go to state 14
    DECLARATION_SPECIFIERS  go to state 15
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 13

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 1 (TRANSLATION_UNIT)


State 14

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 15

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT

    T_IDENTIFIER  shift, and go to state 20
    T_LBRACKET    shift, and go to state 21

    DECLARATOR         go to state 22
    DIRECT_DECLARATOR  go to state 23


State 16

   18 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .
   19                       | TYPE_SPECIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 18 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 24
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 17

   20 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .
   21                       | TYPE_QUALIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 20 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 25
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 18

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 19

    2 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 20

   25 DIRECT_DECLARATOR: T_IDENTIFIER .

    $default  reduce using rule 25 (DIRECT_DECLARATOR)


State 21

   26 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 20
    T_LBRACKET    shift, and go to state 21

    DECLARATOR         go to state 26
    DIRECT_DECLARATOR  go to state 23


State 22

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT

    T_LBRACE  shift, and go to state 27

    COMPOUND_STATEMENT  go to state 28


State 23

   24 DECLARATOR: DIRECT_DECLARATOR .
   27 DIRECT_DECLARATOR: DIRECT_DECLARATOR . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 29

    $default  reduce using rule 24 (DECLARATOR)


State 24

   19 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 19 (DECLARATION_SPECIFIERS)


State 25

   21 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 21 (DECLARATION_SPECIFIERS)


State 26

   26 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 30


State 27

    7 COMPOUND_STATEMENT: T_LBRACE . DECLARATION_LIST STATEMENT_LIST T_RBRACE
    8                   | T_LBRACE . STATEMENT_LIST T_RBRACE
    9                   | T_LBRACE . DECLARATION_LIST T_RBRACE
   10                   | T_LBRACE . T_RBRACE

    T_LBRACE     shift, and go to state 27
    T_RBRACE     shift, and go to state 31
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_return    shift, and go to state 32
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    STATEMENT               go to state 33
    COMPOUND_STATEMENT      go to state 34
    DECLARATION_LIST        go to state 35
    STATEMENT_LIST          go to state 36
    JUMP_STATEMENT          go to state 37
    DECLARATION             go to state 38
    DECLARATION_SPECIFIERS  go to state 39
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 28

    4 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 4 (FUNCTION_DEFINITION)


State 29

   27 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET . T_RBRACKET

    T_RBRACKET  shift, and go to state 40


State 30

   26 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 26 (DIRECT_DECLARATOR)


State 31

   10 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 10 (COMPOUND_STATEMENT)


State 32

   15 JUMP_STATEMENT: TK_return . TP_semiColon
   16               | TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 42
    TP_semiColon  shift, and go to state 43
    TC_integer    shift, and go to state 44

    EXPRESSION          go to state 45
    PRIMARY_EXPRESSION  go to state 46
    CONSTANT            go to state 47


State 33

   13 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 13 (STATEMENT_LIST)


State 34

    5 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 5 (STATEMENT)


State 35

    7 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST . STATEMENT_LIST T_RBRACE
    9                   | T_LBRACE DECLARATION_LIST . T_RBRACE
   12 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    T_LBRACE     shift, and go to state 27
    T_RBRACE     shift, and go to state 48
    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_return    shift, and go to state 32
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    STATEMENT               go to state 33
    COMPOUND_STATEMENT      go to state 34
    STATEMENT_LIST          go to state 49
    JUMP_STATEMENT          go to state 37
    DECLARATION             go to state 50
    DECLARATION_SPECIFIERS  go to state 39
    TYPE_SPECIFIER          go to state 16
    TYPE_QUALIFIER          go to state 17


State 36

    8 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE
   14 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_LBRACE   shift, and go to state 27
    T_RBRACE   shift, and go to state 51
    TK_return  shift, and go to state 32

    STATEMENT           go to state 52
    COMPOUND_STATEMENT  go to state 34
    JUMP_STATEMENT      go to state 37


State 37

    6 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


State 38

   11 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 11 (DECLARATION_LIST)


State 39

   17 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 20
    T_LBRACKET    shift, and go to state 21

    INIT_DECLARATION_LIST  go to state 53
    INIT_DECLARATOR        go to state 54
    DECLARATOR             go to state 55
    DIRECT_DECLARATOR      go to state 23


State 40

   27 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET T_RBRACKET .

    $default  reduce using rule 27 (DIRECT_DECLARATOR)


State 41

   42 PRIMARY_EXPRESSION: T_IDENTIFIER .

    $default  reduce using rule 42 (PRIMARY_EXPRESSION)


State 42

   41 PRIMARY_EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER  shift, and go to state 41
    T_LBRACKET    shift, and go to state 42
    TC_integer    shift, and go to state 44

    EXPRESSION          go to state 56
    PRIMARY_EXPRESSION  go to state 46
    CONSTANT            go to state 47


State 43

   15 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 15 (JUMP_STATEMENT)


State 44

   43 CONSTANT: TC_integer .

    $default  reduce using rule 43 (CONSTANT)


State 45

   16 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 57


State 46

   39 EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 39 (EXPRESSION)


State 47

   40 PRIMARY_EXPRESSION: CONSTANT .

    $default  reduce using rule 40 (PRIMARY_EXPRESSION)


State 48

    9 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST T_RBRACE .

    $default  reduce using rule 9 (COMPOUND_STATEMENT)


State 49

    7 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST . T_RBRACE
   14 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_LBRACE   shift, and go to state 27
    T_RBRACE   shift, and go to state 58
    TK_return  shift, and go to state 32

    STATEMENT           go to state 52
    COMPOUND_STATEMENT  go to state 34
    JUMP_STATEMENT      go to state 37


State 50

   12 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 12 (DECLARATION_LIST)


State 51

    8 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 8 (COMPOUND_STATEMENT)


State 52

   14 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 14 (STATEMENT_LIST)


State 53

   17 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST . TP_semiColon

    TP_semiColon  shift, and go to state 59


State 54

   22 INIT_DECLARATION_LIST: INIT_DECLARATOR .

    $default  reduce using rule 22 (INIT_DECLARATION_LIST)


State 55

   23 INIT_DECLARATOR: DECLARATOR .

    $default  reduce using rule 23 (INIT_DECLARATOR)


State 56

   41 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 60


State 57

   16 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 16 (JUMP_STATEMENT)


State 58

    7 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 7 (COMPOUND_STATEMENT)


State 59

   17 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon .

    $default  reduce using rule 17 (DECLARATION)


State 60

   41 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 41 (PRIMARY_EXPRESSION)
