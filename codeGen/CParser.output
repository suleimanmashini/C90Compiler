Terminals unused in grammar

   T_LINDEX
   T_RINDEX
   TK_auto
   TK_break
   TK_case
   TK_continue
   TK_default
   TK_do
   TK_else
   TK_enum
   TK_extern
   TK_for
   TK_goto
   TK_if
   TK_register
   TK_sizeof
   TK_static
   TK_struct
   TK_switch
   TK_typedef
   TK_union
   TK_while
   T_StringLiteral
   T_LStringLiteral
   T_dot
   TO_memberAccess
   TO_not
   TO_bitwiseNot
   TO_logicAnd
   TO_bitwiseLeft
   TO_bitwiseRight
   TO_lessThan
   TO_moreThan
   TO_lessThanOrEqual
   TO_moreThanOrEqual
   TO_equalTo
   TO_notEqualTo
   TO_increment
   TO_decrement
   TP_comma
   TP_colon
   TC_unsigned
   TC_long
   TC_longLong
   TC_float
   TC_longDouble
   TC_true
   TC_false
   TC_NULL
   TC_nullptr
   TO_logicOr
   TO_questionMark


State 51 conflicts: 2 reduce/reduce
State 55 conflicts: 2 reduce/reduce
State 56 conflicts: 2 reduce/reduce


Grammar

    0 $accept: START $end

    1 START: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION
    3                 | DECLARATION
    4                 | TRANSLATION_UNIT FUNCTION_DEFINITION
    5                 | TRANSLATION_UNIT DECLARATION

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT

    7 STATEMENT: COMPOUND_STATEMENT
    8          | JUMP_STATEMENT
    9          | EXPRESSION_STATEMENT

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE
   11                   | T_LBRACE STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE DECLARATION_LIST T_RBRACE
   13                   | T_LBRACE T_RBRACE

   14 DECLARATION_LIST: DECLARATION
   15                 | DECLARATION_LIST DECLARATION

   16 STATEMENT_LIST: STATEMENT
   17               | STATEMENT_LIST STATEMENT

   18 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon
   19                     | TP_semiColon

   20 JUMP_STATEMENT: TK_return TP_semiColon
   21               | TK_return EXPRESSION TP_semiColon

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon

   23 DECLARATION_SPECIFIERS: TYPE_SPECIFIER
   24                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS
   25                       | TYPE_QUALIFIER
   26                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS

   27 INIT_DECLARATION_LIST: INIT_DECLARATOR

   28 INIT_DECLARATOR: DECLARATOR

   29 DECLARATOR: DIRECT_DECLARATOR

   30 DIRECT_DECLARATOR: T_IDENTIFIER
   31                  | T_LBRACKET DECLARATOR T_RBRACKET
   32                  | DIRECT_DECLARATOR T_LBRACKET T_RBRACKET

   33 TYPE_SPECIFIER: TK_void
   34               | TK_char
   35               | TK_short
   36               | TK_int
   37               | TK_long
   38               | TK_float
   39               | TK_double
   40               | TK_signed
   41               | TK_unsigned

   42 TYPE_QUALIFIER: TK_const
   43               | TK_volatile

   44 EXPRESSION: PRIMARY_EXPRESSION
   45           | MULTIPLICATIVE_EXPRESSION
   46           | ADDITIVE_EXPRESSION
   47           | ASSIGNMENT_EXPRESSION

   48 PRIMARY_EXPRESSION: TC_integer
   49                   | T_LBRACKET EXPRESSION T_RBRACKET
   50                   | T_IDENTIFIER

   51 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION

   52 UNARY_EXPRESSION: POSTFIX_EXPRESSION

   53 CAST_EXPRESSION: UNARY_EXPRESSION

   54 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   55                          | MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION
   56                          | MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION
   57                          | MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION

   58 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   59                    | ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION
   60                    | ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION

   61 AND_EXPRESSION: ADDITIVE_EXPRESSION
   62               | AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION

   63 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   64                        | EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION

   65 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   66                        | INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION

   67 CONDITIONAL_EXPRESSION: INCLUSIVE_OR_EXPRESSION

   68 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   69                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR CONDITIONAL_EXPRESSION

   70 ASSIGNMENT_OPERATOR: TO_equal
   71                    | TO_multEqual
   72                    | TO_divEqual
   73                    | TO_modEqual
   74                    | TO_plusEqual
   75                    | TO_minusEqual
   76                    | TO_rightEqual
   77                    | TO_leftEqual
   78                    | TO_andEqual
   79                    | TO_exOrEqual
   80                    | TO_OrEqual


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 30 50
T_LBRACE (259) 10 11 12 13
T_RBRACE (260) 10 11 12 13
T_LBRACKET (261) 31 32 49
T_RBRACKET (262) 31 32 49
T_LINDEX (263)
T_RINDEX (264)
TK_auto (265)
TK_break (266)
TK_case (267)
TK_char (268) 34
TK_const (269) 42
TK_continue (270)
TK_default (271)
TK_do (272)
TK_double (273) 39
TK_else (274)
TK_enum (275)
TK_extern (276)
TK_float (277) 38
TK_for (278)
TK_goto (279)
TK_if (280)
TK_int (281) 36
TK_long (282) 37
TK_register (283)
TK_return (284) 20 21
TK_short (285) 35
TK_signed (286) 40
TK_sizeof (287)
TK_static (288)
TK_struct (289)
TK_switch (290)
TK_typedef (291)
TK_union (292)
TK_unsigned (293) 41
TK_void (294) 33
TK_volatile (295) 43
TK_while (296)
T_StringLiteral (297)
T_LStringLiteral (298)
T_dot (299)
TO_divide (300) 56
TO_memberAccess (301)
TO_not (302)
TO_bitwiseNot (303)
TO_ampersand (304) 62
TO_logicAnd (305)
TO_asterix (306) 55
TO_mod (307) 57
TO_bitwiseLeft (308)
TO_bitwiseRight (309)
TO_lessThan (310)
TO_moreThan (311)
TO_lessThanOrEqual (312)
TO_moreThanOrEqual (313)
TO_equalTo (314)
TO_notEqualTo (315)
TO_plus (316) 59
TO_minus (317) 60
TO_increment (318)
TO_decrement (319)
TO_equal (320) 70
TP_comma (321)
TP_colon (322)
TP_semiColon (323) 18 19 20 21 22
TC_integer (324) 48
TC_unsigned (325)
TC_long (326)
TC_longLong (327)
TC_float (328)
TC_longDouble (329)
TC_true (330)
TC_false (331)
TC_NULL (332)
TC_nullptr (333)
TO_OrEqual (334) 80
TO_exOrEqual (335) 79
TO_andEqual (336) 78
TO_rightEqual (337) 76
TO_leftEqual (338) 77
TO_minusEqual (339) 75
TO_plusEqual (340) 74
TO_divEqual (341) 72
TO_multEqual (342) 71
TO_OR (343) 66
TO_logicOr (344)
TO_exclussiveOr (345) 64
TO_questionMark (346)
TO_modEqual (347) 73


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
START (94)
    on left: 1, on right: 0
TRANSLATION_UNIT (95)
    on left: 2 3 4 5, on right: 1 4 5
FUNCTION_DEFINITION (96)
    on left: 6, on right: 2 4
STATEMENT (97)
    on left: 7 8 9, on right: 16 17
COMPOUND_STATEMENT (98)
    on left: 10 11 12 13, on right: 6 7
DECLARATION_LIST (99)
    on left: 14 15, on right: 10 12 15
STATEMENT_LIST (100)
    on left: 16 17, on right: 10 11 17
EXPRESSION_STATEMENT (101)
    on left: 18 19, on right: 9
JUMP_STATEMENT (102)
    on left: 20 21, on right: 8
DECLARATION (103)
    on left: 22, on right: 3 5 14 15
DECLARATION_SPECIFIERS (104)
    on left: 23 24 25 26, on right: 6 22 24 26
INIT_DECLARATION_LIST (105)
    on left: 27, on right: 22
INIT_DECLARATOR (106)
    on left: 28, on right: 27
DECLARATOR (107)
    on left: 29, on right: 6 28 31
DIRECT_DECLARATOR (108)
    on left: 30 31 32, on right: 29 32
TYPE_SPECIFIER (109)
    on left: 33 34 35 36 37 38 39 40 41, on right: 23 24
TYPE_QUALIFIER (110)
    on left: 42 43, on right: 25 26
EXPRESSION (111)
    on left: 44 45 46 47, on right: 18 21 49
PRIMARY_EXPRESSION (112)
    on left: 48 49 50, on right: 44 51
POSTFIX_EXPRESSION (113)
    on left: 51, on right: 52
UNARY_EXPRESSION (114)
    on left: 52, on right: 53 69
CAST_EXPRESSION (115)
    on left: 53, on right: 54 55 56 57
MULTIPLICATIVE_EXPRESSION (116)
    on left: 54 55 56 57, on right: 45 55 56 57 58 59 60
ADDITIVE_EXPRESSION (117)
    on left: 58 59 60, on right: 46 59 60 61 62
AND_EXPRESSION (118)
    on left: 61 62, on right: 62 63 64
EXCLUSIVE_OR_EXPRESSION (119)
    on left: 63 64, on right: 64 65 66
INCLUSIVE_OR_EXPRESSION (120)
    on left: 65 66, on right: 66 67
CONDITIONAL_EXPRESSION (121)
    on left: 67, on right: 68 69
ASSIGNMENT_EXPRESSION (122)
    on left: 68 69, on right: 47
ASSIGNMENT_OPERATOR (123)
    on left: 70 71 72 73 74 75 76 77 78 79 80, on right: 69


State 0

    0 $accept: . START $end

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    START                   go to state 12
    TRANSLATION_UNIT        go to state 13
    FUNCTION_DEFINITION     go to state 14
    DECLARATION             go to state 15
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 1

   34 TYPE_SPECIFIER: TK_char .

    $default  reduce using rule 34 (TYPE_SPECIFIER)


State 2

   42 TYPE_QUALIFIER: TK_const .

    $default  reduce using rule 42 (TYPE_QUALIFIER)


State 3

   39 TYPE_SPECIFIER: TK_double .

    $default  reduce using rule 39 (TYPE_SPECIFIER)


State 4

   38 TYPE_SPECIFIER: TK_float .

    $default  reduce using rule 38 (TYPE_SPECIFIER)


State 5

   36 TYPE_SPECIFIER: TK_int .

    $default  reduce using rule 36 (TYPE_SPECIFIER)


State 6

   37 TYPE_SPECIFIER: TK_long .

    $default  reduce using rule 37 (TYPE_SPECIFIER)


State 7

   35 TYPE_SPECIFIER: TK_short .

    $default  reduce using rule 35 (TYPE_SPECIFIER)


State 8

   40 TYPE_SPECIFIER: TK_signed .

    $default  reduce using rule 40 (TYPE_SPECIFIER)


State 9

   41 TYPE_SPECIFIER: TK_unsigned .

    $default  reduce using rule 41 (TYPE_SPECIFIER)


State 10

   33 TYPE_SPECIFIER: TK_void .

    $default  reduce using rule 33 (TYPE_SPECIFIER)


State 11

   43 TYPE_QUALIFIER: TK_volatile .

    $default  reduce using rule 43 (TYPE_QUALIFIER)


State 12

    0 $accept: START . $end

    $end  shift, and go to state 19


State 13

    1 START: TRANSLATION_UNIT .
    4 TRANSLATION_UNIT: TRANSLATION_UNIT . FUNCTION_DEFINITION
    5                 | TRANSLATION_UNIT . DECLARATION

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 1 (START)

    FUNCTION_DEFINITION     go to state 20
    DECLARATION             go to state 21
    DECLARATION_SPECIFIERS  go to state 16
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 14

    2 TRANSLATION_UNIT: FUNCTION_DEFINITION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 15

    3 TRANSLATION_UNIT: DECLARATION .

    $default  reduce using rule 3 (TRANSLATION_UNIT)


State 16

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
   22 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 26
    DIRECT_DECLARATOR      go to state 27


State 17

   23 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .
   24                       | TYPE_SPECIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 23 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 28
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 18

   25 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .
   26                       | TYPE_QUALIFIER . DECLARATION_SPECIFIERS

    TK_char      shift, and go to state 1
    TK_const     shift, and go to state 2
    TK_double    shift, and go to state 3
    TK_float     shift, and go to state 4
    TK_int       shift, and go to state 5
    TK_long      shift, and go to state 6
    TK_short     shift, and go to state 7
    TK_signed    shift, and go to state 8
    TK_unsigned  shift, and go to state 9
    TK_void      shift, and go to state 10
    TK_volatile  shift, and go to state 11

    $default  reduce using rule 25 (DECLARATION_SPECIFIERS)

    DECLARATION_SPECIFIERS  go to state 29
    TYPE_SPECIFIER          go to state 17
    TYPE_QUALIFIER          go to state 18


State 19

    0 $accept: START $end .

    $default  accept


State 20

    4 TRANSLATION_UNIT: TRANSLATION_UNIT FUNCTION_DEFINITION .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 21

    5 TRANSLATION_UNIT: TRANSLATION_UNIT DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 22

   30 DIRECT_DECLARATOR: T_IDENTIFIER .

    $default  reduce using rule 30 (DIRECT_DECLARATOR)


State 23

   31 DIRECT_DECLARATOR: T_LBRACKET . DECLARATOR T_RBRACKET

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    DECLARATOR         go to state 30
    DIRECT_DECLARATOR  go to state 27


State 24

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST . TP_semiColon

    TP_semiColon  shift, and go to state 31


State 25

   27 INIT_DECLARATION_LIST: INIT_DECLARATOR .

    $default  reduce using rule 27 (INIT_DECLARATION_LIST)


State 26

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   28 INIT_DECLARATOR: DECLARATOR .

    T_LBRACE  shift, and go to state 32

    $default  reduce using rule 28 (INIT_DECLARATOR)

    COMPOUND_STATEMENT  go to state 33


State 27

   29 DECLARATOR: DIRECT_DECLARATOR .
   32 DIRECT_DECLARATOR: DIRECT_DECLARATOR . T_LBRACKET T_RBRACKET

    T_LBRACKET  shift, and go to state 34

    $default  reduce using rule 29 (DECLARATOR)


State 28

   24 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 24 (DECLARATION_SPECIFIERS)


State 29

   26 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS .

    $default  reduce using rule 26 (DECLARATION_SPECIFIERS)


State 30

   31 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR . T_RBRACKET

    T_RBRACKET  shift, and go to state 35


State 31

   22 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATION_LIST TP_semiColon .

    $default  reduce using rule 22 (DECLARATION)


State 32

   10 COMPOUND_STATEMENT: T_LBRACE . DECLARATION_LIST STATEMENT_LIST T_RBRACE
   11                   | T_LBRACE . STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE . DECLARATION_LIST T_RBRACE
   13                   | T_LBRACE . T_RBRACE

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACE      shift, and go to state 32
    T_RBRACE      shift, and go to state 37
    T_LBRACKET    shift, and go to state 38
    TK_char       shift, and go to state 1
    TK_const      shift, and go to state 2
    TK_double     shift, and go to state 3
    TK_float      shift, and go to state 4
    TK_int        shift, and go to state 5
    TK_long       shift, and go to state 6
    TK_return     shift, and go to state 39
    TK_short      shift, and go to state 7
    TK_signed     shift, and go to state 8
    TK_unsigned   shift, and go to state 9
    TK_void       shift, and go to state 10
    TK_volatile   shift, and go to state 11
    TP_semiColon  shift, and go to state 40
    TC_integer    shift, and go to state 41

    STATEMENT                  go to state 42
    COMPOUND_STATEMENT         go to state 43
    DECLARATION_LIST           go to state 44
    STATEMENT_LIST             go to state 45
    EXPRESSION_STATEMENT       go to state 46
    JUMP_STATEMENT             go to state 47
    DECLARATION                go to state 48
    DECLARATION_SPECIFIERS     go to state 49
    TYPE_SPECIFIER             go to state 17
    TYPE_QUALIFIER             go to state 18
    EXPRESSION                 go to state 50
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 33

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 6 (FUNCTION_DEFINITION)


State 34

   32 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET . T_RBRACKET

    T_RBRACKET  shift, and go to state 62


State 35

   31 DIRECT_DECLARATOR: T_LBRACKET DECLARATOR T_RBRACKET .

    $default  reduce using rule 31 (DIRECT_DECLARATOR)


State 36

   50 PRIMARY_EXPRESSION: T_IDENTIFIER .

    $default  reduce using rule 50 (PRIMARY_EXPRESSION)


State 37

   13 COMPOUND_STATEMENT: T_LBRACE T_RBRACE .

    $default  reduce using rule 13 (COMPOUND_STATEMENT)


State 38

   49 PRIMARY_EXPRESSION: T_LBRACKET . EXPRESSION T_RBRACKET

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    EXPRESSION                 go to state 63
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 39

   20 JUMP_STATEMENT: TK_return . TP_semiColon
   21               | TK_return . EXPRESSION TP_semiColon

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TP_semiColon  shift, and go to state 64
    TC_integer    shift, and go to state 41

    EXPRESSION                 go to state 65
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 40

   19 EXPRESSION_STATEMENT: TP_semiColon .

    $default  reduce using rule 19 (EXPRESSION_STATEMENT)


State 41

   48 PRIMARY_EXPRESSION: TC_integer .

    $default  reduce using rule 48 (PRIMARY_EXPRESSION)


State 42

   16 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 16 (STATEMENT_LIST)


State 43

    7 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 44

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST . STATEMENT_LIST T_RBRACE
   12                   | T_LBRACE DECLARATION_LIST . T_RBRACE
   15 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACE      shift, and go to state 32
    T_RBRACE      shift, and go to state 66
    T_LBRACKET    shift, and go to state 38
    TK_char       shift, and go to state 1
    TK_const      shift, and go to state 2
    TK_double     shift, and go to state 3
    TK_float      shift, and go to state 4
    TK_int        shift, and go to state 5
    TK_long       shift, and go to state 6
    TK_return     shift, and go to state 39
    TK_short      shift, and go to state 7
    TK_signed     shift, and go to state 8
    TK_unsigned   shift, and go to state 9
    TK_void       shift, and go to state 10
    TK_volatile   shift, and go to state 11
    TP_semiColon  shift, and go to state 40
    TC_integer    shift, and go to state 41

    STATEMENT                  go to state 42
    COMPOUND_STATEMENT         go to state 43
    STATEMENT_LIST             go to state 67
    EXPRESSION_STATEMENT       go to state 46
    JUMP_STATEMENT             go to state 47
    DECLARATION                go to state 68
    DECLARATION_SPECIFIERS     go to state 49
    TYPE_SPECIFIER             go to state 17
    TYPE_QUALIFIER             go to state 18
    EXPRESSION                 go to state 50
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 45

   11 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST . T_RBRACE
   17 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACE      shift, and go to state 32
    T_RBRACE      shift, and go to state 69
    T_LBRACKET    shift, and go to state 38
    TK_return     shift, and go to state 39
    TP_semiColon  shift, and go to state 40
    TC_integer    shift, and go to state 41

    STATEMENT                  go to state 70
    COMPOUND_STATEMENT         go to state 43
    EXPRESSION_STATEMENT       go to state 46
    JUMP_STATEMENT             go to state 47
    EXPRESSION                 go to state 50
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 46

    9 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 47

    8 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 48

   14 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 14 (DECLARATION_LIST)


State 49

   22 DECLARATION: DECLARATION_SPECIFIERS . INIT_DECLARATION_LIST TP_semiColon

    T_IDENTIFIER  shift, and go to state 22
    T_LBRACKET    shift, and go to state 23

    INIT_DECLARATION_LIST  go to state 24
    INIT_DECLARATOR        go to state 25
    DECLARATOR             go to state 71
    DIRECT_DECLARATOR      go to state 27


State 50

   18 EXPRESSION_STATEMENT: EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 72


State 51

   44 EXPRESSION: PRIMARY_EXPRESSION .
   51 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    T_RBRACKET    reduce using rule 44 (EXPRESSION)
    T_RBRACKET    [reduce using rule 51 (POSTFIX_EXPRESSION)]
    TP_semiColon  reduce using rule 44 (EXPRESSION)
    TP_semiColon  [reduce using rule 51 (POSTFIX_EXPRESSION)]
    $default      reduce using rule 51 (POSTFIX_EXPRESSION)


State 52

   52 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    $default  reduce using rule 52 (UNARY_EXPRESSION)


State 53

   53 CAST_EXPRESSION: UNARY_EXPRESSION .
   69 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR CONDITIONAL_EXPRESSION

    TO_equal       shift, and go to state 73
    TO_OrEqual     shift, and go to state 74
    TO_exOrEqual   shift, and go to state 75
    TO_andEqual    shift, and go to state 76
    TO_rightEqual  shift, and go to state 77
    TO_leftEqual   shift, and go to state 78
    TO_minusEqual  shift, and go to state 79
    TO_plusEqual   shift, and go to state 80
    TO_divEqual    shift, and go to state 81
    TO_multEqual   shift, and go to state 82
    TO_modEqual    shift, and go to state 83

    $default  reduce using rule 53 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 84


State 54

   54 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 54 (MULTIPLICATIVE_EXPRESSION)


State 55

   45 EXPRESSION: MULTIPLICATIVE_EXPRESSION .
   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   56                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   57                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   58 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 85
    TO_asterix  shift, and go to state 86
    TO_mod      shift, and go to state 87

    T_RBRACKET    reduce using rule 45 (EXPRESSION)
    T_RBRACKET    [reduce using rule 58 (ADDITIVE_EXPRESSION)]
    TP_semiColon  reduce using rule 45 (EXPRESSION)
    TP_semiColon  [reduce using rule 58 (ADDITIVE_EXPRESSION)]
    $default      reduce using rule 58 (ADDITIVE_EXPRESSION)


State 56

   46 EXPRESSION: ADDITIVE_EXPRESSION .
   59 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   60                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   61 AND_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 88
    TO_minus  shift, and go to state 89

    T_RBRACKET    reduce using rule 46 (EXPRESSION)
    T_RBRACKET    [reduce using rule 61 (AND_EXPRESSION)]
    TP_semiColon  reduce using rule 46 (EXPRESSION)
    TP_semiColon  [reduce using rule 61 (AND_EXPRESSION)]
    $default      reduce using rule 61 (AND_EXPRESSION)


State 57

   62 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
   63 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    TO_ampersand  shift, and go to state 90

    $default  reduce using rule 63 (EXCLUSIVE_OR_EXPRESSION)


State 58

   64 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
   65 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 91

    $default  reduce using rule 65 (INCLUSIVE_OR_EXPRESSION)


State 59

   66 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . TO_OR EXCLUSIVE_OR_EXPRESSION
   67 CONDITIONAL_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    TO_OR  shift, and go to state 92

    $default  reduce using rule 67 (CONDITIONAL_EXPRESSION)


State 60

   68 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 68 (ASSIGNMENT_EXPRESSION)


State 61

   47 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 47 (EXPRESSION)


State 62

   32 DIRECT_DECLARATOR: DIRECT_DECLARATOR T_LBRACKET T_RBRACKET .

    $default  reduce using rule 32 (DIRECT_DECLARATOR)


State 63

   49 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION . T_RBRACKET

    T_RBRACKET  shift, and go to state 93


State 64

   20 JUMP_STATEMENT: TK_return TP_semiColon .

    $default  reduce using rule 20 (JUMP_STATEMENT)


State 65

   21 JUMP_STATEMENT: TK_return EXPRESSION . TP_semiColon

    TP_semiColon  shift, and go to state 94


State 66

   12 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST T_RBRACE .

    $default  reduce using rule 12 (COMPOUND_STATEMENT)


State 67

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST . T_RBRACE
   17 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACE      shift, and go to state 32
    T_RBRACE      shift, and go to state 95
    T_LBRACKET    shift, and go to state 38
    TK_return     shift, and go to state 39
    TP_semiColon  shift, and go to state 40
    TC_integer    shift, and go to state 41

    STATEMENT                  go to state 70
    COMPOUND_STATEMENT         go to state 43
    EXPRESSION_STATEMENT       go to state 46
    JUMP_STATEMENT             go to state 47
    EXPRESSION                 go to state 50
    PRIMARY_EXPRESSION         go to state 51
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 53
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 55
    ADDITIVE_EXPRESSION        go to state 56
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 60
    ASSIGNMENT_EXPRESSION      go to state 61


State 68

   15 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 15 (DECLARATION_LIST)


State 69

   11 COMPOUND_STATEMENT: T_LBRACE STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 11 (COMPOUND_STATEMENT)


State 70

   17 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 17 (STATEMENT_LIST)


State 71

   28 INIT_DECLARATOR: DECLARATOR .

    $default  reduce using rule 28 (INIT_DECLARATOR)


State 72

   18 EXPRESSION_STATEMENT: EXPRESSION TP_semiColon .

    $default  reduce using rule 18 (EXPRESSION_STATEMENT)


State 73

   70 ASSIGNMENT_OPERATOR: TO_equal .

    $default  reduce using rule 70 (ASSIGNMENT_OPERATOR)


State 74

   80 ASSIGNMENT_OPERATOR: TO_OrEqual .

    $default  reduce using rule 80 (ASSIGNMENT_OPERATOR)


State 75

   79 ASSIGNMENT_OPERATOR: TO_exOrEqual .

    $default  reduce using rule 79 (ASSIGNMENT_OPERATOR)


State 76

   78 ASSIGNMENT_OPERATOR: TO_andEqual .

    $default  reduce using rule 78 (ASSIGNMENT_OPERATOR)


State 77

   76 ASSIGNMENT_OPERATOR: TO_rightEqual .

    $default  reduce using rule 76 (ASSIGNMENT_OPERATOR)


State 78

   77 ASSIGNMENT_OPERATOR: TO_leftEqual .

    $default  reduce using rule 77 (ASSIGNMENT_OPERATOR)


State 79

   75 ASSIGNMENT_OPERATOR: TO_minusEqual .

    $default  reduce using rule 75 (ASSIGNMENT_OPERATOR)


State 80

   74 ASSIGNMENT_OPERATOR: TO_plusEqual .

    $default  reduce using rule 74 (ASSIGNMENT_OPERATOR)


State 81

   72 ASSIGNMENT_OPERATOR: TO_divEqual .

    $default  reduce using rule 72 (ASSIGNMENT_OPERATOR)


State 82

   71 ASSIGNMENT_OPERATOR: TO_multEqual .

    $default  reduce using rule 71 (ASSIGNMENT_OPERATOR)


State 83

   73 ASSIGNMENT_OPERATOR: TO_modEqual .

    $default  reduce using rule 73 (ASSIGNMENT_OPERATOR)


State 84

   69 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . CONDITIONAL_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 98
    ADDITIVE_EXPRESSION        go to state 99
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 58
    INCLUSIVE_OR_EXPRESSION    go to state 59
    CONDITIONAL_EXPRESSION     go to state 100


State 85

   56 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION  go to state 96
    POSTFIX_EXPRESSION  go to state 52
    UNARY_EXPRESSION    go to state 97
    CAST_EXPRESSION     go to state 101


State 86

   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION  go to state 96
    POSTFIX_EXPRESSION  go to state 52
    UNARY_EXPRESSION    go to state 97
    CAST_EXPRESSION     go to state 102


State 87

   57 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod . CAST_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION  go to state 96
    POSTFIX_EXPRESSION  go to state 52
    UNARY_EXPRESSION    go to state 97
    CAST_EXPRESSION     go to state 103


State 88

   59 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 104


State 89

   60 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus . MULTIPLICATIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 105


State 90

   62 AND_EXPRESSION: AND_EXPRESSION TO_ampersand . ADDITIVE_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 98
    ADDITIVE_EXPRESSION        go to state 106


State 91

   64 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr . AND_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 98
    ADDITIVE_EXPRESSION        go to state 99
    AND_EXPRESSION             go to state 107


State 92

   66 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR . EXCLUSIVE_OR_EXPRESSION

    T_IDENTIFIER  shift, and go to state 36
    T_LBRACKET    shift, and go to state 38
    TC_integer    shift, and go to state 41

    PRIMARY_EXPRESSION         go to state 96
    POSTFIX_EXPRESSION         go to state 52
    UNARY_EXPRESSION           go to state 97
    CAST_EXPRESSION            go to state 54
    MULTIPLICATIVE_EXPRESSION  go to state 98
    ADDITIVE_EXPRESSION        go to state 99
    AND_EXPRESSION             go to state 57
    EXCLUSIVE_OR_EXPRESSION    go to state 108


State 93

   49 PRIMARY_EXPRESSION: T_LBRACKET EXPRESSION T_RBRACKET .

    $default  reduce using rule 49 (PRIMARY_EXPRESSION)


State 94

   21 JUMP_STATEMENT: TK_return EXPRESSION TP_semiColon .

    $default  reduce using rule 21 (JUMP_STATEMENT)


State 95

   10 COMPOUND_STATEMENT: T_LBRACE DECLARATION_LIST STATEMENT_LIST T_RBRACE .

    $default  reduce using rule 10 (COMPOUND_STATEMENT)


State 96

   51 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 51 (POSTFIX_EXPRESSION)


State 97

   53 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 53 (CAST_EXPRESSION)


State 98

   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   56                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   57                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   58 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 85
    TO_asterix  shift, and go to state 86
    TO_mod      shift, and go to state 87

    $default  reduce using rule 58 (ADDITIVE_EXPRESSION)


State 99

   59 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   60                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   61 AND_EXPRESSION: ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 88
    TO_minus  shift, and go to state 89

    $default  reduce using rule 61 (AND_EXPRESSION)


State 100

   69 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR CONDITIONAL_EXPRESSION .

    $default  reduce using rule 69 (ASSIGNMENT_EXPRESSION)


State 101

   56 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_divide CAST_EXPRESSION .

    $default  reduce using rule 56 (MULTIPLICATIVE_EXPRESSION)


State 102

   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_asterix CAST_EXPRESSION .

    $default  reduce using rule 55 (MULTIPLICATIVE_EXPRESSION)


State 103

   57 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION TO_mod CAST_EXPRESSION .

    $default  reduce using rule 57 (MULTIPLICATIVE_EXPRESSION)


State 104

   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   56                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   57                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   59 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_plus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 85
    TO_asterix  shift, and go to state 86
    TO_mod      shift, and go to state 87

    $default  reduce using rule 59 (ADDITIVE_EXPRESSION)


State 105

   55 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . TO_asterix CAST_EXPRESSION
   56                          | MULTIPLICATIVE_EXPRESSION . TO_divide CAST_EXPRESSION
   57                          | MULTIPLICATIVE_EXPRESSION . TO_mod CAST_EXPRESSION
   60 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION TO_minus MULTIPLICATIVE_EXPRESSION .

    TO_divide   shift, and go to state 85
    TO_asterix  shift, and go to state 86
    TO_mod      shift, and go to state 87

    $default  reduce using rule 60 (ADDITIVE_EXPRESSION)


State 106

   59 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . TO_plus MULTIPLICATIVE_EXPRESSION
   60                    | ADDITIVE_EXPRESSION . TO_minus MULTIPLICATIVE_EXPRESSION
   62 AND_EXPRESSION: AND_EXPRESSION TO_ampersand ADDITIVE_EXPRESSION .

    TO_plus   shift, and go to state 88
    TO_minus  shift, and go to state 89

    $default  reduce using rule 62 (AND_EXPRESSION)


State 107

   62 AND_EXPRESSION: AND_EXPRESSION . TO_ampersand ADDITIVE_EXPRESSION
   64 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION TO_exclussiveOr AND_EXPRESSION .

    TO_ampersand  shift, and go to state 90

    $default  reduce using rule 64 (EXCLUSIVE_OR_EXPRESSION)


State 108

   64 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . TO_exclussiveOr AND_EXPRESSION
   66 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION TO_OR EXCLUSIVE_OR_EXPRESSION .

    TO_exclussiveOr  shift, and go to state 91

    $default  reduce using rule 66 (INCLUSIVE_OR_EXPRESSION)
